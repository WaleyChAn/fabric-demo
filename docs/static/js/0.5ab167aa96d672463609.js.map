{"version":3,"sources":["webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/babel-runtime/core-js/json/stringify.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/fabric/dist/fabric.js","webpack:///./node_modules/ieee754/index.js","webpack:///src/components/fabric.vue","webpack:///./src/components/fabric.vue?a402","webpack:///./src/components/fabric.vue","webpack:///src/views/demo.vue","webpack:///./src/views/demo.vue?b924","webpack:///./src/views/demo.vue"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","global","base64","__webpack_require__","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","this","allocUnsafe","from","value","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","base64Slice","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst","module","default","__esModule","core","$JSON","JSON","stringify","it","sqrt","atan2","PiBy180","PiBy2","proto","degreesToRadians","originXOffset","originYOffset","clone","toFixed","multipleSpacesRegex","fabric","version","document","window","HTMLDocument","Document","implementation","createHTMLDocument","virtualWindow","JSDOM","decodeURIComponent","features","FetchExternalResources","resources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","DOMParser","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","commaWsp","rePathCommand","reNonWord","fontPaths","iMatrix","svgNS","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","disableStyleCopyPaste","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","forceGLPutImageData","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","util","_once","_handler","off","bind","on","Observable","fire","options","listenersForEvent","filter","prop","once","Collection","_objects","add","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","getObjects","o","item","isEmpty","contains","deep","some","complexity","reduce","memo","current","CommonMethods","_setOptions","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_setObject","_set","key","toggle","get","PI","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","random","degrees","radiansToDegrees","radians","rotatePoint","point","origin","newPoint","Point","v","rotateVector","addEquals","vector","createVector","to","calcAngleBetweenVectors","acos","hypot","getHatVector","multiply","getBisector","A","B","C","AB","AC","alpha","phi","projectStrokeOnPoints","points","openPath","coords","s","strokeWidth","strokeUniformScalar","strokeUniform","scaleX","scaleY","getStrokeHatVector","scalar","forEach","p","miterVector","bisector","bisectorVector","strokeLineJoin","strokeMiterLimit","subtract","SQRT2","transformPoint","t","ignoreOffset","makeBoundingBoxFromPoints","transform","xPoints","minX","yPoints","minY","left","top","invertTransform","r","number","fractionDigits","parseFloat","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","camelize","charAt","toUpperCase","resolveNamespace","getSvgAttributes","attributes","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","enlivenedObjects","numLoadedObjects","numTotalObjects","onLoaded","error","enlivenObjectEnlivables","enlivenProps","ENLIVEN_PROPS","map","enlivedProps","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","sourcePath","centerPoint","Group","populateWithProperties","destination","properties","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","format","quality","multiplyTransformMatrices","is2x2","qrDecompose","denom","skewX","skewY","translateX","translateY","calcRotateMatrix","theta","calcDimensionsMatrix","scaleMatrix","flipX","flipY","tan","composeMatrix","matrix","resetObjectTransform","rotate","saveObjectTransform","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","matrixToSVG","NUM_FRACTION_DIGITS","removeTransformFromObject","inverted","finalTransform","calcOwnMatrix","applyTransformToObject","addTransformToObject","center","setPositionByOrigin","sizeAfterTransform","dimX","dimY","transformMatrix","bbox","mergeClipPaths","c1","c2","calcTransformMatrix","clipPath","hasStyleChanged","prevStyle","thisStyle","forTextSpans","stroke","fontWeight","fontStyle","textBackgroundColor","deltaY","overline","underline","linethrough","stylesToArray","styles","text","textLines","charIndex","stylesArray","keys","stylesFromArray","styleIndex","stylesObject","assign","_join","commandLengths","h","q","repeatedCommands","M","segmentToBezier","th2","th3","cosTh","sinTh","rx","ry","cx1","cy1","mT","fromX","fromY","costh2","sinth2","costh3","sinth3","toX","toY","calcVectorAngle","ux","uy","vx","vy","ta","tb","fromArcToBeziers","fx","fy","rot","large","sweep","segsNorm","rotateX","th","px","py","rx2","abs","ry2","py2","px2","pl","root","cx","cy","mTheta","dtheta","segments","ceil","result","mDelta","arcToSegments","calcLineLength","x1","y1","x2","y2","getPointOnCubicBezierIterator","p1x","p1y","p2x","p2y","p3x","p3y","p4x","p4y","pct","CB2","c3","CB3","c4","CB4","getTangentCubicIterator","invT","tangentX","tangentY","getPointOnQuadraticBezierIterator","QB2","QB3","getTangentQuadraticIterator","pathIterator","iterator","perc","tempP","tmpLen","findPercentageForDistance","segInfo","distance","nextLen","lastPerc","nextStep","angleFinder","getPathSegmentsInfo","tempInfo","totalLength","info","command","destX","destY","joinPath","pathData","segment","parsePath","pathString","currentPath","coordsStr","re","rNumber","rNumberCommaWsp","rFlagCommaWsp","regArcArgumentSequence","RegExp","coordsParsed","args","jlen","commandLength","repeatedCommand","k","klen","makePathSimpler","converted","previous","controlX","controlY","destinationPath","getSmoothPathFromPoints","correction","p1","p2","multSignX","multSignY","manyPoints","eq","midPoint","midPointFrom","getBoundsOfCurve","x0","y0","x3","y3","argsString","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","getPointOnPath","infos","segPercent","lerp","transformPath","pathOffset","pathSegment","newSegment","find","byProperty","condition","invoke","method","value1","value2","extend","Element","hasOwnProperty","getWholeChar","next","prev","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","couldUseAttachEvent","attachEvent","touchEvents","addListener","element","addEventListener","removeListener","removeEventListener","getPointer","event","scroll","getScrollLeftTop","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","isTouchEvent","pointerType","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","test","setStyle","elementStyle","cssText","normalizedProperty","styleFloat","setProperty","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","documentElement","body","scrollLeft","scrollTop","host","nodeType","defaultView","getComputedStyle","attr","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","setImageSmoothing","imageSmoothingEnabled","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","onreadystatechange","readyState","param","addParamToUrl","open","setRequestHeader","send","warn","RUNNING_ANIMATIONS","noop","defaultEasing","d","cancelAll","animations","animation","cancel","cancelByCanvas","cancelled","cancelByTarget","findAnimationsByTarget","findAnimationIndex","cancelFunc","findAnimation","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","removeFromRegistry","runningAnimations","currentValue","startValue","completionRate","durationRate","timestamp","time","Date","duration","finish","onChange","abort","easing","isMany","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","_value","valuePerc","cancelAnimFrame","calculateColor","begin","color","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","originalOnComplete","originalOnChange","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","vector-effect","image-rendering","colorAttributes","normalizeAttr","normalizeValue","parentAttributes","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","getElementsByTagName","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","reTransformList","reTransform","attributeValue","matrices","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","removeAttribute","createElementNS","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","hasAttribute","children","referenceClone","cloneNode","parseSVGDocument","parsingOptions","xlinkAttribute","attrs","xlink","el2","currentTrans","oldLength","el3","setAttributeNS","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","cssAttrs","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","results","_options","allElements","loadSVGFromString","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","regex","lastIndex","gradientDef","opacityAttr","createClipPathCallback","container","_newObj","fillRule","clipRule","usingElement","objTransformInv","gTransform","clipPathTag","clipPathOwner","scalarAdd","scalarAddEquals","subtractEquals","scalarSubtract","scalarSubtractEquals","multiplyEquals","divide","divideEquals","lt","lte","gt","gte","distanceFrom","dx","dy","setXY","setX","setY","setFromPoint","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","round","_source","toRgb","toHsl","hsl","toHsla","toHexa","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","scaleMap","skewMap","controls","LEFT","TOP","RIGHT","BOTTOM","CENTER","opposite","bottom","right","findCornerQuadrant","fabricObject","control","cornerAngle","fireEvent","canvasOptions","scaleIsProportional","eventData","uniformIsToggled","uniScaleKey","uniformScaling","isTransformCentered","originX","originY","scalingIsForbidden","by","scaleProportionally","lockX","lockScalingX","lockY","lockScalingY","commonEventInfo","pointer","wrapWithFixedAnchor","actionHandler","getCenterPoint","constraint","translateToOriginPoint","actionPerformed","wrapWithFireEvent","getLocalPoint","corner","getZoom","padding","localPoint","toLocalPoint","offsetX","offsetY","targetHasOneFlip","compensateScaleForSkew","oppositeSkew","scaleToCompensate","axis","reference","newValue","_getTransformedDimensions","skewObjectX","newSkew","dimNoSkew","totalSkewSize","currentSkew","hasSkewed","dimBeforeSkewing","skewObjectY","scaleObject","dim","signX","signY","forbidScaling","gestureScale","lockScalingFlip","original","oldScaleX","oldScaleY","scaleCursorStyleHandler","skewCursorStyleHandler","lockSkewingY","lockSkewingX","scaleSkewCursorStyleHandler","altActionKey","rotationWithSnapping","pivotPoint","lockRotation","hasRotated","lastAngle","ey","ex","curAngle","snapAngle","snapThreshold","rightAngleLocked","leftAngleLocked","scalingEqually","scalingX","scalingY","scalingYOrSkewingX","skewHandlerX","scalingXOrSkewingY","skewHandlerY","changeWidth","strokePadding","multiplier","oldWidth","newWidth","finalHandler","dragHandler","newLeft","newTop","moveX","moveY","scaleOrSkewActionName","isAlternative","rotationStyleHandler","cursorStyle","controlsUtils","renderCircleControl","styleOverride","xSize","sizeX","cornerSize","ySize","sizeY","transparentCorners","cornerStrokeColor","myLeft","myTop","save","fillStyle","cornerColor","strokeStyle","lineWidth","beginPath","arc","restore","renderSquareControl","xSizeBy2","ySizeBy2","strokeRect","Control","actionName","touchSizeX","touchSizeY","withConnection","mouseDownHandler","mouseUpHandler","getActionHandler","getMouseDownHandler","getMouseUpHandler","cursorStyleHandler","getActionName","getVisibility","controlKey","objectVisibility","_controlsVisibility","setVisibility","positionHandler","finalMatrix","calcCornerCoords","objectAngle","objectCornerSize","centerX","centerY","isTouch","cosHalfOffset","sinHalfOffset","cosHalfOffsetComp","sinHalfOffsetComp","controlTriangleAngle","cornerHypotenuse","newTheta","newThetaComp","tl","tr","bl","br","render","cornerStyle","getColorStop","colorAlpha","keyValuePairs","gradientTransform","gradientUnits","option","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","withViewport","additionalTransform","sort","reverse","minRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","instance","svgOptions","colorStopEls","getLinearCoords","getRadialCoords","propValue","finalValue","__convertPercentUnitsToValues","repeat","patternTransform","setOptions","isError","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","nonScaling","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","renderAndResetBound","renderAndReset","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","viewportTransform","backgroundVpt","overlayVpt","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","scaleRatio","__initRetinaScaling","lowerCanvasEl","contextContainer","upperCanvasEl","contextTop","_offset","image","__setBgOverlayImage","__setBgOverlayColor","_createCanvasElement","_originalCanvasStyle","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","cacheCanvasEl","wrapperEl","setViewportTransform","vpt","activeObject","_activeObject","backgroundObject","overlayObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","getElement","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","_renderBackgroundOrOverlay","needsVpt","moveTo","lineTo","closePath","getCenter","centerObjectH","_centerObject","centerObjectV","centerObject","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","excludeFromExport","_toObject","__serializeBgOverlay","originalValue","bgImage","bgColor","background","overlay","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","row","rowIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","classList","DataURLExporter","EMPTY_JSON","supports","setLineDash","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeDashArray","limitedToCanvasSize","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","needsFullRender","_resetShadow","_isOutSideCanvas","PencilBrush","decimate","drawStraightLine","straightLineKey","_points","_hasStraightLine","_drawSegment","quadraticCurveTo","onMouseDown","_isMainEvent","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","convertPointsToSVGPath","_isEmptySVGPath","createPath","Path","decimatePoints","adjustedDistance","lastPoint","newPoints","CircleBrush","drawDot","addPoint","dot","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","fillRect","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","_initInteractive","_createCacheCanvas","centeredScaling","centeredRotation","centeredKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","stopContextMenu","fireRightClick","fireMiddleClick","targets","enablePointerEvents","_hoveredTarget","_hoveredTargets","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_normalizePointer","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","_shouldCenterTransform","action","altKey","centerTransform","_getOriginFromCorner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","__corner","lastX","lastY","shiftKey","_beforeTransform","setCursor","cursor","viewportStart","viewportExtent","extent","maxX","maxY","strokeOffset","_setLineDash","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","shouldLookForActive","_findTargetCorner","_searchPossibleTargets","_checkTarget","globalPointer","containsPoint","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","retinaScaling","lowerCanvasClass","_copyCanvasStyle","getTopContext","class","touch-action","-ms-touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","oldObject","selected","deselected","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","_renderControls","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","clearContextTop","addEventOptions","passive","checkClick","button","mainTouchId","_bindEvents","addOrRemove","_getEventPrefix","functor","eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","_onTouchEnd","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","_target","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","getPointerId","evt","identifier","pointerId","isPrimary","touches","__onMouseDown","__onMouseUp","_willAddMouseDown","__onMouseMove","_shouldRender","groupSelector","shouldRender","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","targetWasActive","_maybeGroupObjects","activeOn","isMoving","originalControl","originalMouseUpHandler","_setCursorFromEvent","eventType","subTargets","absolutePointer","currentTarget","currentSubTargets","_scaling","hasStateChanged","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","_transformObject","_fireOverOutEvents","fireSyntheticInOutEvents","oldTarget","evtOut","canvasEvtOut","evtIn","canvasEvtIn","_draggedoverTarget","config","inOpt","outOpt","inFires","targetChanged","previousTarget","nextTarget","reset","_performTransformAction","getCornerCursor","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","newVp","originalRetina","originalContextTop","loadFromJSON","json","serialized","_enlivenObjects","_setBgOverlay","enlivenedCanvasClip","__setupCanvas","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","objectCaching","touchCornerSize","borderColor","borderDashArray","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","hasBorders","lockMovementX","lockMovementY","statefullCache","noScaleCache","dirty","paintFirst","stateProperties","cacheProperties","colorProperties","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","getHeightOfLine","setTransform","needFullTransform","_removeDefaultValues","getObjectScaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_drawClipPath","skipCanvas","_getNonTransformedDimensions","_removeShadow","_setStrokeStyles","decl","lineDashOffset","_applyPatternForTransformedGradient","_applyPatternGradientTransform","_setFillStyles","dashArray","drawBorders","forActiveSelection","drawBordersInGroup","scaling","multX","multY","_renderPaintInOrder","_renderStroke","_renderFill","pCtx","pCanvas","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalGroup","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","lineCoords","ownMatrixCache","matrixCache","_getCoords","absolute","calculate","calcACoords","calcLineCoords","getCoords","pointTL","pointBR","other","otherCoords","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","every","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","cosP","sinP","cosPSinP","cosPMinusSinP","calcOCoords","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","_calculateCurrentDimensions","forEachControl","w","skipCorners","_setCornerCoords","transformMatrixKey","prefix","cache","tMatrix","noSkew","_finalizeDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","decoration","getSvgCommons","getSvgTransform","full","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","styleInfo","shadowInfo","withShadow","vectorEffect","absoluteClipPath","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","_isEqual","origValue","firstPass","forTouch","isControlVisible","touchCorner","fn","controlObject","wh","shouldStroke","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","propIsColor","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","bezierCurveTo","Polyline","exactBoundingBox","_setPositionDimensions","_projectStrokeOnPoints","correctLeftTop","calcDim","_calcDimensions","correctSize","fromSVG","diffX","diffY","commonRender","fromElementGenerator","_class","Polygon","_setPath","_renderPathCommands","subpathStartX","subpathStartY","_getOffsetTransform","digits","aX","aY","pathUrl","elivenedObjects","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","nested","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","groupMatrix","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","imageSmoothing","filters","_initElement","_element","setElement","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","getCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","imageRendering","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","elWidth","elHeight","sX","sY","sW","sH","maxDestW","maxDestH","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","canUseUint8Clamped","copyGLTo2D","startTime","drawImageTime","testContext","now","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","filterType","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","renderer","vendor","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","main","mainParameter","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","createImageData","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","yy","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Vibrance","vibrance","avg","amt","uVibrance","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","additionalProps","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","pathStartOffset","pathSide","pathAlign","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","direction","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","setPathInfo","initDimensions","segmentsInfo","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","calcTextHeight","enlargeSpaces","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","missingNewlineOffset","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","drawStart","leftOffset","_getLeftOffset","lineTopOffset","_getTopOffset","boxStart","boxWidth","_getLineLeftOffset","getValueOfPropertyAt","renderLeft","getFontCache","cacheProp","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","startingPoint","totalPathLength","lineBounds","positionInPath","_getGraphemeBox","_setGraphemeOnPath","numOfSpaces","centerPosition","skipLeft","getCompleteStyleDeclaration","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","drawingLeft","isJustify","charsToRender","shortCut","isLtr","currentDirection","_renderChar","_applyPatternGradientTransformText","handleFiller","fillOffsets","strokeOffsets","_getStyleDeclaration","fullDecl","shouldFill","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","lineDiff","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","topOffset","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","allProperties","needsDims","isAddingPath","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","objectCopy","textInstance","pathInstance","p3","0","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","hiddenTextareaContainer","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","bound","cursorLocation","charHeight","__isMousedown","hiddenTextarea","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","drawWidth","drawHeight","extraTop","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","objCopy","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","focus","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","activeElement","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPosition","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","isEndOfLine","numIndex","styleCarriedOver","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","doubleClickHandler","tripleClickHandler","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","keysMapRtl","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyMap","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","removeFrom","removeTo","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","linesToKeep","scaleSkewStyleHandler","scaleStyleHandler","objectControls","ml","mr","mb","mtr","textBoxControls","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","components_fabric","name","innerValue","downPoint","isDragging","imageSize","ctrlList","label","icon","ctrlType","watch","immediate","mounted","init","methods","_wrapper","$refs","refFabricWrapper","wrapperWidth","wrapperHeight","polygonData","currentPolygon","onCtrlTypeChange","onMouseWheel","percentage","_this2","onZoomSliderChange","onSetZoomByMode","_this3","opt","lastPosX","lastPosY","_this4","createPolygon","$nextTick","handlerComplete","$emit","createRect","stringify_default","selectortype_template_index_0_src_components_fabric","_vm","_h","$createElement","_c","_self","staticClass","moving","dragging","editing","ref","_v","trigger","placement","format-tooltip","step","input","model","$$v","expression","slot","_s","effect","content","click","$event","_l","staticRenderFns","demo","components","OfFabric","normalizeComponent","ssrContext","demoPdf","title","calloutList","views_demo","demo_Component","demo_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/0.5ab167aa96d672463609.js","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = EKta\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = EuP9\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/json/stringify.js\n// module id = mvHQ\n// module chunks = 0","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/json/stringify.js\n// module id = qkKv\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = sOR5\n// module chunks = 0","/* build: `node build.js modules=ALL exclude=gestures,accessors,erasing requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '5.3.0' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  }\n  else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n  var virtualWindow = new jsdom.JSDOM(\n    decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n    {\n      features: {\n        FetchExternalResources: ['img']\n      },\n      resources: 'usable'\n    }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order', 'vector-effect',\n  'instantiated_by_use', 'clip-path',\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)';\nfabric.rePathCommand = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:[eE][-+]?\\d+)?)/ig;\nfabric.reNonWord = /[ \\n\\.,;!\\?\\-]/;\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.svgNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\nfabric.disableStyleCopyPaste = false;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to bezier conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function on(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  function _once(eventName, handler) {\n    var _handler = function () {\n      handler.apply(this, arguments);\n      this.off(eventName, _handler);\n    }.bind(this);\n    this.on(eventName, _handler);\n  }\n\n  function once(eventName, handler) {\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        _once.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _once.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function off(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @memberOf fabric.Observable\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    fire: fire,\n    on: on,\n    once: once,\n    off: off,\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function (object, deep) {\n    if (this._objects.indexOf(object) > -1) {\n      return true;\n    }\n    else if (deep) {\n      return this._objects.some(function (obj) {\n        return typeof obj.contains === 'function' && obj.contains(object, true);\n      });\n    }\n    return false;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      this._set(key, value);\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      var newPoint = new fabric.Point(point.x - origin.x, point.y - origin.y),\n          v = fabric.util.rotateVector(newPoint, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Creates a vetor from points represented as a point\n     * @static\n     * @memberOf fabric.util\n     *\n     * @typedef {Object} Point\n     * @property {number} x\n     * @property {number} y\n     *\n     * @param {Point} from\n     * @param {Point} to\n     * @returns {Point} vector\n     */\n    createVector: function (from, to) {\n      return new fabric.Point(to.x - from.x, to.y - from.y);\n    },\n\n    /**\n     * Calculates angle between 2 vectors using dot product\n     * @static\n     * @memberOf fabric.util\n     * @param {Point} a\n     * @param {Point} b\n     * @returns the angle in radian between the vectors\n     */\n    calcAngleBetweenVectors: function (a, b) {\n      return Math.acos((a.x * b.x + a.y * b.y) / (Math.hypot(a.x, a.y) * Math.hypot(b.x, b.y)));\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {Point} v\n     * @returns {Point} vector representing the unit vector of pointing to the direction of `v`\n     */\n    getHatVector: function (v) {\n      return new fabric.Point(v.x, v.y).multiply(1 / Math.hypot(v.x, v.y));\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {Point} A\n     * @param {Point} B\n     * @param {Point} C\n     * @returns {{ vector: Point, angle: number }} vector representing the bisector of A and A's angle\n     */\n    getBisector: function (A, B, C) {\n      var AB = fabric.util.createVector(A, B), AC = fabric.util.createVector(A, C);\n      var alpha = fabric.util.calcAngleBetweenVectors(AB, AC);\n      //  check if alpha is relative to AB->BC\n      var ro = fabric.util.calcAngleBetweenVectors(fabric.util.rotateVector(AB, alpha), AC);\n      var phi = alpha * (ro === 0 ? 1 : -1) / 2;\n      return {\n        vector: fabric.util.getHatVector(fabric.util.rotateVector(AB, phi)),\n        angle: alpha\n      };\n    },\n\n    /**\n     * Project stroke width on points returning 2 projections for each point as follows:\n     * - `miter`: 2 points corresponding to the outer boundary and the inner boundary of stroke.\n     * - `bevel`: 2 points corresponding to the bevel boundaries, tangent to the bisector.\n     * - `round`: same as `bevel`\n     * Used to calculate object's bounding box\n     * @static\n     * @memberOf fabric.util\n     * @param {Point[]} points\n     * @param {Object} options\n     * @param {number} options.strokeWidth\n     * @param {'miter'|'bevel'|'round'} options.strokeLineJoin\n     * @param {number} options.strokeMiterLimit https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit\n     * @param {boolean} options.strokeUniform\n     * @param {number} options.scaleX\n     * @param {number} options.scaleY\n     * @param {boolean} [openPath] whether the shape is open or not, affects the calculations of the first and last points\n     * @returns {fabric.Point[]} array of size 2n/4n of all suspected points\n     */\n    projectStrokeOnPoints: function (points, options, openPath) {\n      var coords = [], s = options.strokeWidth / 2,\n          strokeUniformScalar = options.strokeUniform ?\n            new fabric.Point(1 / options.scaleX, 1 / options.scaleY) : new fabric.Point(1, 1),\n          getStrokeHatVector = function (v) {\n            var scalar = s / (Math.hypot(v.x, v.y));\n            return new fabric.Point(v.x * scalar * strokeUniformScalar.x, v.y * scalar * strokeUniformScalar.y);\n          };\n      if (points.length <= 1) {return coords;}\n      points.forEach(function (p, index) {\n        var A = new fabric.Point(p.x, p.y), B, C;\n        if (index === 0) {\n          C = points[index + 1];\n          B = openPath ? getStrokeHatVector(fabric.util.createVector(C, A)).addEquals(A) : points[points.length - 1];\n        }\n        else if (index === points.length - 1) {\n          B = points[index - 1];\n          C = openPath ? getStrokeHatVector(fabric.util.createVector(B, A)).addEquals(A) : points[0];\n        }\n        else {\n          B = points[index - 1];\n          C = points[index + 1];\n        }\n        var bisector = fabric.util.getBisector(A, B, C),\n            bisectorVector = bisector.vector,\n            alpha = bisector.angle,\n            scalar,\n            miterVector;\n        if (options.strokeLineJoin === 'miter') {\n          scalar = -s / Math.sin(alpha / 2);\n          miterVector = new fabric.Point(\n            bisectorVector.x * scalar * strokeUniformScalar.x,\n            bisectorVector.y * scalar * strokeUniformScalar.y\n          );\n          if (Math.hypot(miterVector.x, miterVector.y) / s <= options.strokeMiterLimit) {\n            coords.push(A.add(miterVector));\n            coords.push(A.subtract(miterVector));\n            return;\n          }\n        }\n        scalar = -s * Math.SQRT2;\n        miterVector = new fabric.Point(\n          bisectorVector.x * scalar * strokeUniformScalar.x,\n          bisectorVector.y * scalar * strokeUniformScalar.y\n        );\n        coords.push(A.add(miterVector));\n        coords.push(A.subtract(miterVector));\n      });\n      return coords;\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points, transform) {\n      if (transform) {\n        for (var i = 0; i < points.length; i++) {\n          points[i] = fabric.util.transformPoint(points[i], transform);\n        }\n      }\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img, false);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      // crossOrigin null is the same as not set.\n      if (url.indexOf('data') !== 0 &&\n        crossOrigin !== undefined &&\n        crossOrigin !== null) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function(obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Creates corresponding fabric instances residing in an object, e.g. `clipPath`\n     * @see {@link fabric.Object.ENLIVEN_PROPS}\n     * @param {Object} object\n     * @param {Object} [context] assign enlived props to this object (pass null to skip this)\n     * @param {(objects:fabric.Object[]) => void} callback\n     */\n    enlivenObjectEnlivables: function (object, context, callback) {\n      var enlivenProps = fabric.Object.ENLIVEN_PROPS.filter(function (key) { return !!object[key]; });\n      fabric.util.enlivenObjects(enlivenProps.map(function (key) { return object[key]; }), function (enlivedProps) {\n        var objects = {};\n        enlivenProps.forEach(function (key, index) {\n          objects[key] = enlivedProps[index];\n          context && (context[key] = enlivedProps[index]);\n        });\n        callback && callback(objects);\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        if (typeof path !== 'undefined') {\n          elements[0].sourcePath = path;\n        }\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Array.isArray(properties)) {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x3 matrix into transform components\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle] angle in degrees\n     * @return {Number[]} transform matrix\n     */\n    calcRotateMatrix: function(options) {\n      if (!options.angle) {\n        return fabric.iMatrix.concat();\n      }\n      var theta = fabric.util.degreesToRadians(options.angle),\n          cos = fabric.util.cos(theta),\n          sin = fabric.util.sin(theta);\n      return [cos, sin, -sin, cos, 0, 0];\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet.\n     * is called DimensionsTransformMatrix because those properties are the one that influence\n     * the size of the resulting box of the object.\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewY]\n     * @return {Number[]} transform matrix\n     */\n    calcDimensionsMatrix: function(options) {\n      var scaleX = typeof options.scaleX === 'undefined' ? 1 : options.scaleX,\n          scaleY = typeof options.scaleY === 'undefined' ? 1 : options.scaleY,\n          scaleMatrix = [\n            options.flipX ? -scaleX : scaleX,\n            0,\n            0,\n            options.flipY ? -scaleY : scaleY,\n            0,\n            0],\n          multiply = fabric.util.multiplyTransformMatrices,\n          degreesToRadians = fabric.util.degreesToRadians;\n      if (options.skewX) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, 0, Math.tan(degreesToRadians(options.skewX)), 1],\n          true);\n      }\n      if (options.skewY) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, Math.tan(degreesToRadians(options.skewY)), 0, 1],\n          true);\n      }\n      return scaleMatrix;\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle]\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.translateX]\n     * @param  {Number} [options.translateY]\n     * @return {Number[]} transform matrix\n     */\n    composeMatrix: function(options) {\n      var matrix = [1, 0, 0, 1, options.translateX || 0, options.translateY || 0],\n          multiply = fabric.util.multiplyTransformMatrices;\n      if (options.angle) {\n        matrix = multiply(matrix, fabric.util.calcRotateMatrix(options));\n      }\n      if (options.scaleX !== 1 || options.scaleY !== 1 ||\n          options.skewX || options.skewY || options.flipX || options.flipY) {\n        matrix = multiply(matrix, fabric.util.calcDimensionsMatrix(options));\n      }\n      return matrix;\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    /**\n     * Finds the scale for the object source to fit inside the object destination,\n     * keeping aspect ratio intact.\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Object | fabric.Object} source\n     * @param {Number} source.height natural unscaled height of the object\n     * @param {Number} source.width natural unscaled width of the object\n     * @param {Object | fabric.Object} destination\n     * @param {Number} destination.height natural unscaled height of the object\n     * @param {Number} destination.width natural unscaled width of the object\n     * @return {Number} scale factor to apply to source to fit into destination\n     */\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * Finds the scale for the object source to cover entirely the object destination,\n     * keeping aspect ratio intact.\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Object | fabric.Object} source\n     * @param {Number} source.height natural unscaled height of the object\n     * @param {Number} source.width natural unscaled width of the object\n     * @param {Object | fabric.Object} destination\n     * @param {Number} destination.height natural unscaled height of the object\n     * @param {Number} destination.width natural unscaled width of the object\n     * @return {Number} scale factor to apply to source to cover destination\n     */\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} transform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function(transform) {\n      return 'matrix(' + transform.map(function(value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    },\n\n    /**\n     * given an object and a transform, apply the inverse transform to the object,\n     * this is equivalent to remove from that object that transformation, so that\n     * added in a space with the removed transform, the object will be the same as before.\n     * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\n     * Removing from an object a transfrom that rotate by 30deg is like rotating by 30deg\n     * in the opposite direction.\n     * This util is used to add objects inside transformed groups or nested groups.\n     * @memberOf fabric.util\n     * @param {fabric.Object} object the object you want to transform\n     * @param {Array} transform the destination transform\n     */\n    removeTransformFromObject: function(object, transform) {\n      var inverted = fabric.util.invertTransform(transform),\n          finalTransform = fabric.util.multiplyTransformMatrices(inverted, object.calcOwnMatrix());\n      fabric.util.applyTransformToObject(object, finalTransform);\n    },\n\n    /**\n     * given an object and a transform, apply the transform to the object.\n     * this is equivalent to change the space where the object is drawn.\n     * Adding to an object a transform that scale by 2 is like scaling it by 2.\n     * This is used when removing an object from an active selection for example.\n     * @memberOf fabric.util\n     * @param {fabric.Object} object the object you want to transform\n     * @param {Array} transform the destination transform\n     */\n    addTransformToObject: function(object, transform) {\n      fabric.util.applyTransformToObject(\n        object,\n        fabric.util.multiplyTransformMatrices(transform, object.calcOwnMatrix())\n      );\n    },\n\n    /**\n     * discard an object transform state and apply the one from the matrix.\n     * @memberOf fabric.util\n     * @param {fabric.Object} object the object you want to transform\n     * @param {Array} transform the destination transform\n     */\n    applyTransformToObject: function(object, transform) {\n      var options = fabric.util.qrDecompose(transform),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * given a width and height, return the size of the bounding box\n     * that can contains the box with width/height with applied transform\n     * described in options.\n     * Use to calculate the boxes around objects for controls.\n     * @memberOf fabric.util\n     * @param {Number} width\n     * @param {Number} height\n     * @param {Object} options\n     * @param {Number} options.scaleX\n     * @param {Number} options.scaleY\n     * @param {Number} options.skewX\n     * @param {Number} options.skewY\n     * @return {Object.x} width of containing\n     * @return {Object.y} height of containing\n     */\n    sizeAfterTransform: function(width, height, options) {\n      var dimX = width / 2, dimY = height / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          transformMatrix = fabric.util.calcDimensionsMatrix(options),\n          bbox = fabric.util.makeBoundingBoxFromPoints(points, transformMatrix);\n      return {\n        x: bbox.width,\n        y: bbox.height,\n      };\n    },\n\n    /**\n     * Merges 2 clip paths into one visually equal clip path\n     *\n     * **IMPORTANT**:\\\n     * Does **NOT** clone the arguments, clone them proir if necessary.\n     *\n     * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.\n     * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.\n     *\n     * In order to handle the `inverted` property we follow logic described in the following cases:\\\n     * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\\n     * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\\n     * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.\n     *\n     * @memberOf fabric.util\n     * @param {fabric.Object} c1\n     * @param {fabric.Object} c2\n     * @returns {fabric.Object} merged clip path\n     */\n    mergeClipPaths: function (c1, c2) {\n      var a = c1, b = c2;\n      if (a.inverted && !b.inverted) {\n        //  case (2)\n        a = c2;\n        b = c1;\n      }\n      //  `b` becomes `a`'s clip path so we transform `b` to `a` coordinate plane\n      fabric.util.applyTransformToObject(\n        b,\n        fabric.util.multiplyTransformMatrices(\n          fabric.util.invertTransform(a.calcTransformMatrix()),\n          b.calcTransformMatrix()\n        )\n      );\n      //  assign the `inverted` prop to the wrapping group\n      var inverted = a.inverted && b.inverted;\n      if (inverted) {\n        //  case (1)\n        a.inverted = b.inverted = false;\n      }\n      return new fabric.Group([a], { clipPath: b, inverted: inverted });\n    },\n\n    /**\n     * @memberOf fabric.util\n     * @param {Object} prevStyle first style to compare\n     * @param {Object} thisStyle second style to compare\n     * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties\n     * @return {boolean} true if the style changed\n     */\n    hasStyleChanged: function(prevStyle, thisStyle, forTextSpans) {\n      forTextSpans = forTextSpans || false;\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.deltaY !== thisStyle.deltaY) ||\n              (forTextSpans &&\n                (prevStyle.overline !== thisStyle.overline ||\n                prevStyle.underline !== thisStyle.underline ||\n                prevStyle.linethrough !== thisStyle.linethrough));\n    },\n\n    /**\n     * Returns the array form of a text object's inline styles property with styles grouped in ranges\n     * rather than per character. This format is less verbose, and is better suited for storage\n     * so it is used in serialization (not during runtime).\n     * @memberOf fabric.util\n     * @param {object} styles per character styles for a text object\n     * @param {String} text the text string that the styles are applied to\n     * @return {{start: number, end: number, style: object}[]}\n     */\n    stylesToArray: function(styles, text) {\n      // clone style structure to prevent mutation\n      var styles = fabric.util.object.clone(styles, true),\n          textLines = text.split('\\n'),\n          charIndex = -1, prevStyle = {}, stylesArray = [];\n      //loop through each textLine\n      for (var i = 0; i < textLines.length; i++) {\n        if (!styles[i]) {\n          //no styles exist for this line, so add the line's length to the charIndex total\n          charIndex += textLines[i].length;\n          continue;\n        }\n        //loop through each character of the current line\n        for (var c = 0; c < textLines[i].length; c++) {\n          charIndex++;\n          var thisStyle = styles[i][c];\n          //check if style exists for this character\n          if (thisStyle && Object.keys(thisStyle).length > 0) {\n            var styleChanged = fabric.util.hasStyleChanged(prevStyle, thisStyle, true);\n            if (styleChanged) {\n              stylesArray.push({\n                start: charIndex,\n                end: charIndex + 1,\n                style: thisStyle\n              });\n            }\n            else {\n              //if style is the same as previous character, increase end index\n              stylesArray[stylesArray.length - 1].end++;\n            }\n          }\n          prevStyle = thisStyle || {};\n        }\n      }\n      return stylesArray;\n    },\n\n    /**\n     * Returns the object form of the styles property with styles that are assigned per\n     * character rather than grouped by range. This format is more verbose, and is\n     * only used during runtime (not for serialization/storage)\n     * @memberOf fabric.util\n     * @param {Array} styles the serialized form of a text object's styles\n     * @param {String} text the text string that the styles are applied to\n     * @return {Object}\n     */\n    stylesFromArray: function(styles, text) {\n      if (!Array.isArray(styles)) {\n        return styles;\n      }\n      var textLines = text.split('\\n'),\n          charIndex = -1, styleIndex = 0, stylesObject = {};\n      //loop through each textLine\n      for (var i = 0; i < textLines.length; i++) {\n        //loop through each character of the current line\n        for (var c = 0; c < textLines[i].length; c++) {\n          charIndex++;\n          //check if there's a style collection that includes the current character\n          if (styles[styleIndex]\n            && styles[styleIndex].start <= charIndex\n            && charIndex < styles[styleIndex].end) {\n            //create object for line index if it doesn't exist\n            stylesObject[i] = stylesObject[i] || {};\n            //assign a style at this character's index\n            stylesObject[i][c] = Object.assign({}, styles[styleIndex].style);\n            //if character is at the end of the current style collection, move to the next\n            if (charIndex === styles[styleIndex].end - 1) {\n              styleIndex++;\n            }\n          }\n        }\n      }\n      return stylesObject;\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  var _join = Array.prototype.join,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return ['C',\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][5];\n      fromY = result[i][6];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    return result;\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of bezier\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  // TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts arc to a bunch of bezier curves\n   * @param {Number} fx starting point x\n   * @param {Number} fy starting point y\n   * @param {Array} coords Arc command\n   */\n  function fromArcToBeziers(fx, fy, coords) {\n    var rx = coords[1],\n        ry = coords[2],\n        rot = coords[3],\n        large = coords[4],\n        sweep = coords[5],\n        tx = coords[6],\n        ty = coords[7],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segsNorm[i][1] += fx;\n      segsNorm[i][2] += fy;\n      segsNorm[i][3] += fx;\n      segsNorm[i][4] += fy;\n      segsNorm[i][5] += fx;\n      segsNorm[i][6] += fy;\n    }\n    return segsNorm;\n  };\n\n  /**\n   * This function take a parsed SVG path and make it simpler for fabricJS logic.\n   * simplification consist of: only UPPERCASE absolute commands ( relative converted to absolute )\n   * S converted in C, T converted in Q, A converted in C.\n   * @param {Array} path the array of commands of a parsed svg path for fabric.Path\n   * @return {Array} the simplified array of commands of a parsed svg path for fabric.Path\n   */\n  function makePathSimpler(path) {\n    // x and y represent the last point of the path. the previous command point.\n    // we add them to each relative command to make it an absolute comment.\n    // we also swap the v V h H with L, because are easier to transform.\n    var x = 0, y = 0, len = path.length,\n        // x1 and y1 represent the last point of the subpath. the subpath is started with\n        // m or M command. When a z or Z command is drawn, x and y need to be resetted to\n        // the last x1 and y1.\n        x1 = 0, y1 = 0, current, i, converted,\n        // previous will host the letter of the previous command, to handle S and T.\n        // controlX and controlY will host the previous reflected control point\n        destinationPath = [], previous, controlX, controlY;\n    for (i = 0; i < len; ++i) {\n      converted = false;\n      current = path[i].slice(0);\n      switch (current[0]) { // first letter\n        case 'l': // lineto, relative\n          current[0] = 'L';\n          current[1] += x;\n          current[2] += y;\n          // falls through\n        case 'L':\n          x = current[1];\n          y = current[2];\n          break;\n        case 'h': // horizontal lineto, relative\n          current[1] += x;\n          // falls through\n        case 'H':\n          current[0] = 'L';\n          current[2] = y;\n          x = current[1];\n          break;\n        case 'v': // vertical lineto, relative\n          current[1] += y;\n          // falls through\n        case 'V':\n          current[0] = 'L';\n          y = current[1];\n          current[1] = x;\n          current[2] = y;\n          break;\n        case 'm': // moveTo, relative\n          current[0] = 'M';\n          current[1] += x;\n          current[2] += y;\n          // falls through\n        case 'M':\n          x = current[1];\n          y = current[2];\n          x1 = current[1];\n          y1 = current[2];\n          break;\n        case 'c': // bezierCurveTo, relative\n          current[0] = 'C';\n          current[1] += x;\n          current[2] += y;\n          current[3] += x;\n          current[4] += y;\n          current[5] += x;\n          current[6] += y;\n          // falls through\n        case 'C':\n          controlX = current[3];\n          controlY = current[4];\n          x = current[5];\n          y = current[6];\n          break;\n        case 's': // shorthand cubic bezierCurveTo, relative\n          current[0] = 'S';\n          current[1] += x;\n          current[2] += y;\n          current[3] += x;\n          current[4] += y;\n          // falls through\n        case 'S':\n          // would be sScC but since we are swapping sSc for C, we check just that.\n          if (previous === 'C') {\n            // calculate reflection of previous control points\n            controlX = 2 * x - controlX;\n            controlY = 2 * y - controlY;\n          }\n          else {\n            // If there is no previous command or if the previous command was not a C, c, S, or s,\n            // the control point is coincident with the current point\n            controlX = x;\n            controlY = y;\n          }\n          x = current[3];\n          y = current[4];\n          current[0] = 'C';\n          current[5] = current[3];\n          current[6] = current[4];\n          current[3] = current[1];\n          current[4] = current[2];\n          current[1] = controlX;\n          current[2] = controlY;\n          // current[3] and current[4] are NOW the second control point.\n          // we keep it for the next reflection.\n          controlX = current[3];\n          controlY = current[4];\n          break;\n        case 'q': // quadraticCurveTo, relative\n          current[0] = 'Q';\n          current[1] += x;\n          current[2] += y;\n          current[3] += x;\n          current[4] += y;\n          // falls through\n        case 'Q':\n          controlX = current[1];\n          controlY = current[2];\n          x = current[3];\n          y = current[4];\n          break;\n        case 't': // shorthand quadraticCurveTo, relative\n          current[0] = 'T';\n          current[1] += x;\n          current[2] += y;\n          // falls through\n        case 'T':\n          if (previous === 'Q') {\n            // calculate reflection of previous control point\n            controlX = 2 * x - controlX;\n            controlY = 2 * y - controlY;\n          }\n          else {\n            // If there is no previous command or if the previous command was not a Q, q, T or t,\n            // assume the control point is coincident with the current point\n            controlX = x;\n            controlY = y;\n          }\n          current[0] = 'Q';\n          x = current[1];\n          y = current[2];\n          current[1] = controlX;\n          current[2] = controlY;\n          current[3] = x;\n          current[4] = y;\n          break;\n        case 'a':\n          current[0] = 'A';\n          current[6] += x;\n          current[7] += y;\n          // falls through\n        case 'A':\n          converted = true;\n          destinationPath = destinationPath.concat(fromArcToBeziers(x, y, current));\n          x = current[6];\n          y = current[7];\n          break;\n        case 'z':\n        case 'Z':\n          x = x1;\n          y = y1;\n          break;\n        default:\n      }\n      if (!converted) {\n        destinationPath.push(current);\n      }\n      previous = current[0];\n    }\n    return destinationPath;\n  };\n\n  /**\n   * Calc length from point x1,y1 to x2,y2\n   * @param {Number} x1 starting point x\n   * @param {Number} y1 starting point y\n   * @param {Number} x2 starting point x\n   * @param {Number} y2 starting point y\n   * @return {Number} length of segment\n   */\n  function calcLineLength(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n\n  // functions for the Cubic beizer\n  // taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\n  function CB1(t) {\n    return t * t * t;\n  }\n  function CB2(t) {\n    return 3 * t * t * (1 - t);\n  }\n  function CB3(t) {\n    return 3 * t * (1 - t) * (1 - t);\n  }\n  function CB4(t) {\n    return (1 - t) * (1 - t) * (1 - t);\n  }\n\n  function getPointOnCubicBezierIterator(p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\n    return function(pct) {\n      var c1 = CB1(pct), c2 = CB2(pct), c3 = CB3(pct), c4 = CB4(pct);\n      return {\n        x: p4x * c1 + p3x * c2 + p2x * c3 + p1x * c4,\n        y: p4y * c1 + p3y * c2 + p2y * c3 + p1y * c4\n      };\n    };\n  }\n\n  function getTangentCubicIterator(p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\n    return function (pct) {\n      var invT = 1 - pct,\n          tangentX = (3 * invT * invT * (p2x - p1x)) + (6 * invT * pct * (p3x - p2x)) +\n          (3 * pct * pct * (p4x - p3x)),\n          tangentY = (3 * invT * invT * (p2y - p1y)) + (6 * invT * pct * (p3y - p2y)) +\n          (3 * pct * pct * (p4y - p3y));\n      return Math.atan2(tangentY, tangentX);\n    };\n  }\n\n  function QB1(t) {\n    return t * t;\n  }\n\n  function QB2(t) {\n    return 2 * t * (1 - t);\n  }\n\n  function QB3(t) {\n    return (1 - t) * (1 - t);\n  }\n\n  function getPointOnQuadraticBezierIterator(p1x, p1y, p2x, p2y, p3x, p3y) {\n    return function(pct) {\n      var c1 = QB1(pct), c2 = QB2(pct), c3 = QB3(pct);\n      return {\n        x: p3x * c1 + p2x * c2 + p1x * c3,\n        y: p3y * c1 + p2y * c2 + p1y * c3\n      };\n    };\n  }\n\n  function getTangentQuadraticIterator(p1x, p1y, p2x, p2y, p3x, p3y) {\n    return function (pct) {\n      var invT = 1 - pct,\n          tangentX = (2 * invT * (p2x - p1x)) + (2 * pct * (p3x - p2x)),\n          tangentY = (2 * invT * (p2y - p1y)) + (2 * pct * (p3y - p2y));\n      return Math.atan2(tangentY, tangentX);\n    };\n  }\n\n\n  // this will run over a path segment ( a cubic or quadratic segment) and approximate it\n  // with 100 segemnts. This will good enough to calculate the length of the curve\n  function pathIterator(iterator, x1, y1) {\n    var tempP = { x: x1, y: y1 }, p, tmpLen = 0, perc;\n    for (perc = 1; perc <= 100; perc += 1) {\n      p = iterator(perc / 100);\n      tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\n      tempP = p;\n    }\n    return tmpLen;\n  }\n\n  /**\n   * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\n   * that correspond to that pixels run over the path.\n   * The percentage will be then used to find the correct point on the canvas for the path.\n   * @param {Array} segInfo fabricJS collection of information on a parsed path\n   * @param {Number} distance from starting point, in pixels.\n   * @return {Object} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\n   */\n  function findPercentageForDistance(segInfo, distance) {\n    var perc = 0, tmpLen = 0, iterator = segInfo.iterator, tempP = { x: segInfo.x, y: segInfo.y },\n        p, nextLen, nextStep = 0.01, angleFinder = segInfo.angleFinder, lastPerc;\n    // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\n    // the path\n    while (tmpLen < distance && nextStep > 0.0001) {\n      p = iterator(perc);\n      lastPerc = perc;\n      nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\n      // compare tmpLen each cycle with distance, decide next perc to test.\n      if ((nextLen + tmpLen) > distance) {\n        // we discard this step and we make smaller steps.\n        perc -= nextStep;\n        nextStep /= 2;\n      }\n      else {\n        tempP = p;\n        perc += nextStep;\n        tmpLen += nextLen;\n      }\n    }\n    p.angle = angleFinder(lastPerc);\n    return p;\n  }\n\n  /**\n   * Run over a parsed and simplifed path and extrac some informations.\n   * informations are length of each command and starting point\n   * @param {Array} path fabricJS parsed path commands\n   * @return {Array} path commands informations\n   */\n  function getPathSegmentsInfo(path) {\n    var totalLength = 0, len = path.length, current,\n        //x2 and y2 are the coords of segment start\n        //x1 and y1 are the coords of the current point\n        x1 = 0, y1 = 0, x2 = 0, y2 = 0, info = [], iterator, tempInfo, angleFinder;\n    for (var i = 0; i < len; i++) {\n      current = path[i];\n      tempInfo = {\n        x: x1,\n        y: y1,\n        command: current[0],\n      };\n      switch (current[0]) { //first letter\n        case 'M':\n          tempInfo.length = 0;\n          x2 = x1 = current[1];\n          y2 = y1 = current[2];\n          break;\n        case 'L':\n          tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\n          x1 = current[1];\n          y1 = current[2];\n          break;\n        case 'C':\n          iterator = getPointOnCubicBezierIterator(\n            x1,\n            y1,\n            current[1],\n            current[2],\n            current[3],\n            current[4],\n            current[5],\n            current[6]\n          );\n          angleFinder = getTangentCubicIterator(\n            x1,\n            y1,\n            current[1],\n            current[2],\n            current[3],\n            current[4],\n            current[5],\n            current[6]\n          );\n          tempInfo.iterator = iterator;\n          tempInfo.angleFinder = angleFinder;\n          tempInfo.length = pathIterator(iterator, x1, y1);\n          x1 = current[5];\n          y1 = current[6];\n          break;\n        case 'Q':\n          iterator = getPointOnQuadraticBezierIterator(\n            x1,\n            y1,\n            current[1],\n            current[2],\n            current[3],\n            current[4]\n          );\n          angleFinder = getTangentQuadraticIterator(\n            x1,\n            y1,\n            current[1],\n            current[2],\n            current[3],\n            current[4]\n          );\n          tempInfo.iterator = iterator;\n          tempInfo.angleFinder = angleFinder;\n          tempInfo.length = pathIterator(iterator, x1, y1);\n          x1 = current[3];\n          y1 = current[4];\n          break;\n        case 'Z':\n        case 'z':\n          // we add those in order to ease calculations later\n          tempInfo.destX = x2;\n          tempInfo.destY = y2;\n          tempInfo.length = calcLineLength(x1, y1, x2, y2);\n          x1 = x2;\n          y1 = y2;\n          break;\n      }\n      totalLength += tempInfo.length;\n      info.push(tempInfo);\n    }\n    info.push({ length: totalLength, x: x1, y: y1 });\n    return info;\n  }\n\n  function getPointOnPath(path, distance, infos) {\n    if (!infos) {\n      infos = getPathSegmentsInfo(path);\n    }\n    var i = 0;\n    while ((distance - infos[i].length > 0) && i < (infos.length - 2)) {\n      distance -= infos[i].length;\n      i++;\n    }\n    // var distance = infos[infos.length - 1] * perc;\n    var segInfo = infos[i], segPercent = distance / segInfo.length,\n        command = segInfo.command, segment = path[i], info;\n\n    switch (command) {\n      case 'M':\n        return { x: segInfo.x, y: segInfo.y, angle: 0 };\n      case 'Z':\n      case 'z':\n        info = new fabric.Point(segInfo.x, segInfo.y).lerp(\n          new fabric.Point(segInfo.destX, segInfo.destY),\n          segPercent\n        );\n        info.angle = Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x);\n        return info;\n      case 'L':\n        info = new fabric.Point(segInfo.x, segInfo.y).lerp(\n          new fabric.Point(segment[1], segment[2]),\n          segPercent\n        );\n        info.angle = Math.atan2(segment[2] - segInfo.y, segment[1] - segInfo.x);\n        return info;\n      case 'C':\n        return findPercentageForDistance(segInfo, distance);\n      case 'Q':\n        return findPercentageForDistance(segInfo, distance);\n    }\n  }\n\n  /**\n   *\n   * @param {string} pathString\n   * @return {(string|number)[][]} An array of SVG path commands\n   * @example <caption>Usage</caption>\n   * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\n   *   ['M', 3, 4],\n   *   ['Q', 3, 5, 2, 1, 4, 0],\n   *   ['Q', 9, 12, 2, 1, 4, 0],\n   * ];\n   *\n   */\n  function parsePath(pathString) {\n    var result = [],\n        coords = [],\n        currentPath,\n        parsed,\n        re = fabric.rePathCommand,\n        rNumber = '[-+]?(?:\\\\d*\\\\.\\\\d+|\\\\d+\\\\.?)(?:[eE][-+]?\\\\d+)?\\\\s*',\n        rNumberCommaWsp = '(' + rNumber + ')' + fabric.commaWsp,\n        rFlagCommaWsp = '([01])' + fabric.commaWsp + '?',\n        rArcSeq = rNumberCommaWsp + '?' + rNumberCommaWsp + '?' + rNumberCommaWsp + rFlagCommaWsp + rFlagCommaWsp +\n          rNumberCommaWsp + '?(' + rNumber + ')',\n        regArcArgumentSequence = new RegExp(rArcSeq, 'g'),\n        match,\n        coordsStr,\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        path;\n    if (!pathString || !pathString.match) {\n      return result;\n    }\n    path = pathString.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n    for (var i = 0, coordsParsed, len = path.length; i < len; i++) {\n      currentPath = path[i];\n\n      coordsStr = currentPath.slice(1).trim();\n      coords.length = 0;\n\n      var command = currentPath.charAt(0);\n      coordsParsed = [command];\n\n      if (command.toLowerCase() === 'a') {\n        // arcs have special flags that apparently don't require spaces so handle special\n        for (var args; (args = regArcArgumentSequence.exec(coordsStr));) {\n          for (var j = 1; j < args.length; j++) {\n            coords.push(args[j]);\n          }\n        }\n      }\n      else {\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n      }\n\n      for (var j = 0, jlen = coords.length; j < jlen; j++) {\n        parsed = parseFloat(coords[j]);\n        if (!isNaN(parsed)) {\n          coordsParsed.push(parsed);\n        }\n      }\n\n      var commandLength = commandLengths[command.toLowerCase()],\n          repeatedCommand = repeatedCommands[command] || command;\n\n      if (coordsParsed.length - 1 > commandLength) {\n        for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n          result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n          command = repeatedCommand;\n        }\n      }\n      else {\n        result.push(coordsParsed);\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   *\n   * Converts points to a smooth SVG path\n   * @param {{ x: number,y: number }[]} points Array of points\n   * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\n   * @return {(string|number)[][]} An array of SVG path commands\n   */\n  function getSmoothPathFromPoints(points, correction) {\n    var path = [], i,\n        p1 = new fabric.Point(points[0].x, points[0].y),\n        p2 = new fabric.Point(points[1].x, points[1].y),\n        len = points.length, multSignX = 1, multSignY = 0, manyPoints = len > 2;\n    correction = correction || 0;\n\n    if (manyPoints) {\n      multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n      multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n    }\n    path.push(['M', p1.x - multSignX * correction, p1.y - multSignY * correction]);\n    for (i = 1; i < len; i++) {\n      if (!p1.eq(p2)) {\n        var midPoint = p1.midPointFrom(p2);\n        // p1 is our bezier control point\n        // midpoint is our endpoint\n        // start point is p(i-1) value.\n        path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\n      }\n      p1 = points[i];\n      if ((i + 1) < points.length) {\n        p2 = points[i + 1];\n      }\n    }\n    if (manyPoints) {\n      multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n      multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n    }\n    path.push(['L', p1.x + multSignX * correction, p1.y + multSignY * correction]);\n    return path;\n  }\n  /**\n   * Transform a path by transforming each segment.\n   * it has to be a simplified path or it won't work.\n   * WARNING: this depends from pathOffset for correct operation\n   * @param {Array} path fabricJS parsed and simplified path commands\n   * @param {Array} transform matrix that represent the transformation\n   * @param {Object} [pathOffset] the fabric.Path pathOffset\n   * @param {Number} pathOffset.x\n   * @param {Number} pathOffset.y\n   * @returns {Array} the transformed path\n   */\n  function transformPath(path, transform, pathOffset) {\n    if (pathOffset) {\n      transform = fabric.util.multiplyTransformMatrices(\n        transform,\n        [1, 0, 0, 1, -pathOffset.x, -pathOffset.y]\n      );\n    }\n    return path.map(function(pathSegment) {\n      var newSegment = pathSegment.slice(0), point = {};\n      for (var i = 1; i < pathSegment.length - 1; i += 2) {\n        point.x = pathSegment[i];\n        point.y = pathSegment[i + 1];\n        point = fabric.util.transformPoint(point, transform);\n        newSegment[i] = point.x;\n        newSegment[i + 1] = point.y;\n      }\n      return newSegment;\n    });\n  }\n\n  /**\n   * Join path commands to go back to svg format\n   * @param {Array} pathData fabricJS parsed path commands\n   * @return {String} joined path 'M 0 0 L 20 30'\n   */\n  fabric.util.joinPath = function(pathData) {\n    return pathData.map(function (segment) { return segment.join(' '); }).join(' ');\n  };\n  fabric.util.parsePath = parsePath;\n  fabric.util.makePathSimpler = makePathSimpler;\n  fabric.util.getSmoothPathFromPoints = getSmoothPathFromPoints;\n  fabric.util.getPathSegmentsInfo = getPathSegmentsInfo;\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n  fabric.util.getPointOnPath = getPointOnPath;\n  fabric.util.transformPath = transformPath;\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas and group properties in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @param {Boolean} [deep] Whether to extend nested objects\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas' || property === 'group') {\n            // we do not want to clone this props at all.\n            // we want to keep the keys in the copy\n            destination[property] = null;\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * This method is mostly for internal use, and not intended for duplicating shapes in canvas. \n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @param {Boolean} [deep] Whether to clone nested objects\n   * @return {Object}\n   */\n\n  //TODO: this function return an empty object if you try to clone null\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n  // since ie11 can use addEventListener but they do not support options, i need to check\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent,\n      touchEvents = ['touchstart', 'touchmove', 'touchend'];\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = function(element, eventName, handler, options) {\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = function(element, eventName, handler, options) {\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  function getTouchInfo(event) {\n    var touchProp = event.changedTouches;\n    if (touchProp && touchProp[0]) {\n      return touchProp[0];\n    }\n    return event;\n  }\n\n  fabric.util.getPointer = function(event) {\n    var element = event.target,\n        scroll = fabric.util.getScrollLeftTop(element),\n        _evt = getTouchInfo(event);\n    return {\n      x: _evt.clientX + scroll.left,\n      y: _evt.clientY + scroll.top\n    };\n  };\n\n  fabric.util.isTouchEvent = function(event) {\n    return touchEvents.indexOf(event.type) > -1 || event.pointerType === 'touch';\n  };\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle.setProperty(normalizedProperty, styles[property]);\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  function setImageSmoothing(ctx, value) {\n    ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n      || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n    ctx.imageSmoothingEnabled = value;\n  }\n\n  /**\n   * setImageSmoothing sets the context imageSmoothingEnabled property.\n   * Used by canvas and by ImageObject.\n   * @memberOf fabric.util\n   * @since 4.0.0\n   * @param {HTMLRenderingContext2D} ctx to set on\n   * @param {Boolean} value true or false\n   */\n  fabric.util.setImageSmoothing = setImageSmoothing;\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.addClass = addClass;\n  fabric.util.makeElement = makeElement;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = console.log;\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = console.warn;\n\n\n(function () {\n\n  var extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone;\n\n  /**\n   * @typedef {Object} AnimationOptions\n   * Animation of a value or list of values.\n   * When using lists, think of something like this:\n   * fabric.util.animate({\n   *   startValue: [1, 2, 3],\n   *   endValue: [2, 4, 6],\n   *   onChange: function([a, b, c]) {\n   *     canvas.zoomToPoint({x: b, y: c}, a)\n   *     canvas.renderAll()\n   *   }\n   * });\n   * @example\n   * @property {Function} [onChange] Callback; invoked on every value change\n   * @property {Function} [onComplete] Callback; invoked when value change is completed\n   * @example\n   * // Note: startValue, endValue, and byValue must match the type\n   * var animationOptions = { startValue: 0, endValue: 1, byValue: 0.25 }\n   * var animationOptions = { startValue: [0, 1], endValue: [1, 2], byValue: [0.25, 0.25] }\n   * @property {number | number[]} [startValue=0] Starting value\n   * @property {number | number[]} [endValue=100] Ending value\n   * @property {number | number[]} [byValue=100] Value to modify the property by\n   * @property {Function} [easing] Easing function\n   * @property {Number} [duration=500] Duration of change (in ms)\n   * @property {Function} [abort] Additional function with logic. If returns true, animation aborts.\n   *\n   * @typedef {() => void} CancelFunction\n   *\n   * @typedef {Object} AnimationCurrentState\n   * @property {number | number[]} currentValue value in range [`startValue`, `endValue`]\n   * @property {number} completionRate value in range [0, 1]\n   * @property {number} durationRate value in range [0, 1]\n   *\n   * @typedef {(AnimationOptions & AnimationCurrentState & { cancel: CancelFunction }} AnimationContext\n   */\n\n  /**\n   * Array holding all running animations\n   * @memberof fabric\n   * @type {AnimationContext[]}\n   */\n  var RUNNING_ANIMATIONS = [];\n  fabric.util.object.extend(RUNNING_ANIMATIONS, {\n\n    /**\n     * cancel all running animations at the next requestAnimFrame\n     * @returns {AnimationContext[]}\n     */\n    cancelAll: function () {\n      var animations = this.splice(0);\n      animations.forEach(function (animation) {\n        animation.cancel();\n      });\n      return animations;\n    },\n\n    /**\n     * cancel all running animations attached to canvas at the next requestAnimFrame\n     * @param {fabric.Canvas} canvas\n     * @returns {AnimationContext[]}\n     */\n    cancelByCanvas: function (canvas) {\n      if (!canvas) {\n        return [];\n      }\n      var cancelled = this.filter(function (animation) {\n        return typeof animation.target === 'object' && animation.target.canvas === canvas;\n      });\n      cancelled.forEach(function (animation) {\n        animation.cancel();\n      });\n      return cancelled;\n    },\n\n    /**\n     * cancel all running animations for target at the next requestAnimFrame\n     * @param {*} target\n     * @returns {AnimationContext[]}\n     */\n    cancelByTarget: function (target) {\n      var cancelled = this.findAnimationsByTarget(target);\n      cancelled.forEach(function (animation) {\n        animation.cancel();\n      });\n      return cancelled;\n    },\n\n    /**\n     *\n     * @param {CancelFunction} cancelFunc the function returned by animate\n     * @returns {number}\n     */\n    findAnimationIndex: function (cancelFunc) {\n      return this.indexOf(this.findAnimation(cancelFunc));\n    },\n\n    /**\n     *\n     * @param {CancelFunction} cancelFunc the function returned by animate\n     * @returns {AnimationContext | undefined} animation's options object\n     */\n    findAnimation: function (cancelFunc) {\n      return this.find(function (animation) {\n        return animation.cancel === cancelFunc;\n      });\n    },\n\n    /**\n     *\n     * @param {*} target the object that is assigned to the target property of the animation context\n     * @returns {AnimationContext[]} array of animation options object associated with target\n     */\n    findAnimationsByTarget: function (target) {\n      if (!target) {\n        return [];\n      }\n      return this.filter(function (animation) {\n        return animation.target === target;\n      });\n    }\n  });\n\n  function noop() {\n    return false;\n  }\n\n  function defaultEasing(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {AnimationOptions} [options] Animation options\n   * @example\n   * // Note: startValue, endValue, and byValue must match the type\n   * fabric.util.animate({ startValue: 0, endValue: 1, byValue: 0.25 })\n   * fabric.util.animate({ startValue: [0, 1], endValue: [1, 2], byValue: [0.25, 0.25] })\n   * @returns {CancelFunction} cancel function\n   */\n  function animate(options) {\n    options || (options = {});\n    var cancel = false,\n        context,\n        removeFromRegistry = function () {\n          var index = fabric.runningAnimations.indexOf(context);\n          return index > -1 && fabric.runningAnimations.splice(index, 1)[0];\n        };\n\n    context = extend(clone(options), {\n      cancel: function () {\n        cancel = true;\n        return removeFromRegistry();\n      },\n      currentValue: 'startValue' in options ? options.startValue : 0,\n      completionRate: 0,\n      durationRate: 0\n    });\n    fabric.runningAnimations.push(context);\n\n    requestAnimFrame(function(timestamp) {\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || defaultEasing,\n          isMany = 'startValue' in options ? options.startValue.length > 0 : false,\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || (isMany ? startValue.map(function(value, i) {\n            return endValue[i] - startValue[i];\n          }) : endValue - startValue);\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = isMany ? startValue.map(function(_value, i) {\n              return easing(currentTime, startValue[i], byValue[i], duration);\n            }) : easing(currentTime, startValue, byValue, duration),\n            valuePerc = isMany ? Math.abs((current[0] - startValue[0]) / byValue[0])\n              : Math.abs((current - startValue) / byValue);\n        //  update context\n        context.currentValue = isMany ? current.slice() : current;\n        context.completionRate = valuePerc;\n        context.durationRate = timePerc;\n        if (cancel) {\n          return;\n        }\n        if (abort(current, valuePerc, timePerc)) {\n          removeFromRegistry();\n          return;\n        }\n        if (time > finish) {\n          //  update context\n          context.currentValue = isMany ? endValue.slice() : endValue;\n          context.completionRate = 1;\n          context.durationRate = 1;\n          //  execute callbacks\n          onChange(isMany ? endValue.slice() : endValue, 1, 1);\n          onComplete(endValue, 1, 1);\n          removeFromRegistry();\n          return;\n        }\n        else {\n          onChange(current, valuePerc, timePerc);\n          requestAnimFrame(tick);\n        }\n      })(start);\n    });\n\n    return context.cancel;\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n  fabric.runningAnimations = RUNNING_ANIMATIONS;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   * @returns {Function} abort function\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource(),\n        originalOnComplete = options.onComplete,\n        originalOnChange = options.onChange;\n    options = options || {};\n\n    return fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      },\n      // has to take in account for color restoring;\n      onComplete: function(current, valuePerc, timePerc) {\n        if (originalOnComplete) {\n          return originalOnComplete(\n            calculateColor(endColor, endColor, 0),\n            valuePerc,\n            timePerc\n          );\n        }\n      },\n      onChange: function(current, valuePerc, timePerc) {\n        if (originalOnChange) {\n          if (Array.isArray(current)) {\n            return originalOnChange(\n              calculateColor(current, current, 0),\n              valuePerc,\n              timePerc\n            );\n          }\n          originalOnChange(current, valuePerc, timePerc);\n        }\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n        'vector-effect':      'strokeUniform',\n        'image-rendering':    'imageSmoothing',\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      },\n\n      fSize = 'font-size', cPath = 'clip-path';\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Array.isArray(value), parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeUniform') {\n      return (value === 'non-scaling-stroke');\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href' || attr === 'font') {\n      return value;\n    }\n    else if (attr === 'imageSmoothing') {\n      return (value === 'optimizeQuality');\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = fabric.commaWsp,\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlinkAttribute = el.getAttribute('xlink:href') || el.getAttribute('href');\n\n      if (xlinkAttribute === null) {\n        return;\n      }\n\n      var xlink = xlinkAttribute.slice(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode,\n          oldLength = nodelist.length, attr,\n          j,\n          attrs,\n          len,\n          namespace = fabric.svgNS;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElementNS(namespace, 'g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n    if (!fabric.svgViewBoxElementsRegEx.test(element.nodeName)) {\n      return {};\n    }\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (missingViewBox) {\n      if (((x || y) && element.parentNode && element.parentNode.nodeName !== '#document')) {\n        translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n        matrix = (element.getAttribute('transform') || '') + translateMatrix;\n        element.setAttribute('transform', matrix);\n        element.removeAttribute('x');\n        element.removeAttribute('y');\n      }\n    }\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      // set a transform for elements that have x y and are inner(only) SVGs\n      return parsedDim;\n    }\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n    parsedDim.minX = minX;\n    parsedDim.minY = minY;\n    parsedDim.viewBoxWidth = viewBoxWidth;\n    parsedDim.viewBoxHeight = viewBoxHeight;\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n    if ((x || y) && element.parentNode.nodeName !== '#document') {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    // seems unused.\n    // parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElementNS(fabric.svgNS, 'g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      el.removeAttribute('x');\n      el.removeAttribute('y');\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).slice(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (referencedGradient && !gradient.hasAttribute(attr) && referencedGradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      var cssAttrs = extend(\n        getGlobalStylesForElement(element, svgUid),\n        fabric.parseStyleAttribute(element)\n      );\n      ownAttributes = extend(\n        ownAttributes,\n        cssAttrs\n      );\n      if (cssAttrs[cPath]) {\n        element.setAttribute(cPath, cssAttrs[cPath]);\n      }\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes[fSize]) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes[fSize] = fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        var styleContents = styles[i].textContent;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        // recovers all the rule in this form `body { style code... }`\n        // rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = styleContents.split('}');\n        // remove empty rules.\n        rules = rules.filter(function(rule) { return rule.trim(); });\n        // at this point we have hopefully an array of rules `body { style code... `\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.split('{'),\n              ruleObj = { }, declaration = match[1].trim(),\n              propertyValuePairs = declaration.split(';').filter(function(pair) { return pair.trim(); });\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(':'),\n                property = pair[0].trim(),\n                value = pair[1].trim();\n            ruleObj[property] = value;\n          }\n          rule = match[0].trim();\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      var parser = new fabric.window.DOMParser(),\n          doc = parser.parseFromString(string.trim(), 'text/xml');\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions, doc) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n  this.doc = doc;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, el, 'fill');\n      _this.resolveGradient(obj, el, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj, el);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property], regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return;\n    }\n    regex.lastIndex = 0;\n    var id = regex.exec(value)[1];\n    regex.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, el, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      var opacityAttr = el.getAttribute(property + '-opacity');\n      var gradient = fabric.Gradient.fromElement(gradientDef, obj, opacityAttr, this.options);\n      obj.set(property, gradient);\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj, usingElement) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      // move the clipPath tag as sibling to the real element that is using it\n      var clipPathTag = clipPath[0].parentNode;\n      var clipPathOwner = usingElement;\n      while (clipPathOwner.parentNode && clipPathOwner.getAttribute('clip-path') !== obj.clipPath) {\n        clipPathOwner = clipPathOwner.parentNode;\n      }\n      clipPathOwner.parentNode.appendChild(clipPathTag);\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      if (clipPath.clipPath) {\n        this.resolveClipPath(clipPath, clipPathOwner);\n      }\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n    else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'],\n      skewMap = ['ns', 'nesw', 'ew', 'nwse'],\n      controls = {},\n      LEFT = 'left', TOP = 'top', RIGHT = 'right', BOTTOM = 'bottom', CENTER = 'center',\n      opposite = {\n        top: BOTTOM,\n        bottom: TOP,\n        left: RIGHT,\n        right: LEFT,\n        center: CENTER,\n      }, radiansToDegrees = fabric.util.radiansToDegrees,\n      sign = (Math.sign || function(x) { return ((x > 0) - (x < 0)) || +x; });\n\n  /**\n   * Combine control position and object angle to find the control direction compared\n   * to the object center.\n   * @param {fabric.Object} fabricObject the fabric object for which we are rendering controls\n   * @param {fabric.Control} control the control class\n   * @return {Number} 0 - 7 a quadrant number\n   */\n  function findCornerQuadrant(fabricObject, control) {\n    var cornerAngle = fabricObject.angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\n    return Math.round((cornerAngle % 360) / 45);\n  }\n\n  function fireEvent(eventName, options) {\n    var target = options.transform.target,\n        canvas = target.canvas,\n        canvasOptions = fabric.util.object.clone(options);\n    canvasOptions.target = target;\n    canvas && canvas.fire('object:' + eventName, canvasOptions);\n    target.fire(eventName, options);\n  }\n\n  /**\n   * Inspect event and fabricObject properties to understand if the scaling action\n   * @param {Event} eventData from the user action\n   * @param {fabric.Object} fabricObject the fabric object about to scale\n   * @return {Boolean} true if scale is proportional\n   */\n  function scaleIsProportional(eventData, fabricObject) {\n    var canvas = fabricObject.canvas, uniScaleKey = canvas.uniScaleKey,\n        uniformIsToggled = eventData[uniScaleKey];\n    return (canvas.uniformScaling && !uniformIsToggled) ||\n    (!canvas.uniformScaling && uniformIsToggled);\n  }\n\n  /**\n   * Checks if transform is centered\n   * @param {Object} transform transform data\n   * @return {Boolean} true if transform is centered\n   */\n  function isTransformCentered(transform) {\n    return transform.originX === CENTER && transform.originY === CENTER;\n  }\n\n  /**\n   * Inspect fabricObject to understand if the current scaling action is allowed\n   * @param {fabric.Object} fabricObject the fabric object about to scale\n   * @param {String} by 'x' or 'y' or ''\n   * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\n   * @return {Boolean} true if scaling is not allowed at current conditions\n   */\n  function scalingIsForbidden(fabricObject, by, scaleProportionally) {\n    var lockX = fabricObject.lockScalingX, lockY = fabricObject.lockScalingY;\n    if (lockX && lockY) {\n      return true;\n    }\n    if (!by && (lockX || lockY) && scaleProportionally) {\n      return true;\n    }\n    if (lockX && by === 'x') {\n      return true;\n    }\n    if (lockY && by === 'y') {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * return the correct cursor style for the scale action\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} a valid css string for the cursor\n   */\n  function scaleCursorStyleHandler(eventData, control, fabricObject) {\n    var notAllowed = 'not-allowed',\n        scaleProportionally = scaleIsProportional(eventData, fabricObject),\n        by = '';\n    if (control.x !== 0 && control.y === 0) {\n      by = 'x';\n    }\n    else if (control.x === 0 && control.y !== 0) {\n      by = 'y';\n    }\n    if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\n      return notAllowed;\n    }\n    var n = findCornerQuadrant(fabricObject, control);\n    return scaleMap[n] + '-resize';\n  }\n\n  /**\n   * return the correct cursor style for the skew action\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} a valid css string for the cursor\n   */\n  function skewCursorStyleHandler(eventData, control, fabricObject) {\n    var notAllowed = 'not-allowed';\n    if (control.x !== 0 && fabricObject.lockSkewingY) {\n      return notAllowed;\n    }\n    if (control.y !== 0 && fabricObject.lockSkewingX) {\n      return notAllowed;\n    }\n    var n = findCornerQuadrant(fabricObject, control) % 4;\n    return skewMap[n] + '-resize';\n  }\n\n  /**\n   * Combine skew and scale style handlers to cover fabric standard use case\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} a valid css string for the cursor\n   */\n  function scaleSkewCursorStyleHandler(eventData, control, fabricObject) {\n    if (eventData[fabricObject.canvas.altActionKey]) {\n      return controls.skewCursorStyleHandler(eventData, control, fabricObject);\n    }\n    return controls.scaleCursorStyleHandler(eventData, control, fabricObject);\n  }\n\n  /**\n   * Inspect event, control and fabricObject to return the correct action name\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} an action name\n   */\n  function scaleOrSkewActionName(eventData, control, fabricObject) {\n    var isAlternative = eventData[fabricObject.canvas.altActionKey];\n    if (control.x === 0) {\n      // then is scaleY or skewX\n      return isAlternative ? 'skewX' : 'scaleY';\n    }\n    if (control.y === 0) {\n      // then is scaleY or skewX\n      return isAlternative ? 'skewY' : 'scaleX';\n    }\n  }\n\n  /**\n   * Find the correct style for the control that is used for rotation.\n   * this function is very simple and it just take care of not-allowed or standard cursor\n   * @param {Event} eventData the javascript event that is causing the scale\n   * @param {fabric.Control} control the control that is interested in the action\n   * @param {fabric.Object} fabricObject the fabric object that is interested in the action\n   * @return {String} a valid css string for the cursor\n   */\n  function rotationStyleHandler(eventData, control, fabricObject) {\n    if (fabricObject.lockRotation) {\n      return 'not-allowed';\n    }\n    return control.cursorStyle;\n  }\n\n  function commonEventInfo(eventData, transform, x, y) {\n    return {\n      e: eventData,\n      transform: transform,\n      pointer: {\n        x: x,\n        y: y,\n      }\n    };\n  }\n\n  /**\n   * Wrap an action handler with saving/restoring object position on the transform.\n   * this is the code that permits to objects to keep their position while transforming.\n   * @param {Function} actionHandler the function to wrap\n   * @return {Function} a function with an action handler signature\n   */\n  function wrapWithFixedAnchor(actionHandler) {\n    return function(eventData, transform, x, y) {\n      var target = transform.target, centerPoint = target.getCenterPoint(),\n          constraint = target.translateToOriginPoint(centerPoint, transform.originX, transform.originY),\n          actionPerformed = actionHandler(eventData, transform, x, y);\n      target.setPositionByOrigin(constraint, transform.originX, transform.originY);\n      return actionPerformed;\n    };\n  }\n\n  /**\n   * Wrap an action handler with firing an event if the action is performed\n   * @param {Function} actionHandler the function to wrap\n   * @return {Function} a function with an action handler signature\n   */\n  function wrapWithFireEvent(eventName, actionHandler) {\n    return function(eventData, transform, x, y) {\n      var actionPerformed = actionHandler(eventData, transform, x, y);\n      if (actionPerformed) {\n        fireEvent(eventName, commonEventInfo(eventData, transform, x, y));\n      }\n      return actionPerformed;\n    };\n  }\n\n  /**\n   * Transforms a point described by x and y in a distance from the top left corner of the object\n   * bounding box.\n   * @param {Object} transform\n   * @param {String} originX\n   * @param {String} originY\n   * @param {number} x\n   * @param {number} y\n   * @return {Fabric.Point} the normalized point\n   */\n  function getLocalPoint(transform, originX, originY, x, y) {\n    var target = transform.target,\n        control = target.controls[transform.corner],\n        zoom = target.canvas.getZoom(),\n        padding = target.padding / zoom,\n        localPoint = target.toLocalPoint(new fabric.Point(x, y), originX, originY);\n    if (localPoint.x >= padding) {\n      localPoint.x -= padding;\n    }\n    if (localPoint.x <= -padding) {\n      localPoint.x += padding;\n    }\n    if (localPoint.y >= padding) {\n      localPoint.y -= padding;\n    }\n    if (localPoint.y <= padding) {\n      localPoint.y += padding;\n    }\n    localPoint.x -= control.offsetX;\n    localPoint.y -= control.offsetY;\n    return localPoint;\n  }\n\n  /**\n   * Detect if the fabric object is flipped on one side.\n   * @param {fabric.Object} target\n   * @return {Boolean} true if one flip, but not two.\n   */\n  function targetHasOneFlip(target) {\n    return target.flipX !== target.flipY;\n  }\n\n  /**\n   * Utility function to compensate the scale factor when skew is applied on both axes\n   * @private\n   */\n  function compensateScaleForSkew(target, oppositeSkew, scaleToCompensate, axis, reference) {\n    if (target[oppositeSkew] !== 0) {\n      var newDim = target._getTransformedDimensions()[axis];\n      var newValue = reference / newDim * target[scaleToCompensate];\n      target.set(scaleToCompensate, newValue);\n    }\n  }\n\n  /**\n   * Action handler for skewing on the X axis\n   * @private\n   */\n  function skewObjectX(eventData, transform, x, y) {\n    var target = transform.target,\n        // find how big the object would be, if there was no skewX. takes in account scaling\n        dimNoSkew = target._getTransformedDimensions(0, target.skewY),\n        localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\n        // the mouse is in the center of the object, and we want it to stay there.\n        // so the object will grow twice as much as the mouse.\n        // this makes the skew growth to localPoint * 2 - dimNoSkew.\n        totalSkewSize = Math.abs(localPoint.x * 2) - dimNoSkew.x,\n        currentSkew = target.skewX, newSkew;\n    if (totalSkewSize < 2) {\n      // let's make it easy to go back to position 0.\n      newSkew = 0;\n    }\n    else {\n      newSkew = radiansToDegrees(\n        Math.atan2((totalSkewSize / target.scaleX), (dimNoSkew.y / target.scaleY))\n      );\n      // now we have to find the sign of the skew.\n      // it mostly depend on the origin of transformation.\n      if (transform.originX === LEFT && transform.originY === BOTTOM) {\n        newSkew = -newSkew;\n      }\n      if (transform.originX === RIGHT && transform.originY === TOP) {\n        newSkew = -newSkew;\n      }\n      if (targetHasOneFlip(target)) {\n        newSkew = -newSkew;\n      }\n    }\n    var hasSkewed = currentSkew !== newSkew;\n    if (hasSkewed) {\n      var dimBeforeSkewing = target._getTransformedDimensions().y;\n      target.set('skewX', newSkew);\n      compensateScaleForSkew(target, 'skewY', 'scaleY', 'y', dimBeforeSkewing);\n    }\n    return hasSkewed;\n  }\n\n  /**\n   * Action handler for skewing on the Y axis\n   * @private\n   */\n  function skewObjectY(eventData, transform, x, y) {\n    var target = transform.target,\n        // find how big the object would be, if there was no skewX. takes in account scaling\n        dimNoSkew = target._getTransformedDimensions(target.skewX, 0),\n        localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\n        // the mouse is in the center of the object, and we want it to stay there.\n        // so the object will grow twice as much as the mouse.\n        // this makes the skew growth to localPoint * 2 - dimNoSkew.\n        totalSkewSize = Math.abs(localPoint.y * 2) - dimNoSkew.y,\n        currentSkew = target.skewY, newSkew;\n    if (totalSkewSize < 2) {\n      // let's make it easy to go back to position 0.\n      newSkew = 0;\n    }\n    else {\n      newSkew = radiansToDegrees(\n        Math.atan2((totalSkewSize / target.scaleY), (dimNoSkew.x / target.scaleX))\n      );\n      // now we have to find the sign of the skew.\n      // it mostly depend on the origin of transformation.\n      if (transform.originX === LEFT && transform.originY === BOTTOM) {\n        newSkew = -newSkew;\n      }\n      if (transform.originX === RIGHT && transform.originY === TOP) {\n        newSkew = -newSkew;\n      }\n      if (targetHasOneFlip(target)) {\n        newSkew = -newSkew;\n      }\n    }\n    var hasSkewed = currentSkew !== newSkew;\n    if (hasSkewed) {\n      var dimBeforeSkewing = target._getTransformedDimensions().x;\n      target.set('skewY', newSkew);\n      compensateScaleForSkew(target, 'skewX', 'scaleX', 'x', dimBeforeSkewing);\n    }\n    return hasSkewed;\n  }\n\n  /**\n   * Wrapped Action handler for skewing on the Y axis, takes care of the\n   * skew direction and determine the correct transform origin for the anchor point\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function skewHandlerX(eventData, transform, x, y) {\n    // step1 figure out and change transform origin.\n    // if skewX > 0 and originY bottom we anchor on right\n    // if skewX > 0 and originY top we anchor on left\n    // if skewX < 0 and originY bottom we anchor on left\n    // if skewX < 0 and originY top we anchor on right\n    // if skewX is 0, we look for mouse position to understand where are we going.\n    var target = transform.target, currentSkew = target.skewX, originX, originY = transform.originY;\n    if (target.lockSkewingX) {\n      return false;\n    }\n    if (currentSkew === 0) {\n      var localPointFromCenter = getLocalPoint(transform, CENTER, CENTER, x, y);\n      if (localPointFromCenter.x > 0) {\n        // we are pulling right, anchor left;\n        originX = LEFT;\n      }\n      else {\n        // we are pulling right, anchor right\n        originX = RIGHT;\n      }\n    }\n    else {\n      if (currentSkew > 0) {\n        originX = originY === TOP ? LEFT : RIGHT;\n      }\n      if (currentSkew < 0) {\n        originX = originY === TOP ? RIGHT : LEFT;\n      }\n      // is the object flipped on one side only? swap the origin.\n      if (targetHasOneFlip(target)) {\n        originX = originX === LEFT ? RIGHT : LEFT;\n      }\n    }\n\n    // once we have the origin, we find the anchor point\n    transform.originX = originX;\n    var finalHandler = wrapWithFireEvent('skewing', wrapWithFixedAnchor(skewObjectX));\n    return finalHandler(eventData, transform, x, y);\n  }\n\n  /**\n   * Wrapped Action handler for skewing on the Y axis, takes care of the\n   * skew direction and determine the correct transform origin for the anchor point\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function skewHandlerY(eventData, transform, x, y) {\n    // step1 figure out and change transform origin.\n    // if skewY > 0 and originX left we anchor on top\n    // if skewY > 0 and originX right we anchor on bottom\n    // if skewY < 0 and originX left we anchor on bottom\n    // if skewY < 0 and originX right we anchor on top\n    // if skewY is 0, we look for mouse position to understand where are we going.\n    var target = transform.target, currentSkew = target.skewY, originY, originX = transform.originX;\n    if (target.lockSkewingY) {\n      return false;\n    }\n    if (currentSkew === 0) {\n      var localPointFromCenter = getLocalPoint(transform, CENTER, CENTER, x, y);\n      if (localPointFromCenter.y > 0) {\n        // we are pulling down, anchor up;\n        originY = TOP;\n      }\n      else {\n        // we are pulling up, anchor down\n        originY = BOTTOM;\n      }\n    }\n    else {\n      if (currentSkew > 0) {\n        originY = originX === LEFT ? TOP : BOTTOM;\n      }\n      if (currentSkew < 0) {\n        originY = originX === LEFT ? BOTTOM : TOP;\n      }\n      // is the object flipped on one side only? swap the origin.\n      if (targetHasOneFlip(target)) {\n        originY = originY === TOP ? BOTTOM : TOP;\n      }\n    }\n\n    // once we have the origin, we find the anchor point\n    transform.originY = originY;\n    var finalHandler = wrapWithFireEvent('skewing', wrapWithFixedAnchor(skewObjectY));\n    return finalHandler(eventData, transform, x, y);\n  }\n\n  /**\n   * Action handler for rotation and snapping, without anchor point.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   * @private\n   */\n  function rotationWithSnapping(eventData, transform, x, y) {\n    var t = transform,\n        target = t.target,\n        pivotPoint = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n    if (target.lockRotation) {\n      return false;\n    }\n\n    var lastAngle = Math.atan2(t.ey - pivotPoint.y, t.ex - pivotPoint.x),\n        curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x),\n        angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n        hasRotated = true;\n\n    if (target.snapAngle > 0) {\n      var snapAngle  = target.snapAngle,\n          snapThreshold  = target.snapThreshold || snapAngle,\n          rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n          leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n      if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n        angle = leftAngleLocked;\n      }\n      else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n        angle = rightAngleLocked;\n      }\n    }\n\n    // normalize angle to positive value\n    if (angle < 0) {\n      angle = 360 + angle;\n    }\n    angle %= 360;\n\n    hasRotated = target.angle !== angle;\n    target.angle = angle;\n    return hasRotated;\n  }\n\n  /**\n   * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @param {Object} options additional information for scaling\n   * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\n   * @return {Boolean} true if some change happened\n   * @private\n   */\n  function scaleObject(eventData, transform, x, y, options) {\n    options = options || {};\n    var target = transform.target,\n        lockScalingX = target.lockScalingX, lockScalingY = target.lockScalingY,\n        by = options.by, newPoint, scaleX, scaleY, dim,\n        scaleProportionally = scaleIsProportional(eventData, target),\n        forbidScaling = scalingIsForbidden(target, by, scaleProportionally),\n        signX, signY, gestureScale = transform.gestureScale;\n\n    if (forbidScaling) {\n      return false;\n    }\n    if (gestureScale) {\n      scaleX = transform.scaleX * gestureScale;\n      scaleY = transform.scaleY * gestureScale;\n    }\n    else {\n      newPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y);\n      // use of sign: We use sign to detect change of direction of an action. sign usually change when\n      // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\n      // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\n      // cross many time the origin point and flip the object. so we need a way to filter out the noise.\n      // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\n      signX = by !== 'y' ? sign(newPoint.x) : 1;\n      signY = by !== 'x' ? sign(newPoint.y) : 1;\n      if (!transform.signX) {\n        transform.signX = signX;\n      }\n      if (!transform.signY) {\n        transform.signY = signY;\n      }\n\n      if (target.lockScalingFlip &&\n        (transform.signX !== signX || transform.signY !== signY)\n      ) {\n        return false;\n      }\n\n      dim = target._getTransformedDimensions();\n      // missing detection of flip and logic to switch the origin\n      if (scaleProportionally && !by) {\n        // uniform scaling\n        var distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\n            original = transform.original,\n            originalDistance = Math.abs(dim.x * original.scaleX / target.scaleX) +\n              Math.abs(dim.y * original.scaleY / target.scaleY),\n            scale = distance / originalDistance;\n        scaleX = original.scaleX * scale;\n        scaleY = original.scaleY * scale;\n      }\n      else {\n        scaleX = Math.abs(newPoint.x * target.scaleX / dim.x);\n        scaleY = Math.abs(newPoint.y * target.scaleY / dim.y);\n      }\n      // if we are scaling by center, we need to double the scale\n      if (isTransformCentered(transform)) {\n        scaleX *= 2;\n        scaleY *= 2;\n      }\n      if (transform.signX !== signX && by !== 'y') {\n        transform.originX = opposite[transform.originX];\n        scaleX *= -1;\n        transform.signX = signX;\n      }\n      if (transform.signY !== signY && by !== 'x') {\n        transform.originY = opposite[transform.originY];\n        scaleY *= -1;\n        transform.signY = signY;\n      }\n    }\n    // minScale is taken are in the setter.\n    var oldScaleX = target.scaleX, oldScaleY = target.scaleY;\n    if (!by) {\n      !lockScalingX && target.set('scaleX', scaleX);\n      !lockScalingY && target.set('scaleY', scaleY);\n    }\n    else {\n      // forbidden cases already handled on top here.\n      by === 'x' && target.set('scaleX', scaleX);\n      by === 'y' && target.set('scaleY', scaleY);\n    }\n    return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\n  }\n\n  /**\n   * Generic scaling logic, to scale from corners either equally or freely.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scaleObjectFromCorner(eventData, transform, x, y) {\n    return scaleObject(eventData, transform, x, y);\n  }\n\n  /**\n   * Scaling logic for the X axis.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scaleObjectX(eventData, transform, x, y) {\n    return scaleObject(eventData, transform, x, y , { by: 'x' });\n  }\n\n  /**\n   * Scaling logic for the Y axis.\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scaleObjectY(eventData, transform, x, y) {\n    return scaleObject(eventData, transform, x, y , { by: 'y' });\n  }\n\n  /**\n   * Composed action handler to either scale Y or skew X\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scalingYOrSkewingX(eventData, transform, x, y) {\n    // ok some safety needed here.\n    if (eventData[transform.target.canvas.altActionKey]) {\n      return controls.skewHandlerX(eventData, transform, x, y);\n    }\n    return controls.scalingY(eventData, transform, x, y);\n  }\n\n  /**\n   * Composed action handler to either scale X or skew Y\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function scalingXOrSkewingY(eventData, transform, x, y) {\n    // ok some safety needed here.\n    if (eventData[transform.target.canvas.altActionKey]) {\n      return controls.skewHandlerY(eventData, transform, x, y);\n    }\n    return controls.scalingX(eventData, transform, x, y);\n  }\n\n  /**\n   * Action handler to change textbox width\n   * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if some change happened\n   */\n  function changeWidth(eventData, transform, x, y) {\n    var target = transform.target, localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\n        strokePadding = target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\n        multiplier = isTransformCentered(transform) ? 2 : 1,\n        oldWidth = target.width,\n        newWidth = Math.abs(localPoint.x * multiplier / target.scaleX) - strokePadding;\n    target.set('width', Math.max(newWidth, 0));\n    return oldWidth !== newWidth;\n  }\n\n  /**\n   * Action handler\n   * @private\n   * @param {Event} eventData javascript event that is doing the transform\n   * @param {Object} transform javascript object containing a series of information around the current transform\n   * @param {number} x current mouse x position, canvas normalized\n   * @param {number} y current mouse y position, canvas normalized\n   * @return {Boolean} true if the translation occurred\n   */\n  function dragHandler(eventData, transform, x, y) {\n    var target = transform.target,\n        newLeft = x - transform.offsetX,\n        newTop = y - transform.offsetY,\n        moveX = !target.get('lockMovementX') && target.left !== newLeft,\n        moveY = !target.get('lockMovementY') && target.top !== newTop;\n    moveX && target.set('left', newLeft);\n    moveY && target.set('top', newTop);\n    if (moveX || moveY) {\n      fireEvent('moving', commonEventInfo(eventData, transform, x, y));\n    }\n    return moveX || moveY;\n  }\n\n  controls.scaleCursorStyleHandler = scaleCursorStyleHandler;\n  controls.skewCursorStyleHandler = skewCursorStyleHandler;\n  controls.scaleSkewCursorStyleHandler = scaleSkewCursorStyleHandler;\n  controls.rotationWithSnapping = wrapWithFireEvent('rotating', wrapWithFixedAnchor(rotationWithSnapping));\n  controls.scalingEqually = wrapWithFireEvent('scaling', wrapWithFixedAnchor( scaleObjectFromCorner));\n  controls.scalingX = wrapWithFireEvent('scaling', wrapWithFixedAnchor(scaleObjectX));\n  controls.scalingY = wrapWithFireEvent('scaling', wrapWithFixedAnchor(scaleObjectY));\n  controls.scalingYOrSkewingX = scalingYOrSkewingX;\n  controls.scalingXOrSkewingY = scalingXOrSkewingY;\n  controls.changeWidth = wrapWithFireEvent('resizing', wrapWithFixedAnchor(changeWidth));\n  controls.skewHandlerX = skewHandlerX;\n  controls.skewHandlerY = skewHandlerY;\n  controls.dragHandler = dragHandler;\n  controls.scaleOrSkewActionName = scaleOrSkewActionName;\n  controls.rotationStyleHandler = rotationStyleHandler;\n  controls.fireEvent = fireEvent;\n  controls.wrapWithFixedAnchor = wrapWithFixedAnchor;\n  controls.wrapWithFireEvent = wrapWithFireEvent;\n  controls.getLocalPoint = getLocalPoint;\n  fabric.controlsUtils = controls;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      degreesToRadians = fabric.util.degreesToRadians,\n      controls = fabric.controlsUtils;\n\n  /**\n   * Render a round control, as per fabric features.\n   * This function is written to respect object properties like transparentCorners, cornerSize\n   * cornerColor, cornerStrokeColor\n   * plus the addition of offsetY and offsetX.\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @param {Number} left x coordinate where the control center should be\n   * @param {Number} top y coordinate where the control center should be\n   * @param {Object} styleOverride override for fabric.Object controls style\n   * @param {fabric.Object} fabricObject the fabric object for which we are rendering controls\n   */\n  function renderCircleControl (ctx, left, top, styleOverride, fabricObject) {\n    styleOverride = styleOverride || {};\n    var xSize = this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n        ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n        transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n          styleOverride.transparentCorners : fabricObject.transparentCorners,\n        methodName = transparentCorners ? 'stroke' : 'fill',\n        stroke = !transparentCorners && (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\n        myLeft = left,\n        myTop = top, size;\n    ctx.save();\n    ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor;\n    ctx.strokeStyle = styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor;\n    // as soon as fabric react v5, remove ie11, use proper ellipse code.\n    if (xSize > ySize) {\n      size = xSize;\n      ctx.scale(1.0, ySize / xSize);\n      myTop = top * xSize / ySize;\n    }\n    else if (ySize > xSize) {\n      size = ySize;\n      ctx.scale(xSize / ySize, 1.0);\n      myLeft = left * ySize / xSize;\n    }\n    else {\n      size = xSize;\n    }\n    // this is still wrong\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.arc(myLeft, myTop, size / 2, 0, 2 * Math.PI, false);\n    ctx[methodName]();\n    if (stroke) {\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Render a square control, as per fabric features.\n   * This function is written to respect object properties like transparentCorners, cornerSize\n   * cornerColor, cornerStrokeColor\n   * plus the addition of offsetY and offsetX.\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @param {Number} left x coordinate where the control center should be\n   * @param {Number} top y coordinate where the control center should be\n   * @param {Object} styleOverride override for fabric.Object controls style\n   * @param {fabric.Object} fabricObject the fabric object for which we are rendering controls\n   */\n  function renderSquareControl(ctx, left, top, styleOverride, fabricObject) {\n    styleOverride = styleOverride || {};\n    var xSize = this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n        ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n        transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n          styleOverride.transparentCorners : fabricObject.transparentCorners,\n        methodName = transparentCorners ? 'stroke' : 'fill',\n        stroke = !transparentCorners && (\n          styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor\n        ), xSizeBy2 = xSize / 2, ySizeBy2 = ySize / 2;\n    ctx.save();\n    ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor;\n    ctx.strokeStyle = styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor;\n    // this is still wrong\n    ctx.lineWidth = 1;\n    ctx.translate(left, top);\n    ctx.rotate(degreesToRadians(fabricObject.angle));\n    // this does not work, and fixed with ( && ) does not make sense.\n    // to have real transparent corners we need the controls on upperCanvas\n    // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n    ctx[methodName + 'Rect'](-xSizeBy2, -ySizeBy2, xSize, ySize);\n    if (stroke) {\n      ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n    }\n    ctx.restore();\n  }\n\n  controls.renderCircleControl = renderCircleControl;\n  controls.renderSquareControl = renderSquareControl;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  function Control(options) {\n    for (var i in options) {\n      this[i] = options[i];\n    }\n  }\n\n  fabric.Control = Control;\n\n  fabric.Control.prototype = /** @lends fabric.Control.prototype */ {\n\n    /**\n     * keep track of control visibility.\n     * mainly for backward compatibility.\n     * if you do not want to see a control, you can remove it\n     * from the controlset.\n     * @type {Boolean}\n     * @default true\n     */\n    visible: true,\n\n    /**\n     * Name of the action that the control will likely execute.\n     * This is optional. FabricJS uses to identify what the user is doing for some\n     * extra optimizations. If you are writing a custom control and you want to know\n     * somewhere else in the code what is going on, you can use this string here.\n     * you can also provide a custom getActionName if your control run multiple actions\n     * depending on some external state.\n     * default to scale since is the most common, used on 4 corners by default\n     * @type {String}\n     * @default 'scale'\n     */\n    actionName: 'scale',\n\n    /**\n     * Drawing angle of the control.\n     * NOT used for now, but name marked as needed for internal logic\n     * example: to reuse the same drawing function for different rotated controls\n     * @type {Number}\n     * @default 0\n     */\n    angle: 0,\n\n    /**\n     * Relative position of the control. X\n     * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\n     * of the bounding box.\n     * @type {Number}\n     * @default 0\n     */\n    x: 0,\n\n    /**\n     * Relative position of the control. Y\n     * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\n     * of the bounding box.\n     * @type {Number}\n     * @default 0\n     */\n    y: 0,\n\n    /**\n     * Horizontal offset of the control from the defined position. In pixels\n     * Positive offset moves the control to the right, negative to the left.\n     * It used when you want to have position of control that does not scale with\n     * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\n     * the boundindbox, with an offset of 30 pixels vertically. Those 30 pixels will\n     * stay 30 pixels no matter how the object is big. Another example is having 2\n     * controls in the corner, that stay in the same position when the object scale.\n     * of the bounding box.\n     * @type {Number}\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset of the control from the defined position. In pixels\n     * Positive offset moves the control to the bottom, negative to the top.\n     * @type {Number}\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Sets the length of the control. If null, defaults to object's cornerSize.\n     * Expects both sizeX and sizeY to be set when set.\n     * @type {?Number}\n     * @default null\n     */\n    sizeX: null,\n\n    /**\n     * Sets the height of the control. If null, defaults to object's cornerSize.\n     * Expects both sizeX and sizeY to be set when set.\n     * @type {?Number}\n     * @default null\n     */\n    sizeY: null,\n\n    /**\n     * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\n     * Expects both touchSizeX and touchSizeY to be set when set.\n     * @type {?Number}\n     * @default null\n     */\n    touchSizeX: null,\n\n    /**\n     * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\n     * Expects both touchSizeX and touchSizeY to be set when set.\n     * @type {?Number}\n     * @default null\n     */\n    touchSizeY: null,\n\n    /**\n     * Css cursor style to display when the control is hovered.\n     * if the method `cursorStyleHandler` is provided, this property is ignored.\n     * @type {String}\n     * @default 'crosshair'\n     */\n    cursorStyle: 'crosshair',\n\n    /**\n     * If controls has an offsetY or offsetX, draw a line that connects\n     * the control to the bounding box\n     * @type {Boolean}\n     * @default false\n     */\n    withConnection: false,\n\n    /**\n     * The control actionHandler, provide one to handle action ( control being moved )\n     * @param {Event} eventData the native mouse event\n     * @param {Object} transformData properties of the current transform\n     * @param {Number} x x position of the cursor\n     * @param {Number} y y position of the cursor\n     * @return {Boolean} true if the action/event modified the object\n     */\n    actionHandler: function(/* eventData, transformData, x, y */) { },\n\n    /**\n     * The control handler for mouse down, provide one to handle mouse down on control\n     * @param {Event} eventData the native mouse event\n     * @param {Object} transformData properties of the current transform\n     * @param {Number} x x position of the cursor\n     * @param {Number} y y position of the cursor\n     * @return {Boolean} true if the action/event modified the object\n     */\n    mouseDownHandler: function(/* eventData, transformData, x, y */) { },\n\n    /**\n     * The control mouseUpHandler, provide one to handle an effect on mouse up.\n     * @param {Event} eventData the native mouse event\n     * @param {Object} transformData properties of the current transform\n     * @param {Number} x x position of the cursor\n     * @param {Number} y y position of the cursor\n     * @return {Boolean} true if the action/event modified the object\n     */\n    mouseUpHandler: function(/* eventData, transformData, x, y */) { },\n\n    /**\n     * Returns control actionHandler\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Object} fabricObject on which the control is displayed\n     * @param {fabric.Control} control control for which the action handler is being asked\n     * @return {Function} the action handler\n     */\n    getActionHandler: function(/* eventData, fabricObject, control */) {\n      return this.actionHandler;\n    },\n\n    /**\n     * Returns control mouseDown handler\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Object} fabricObject on which the control is displayed\n     * @param {fabric.Control} control control for which the action handler is being asked\n     * @return {Function} the action handler\n     */\n    getMouseDownHandler: function(/* eventData, fabricObject, control */) {\n      return this.mouseDownHandler;\n    },\n\n    /**\n     * Returns control mouseUp handler\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Object} fabricObject on which the control is displayed\n     * @param {fabric.Control} control control for which the action handler is being asked\n     * @return {Function} the action handler\n     */\n    getMouseUpHandler: function(/* eventData, fabricObject, control */) {\n      return this.mouseUpHandler;\n    },\n\n    /**\n     * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\n     * function you can pass one in the constructor\n     * the cursorStyle property\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Control} control the current control ( likely this)\n     * @param {fabric.Object} object on which the control is displayed\n     * @return {String}\n     */\n    cursorStyleHandler: function(eventData, control /* fabricObject */) {\n      return control.cursorStyle;\n    },\n\n    /**\n     * Returns the action name. The basic implementation just return the actionName property.\n     * @param {Event} eventData the native mouse event\n     * @param {fabric.Control} control the current control ( likely this)\n     * @param {fabric.Object} object on which the control is displayed\n     * @return {String}\n     */\n    getActionName: function(eventData, control /* fabricObject */) {\n      return control.actionName;\n    },\n\n    /**\n     * Returns controls visibility\n     * @param {fabric.Object} object on which the control is displayed\n     * @param {String} controlKey key where the control is memorized on the\n     * @return {Boolean}\n     */\n    getVisibility: function(fabricObject, controlKey) {\n      var objectVisibility = fabricObject._controlsVisibility;\n      if (objectVisibility && typeof objectVisibility[controlKey] !== 'undefined') {\n        return objectVisibility[controlKey];\n      }\n      return this.visible;\n    },\n\n    /**\n     * Sets controls visibility\n     * @param {Boolean} visibility for the object\n     * @return {Void}\n     */\n    setVisibility: function(visibility /* name, fabricObject */) {\n      this.visible = visibility;\n    },\n\n\n    positionHandler: function(dim, finalMatrix /*, fabricObject, currentControl */) {\n      var point = fabric.util.transformPoint({\n        x: this.x * dim.x + this.offsetX,\n        y: this.y * dim.y + this.offsetY }, finalMatrix);\n      return point;\n    },\n\n    /**\n     * Returns the coords for this control based on object values.\n     * @param {Number} objectAngle angle from the fabric object holding the control\n     * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\n     *   isTouch is true)\n     * @param {Number} centerX x coordinate where the control center should be\n     * @param {Number} centerY y coordinate where the control center should be\n     * @param {boolean} isTouch true if touch corner, false if normal corner\n     */\n    calcCornerCoords: function(objectAngle, objectCornerSize, centerX, centerY, isTouch) {\n      var cosHalfOffset,\n          sinHalfOffset,\n          cosHalfOffsetComp,\n          sinHalfOffsetComp,\n          xSize = (isTouch) ? this.touchSizeX : this.sizeX,\n          ySize = (isTouch) ? this.touchSizeY : this.sizeY;\n      if (xSize && ySize && xSize !== ySize) {\n        // handle rectangular corners\n        var controlTriangleAngle = Math.atan2(ySize, xSize);\n        var cornerHypotenuse = Math.sqrt(xSize * xSize + ySize * ySize) / 2;\n        var newTheta = controlTriangleAngle - fabric.util.degreesToRadians(objectAngle);\n        var newThetaComp = Math.PI / 2 - controlTriangleAngle - fabric.util.degreesToRadians(objectAngle);\n        cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta);\n        sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta);\n        // use complementary angle for two corners\n        cosHalfOffsetComp = cornerHypotenuse * fabric.util.cos(newThetaComp);\n        sinHalfOffsetComp = cornerHypotenuse * fabric.util.sin(newThetaComp);\n      }\n      else {\n        // handle square corners\n        // use default object corner size unless size is defined\n        var cornerSize = (xSize && ySize) ? xSize : objectCornerSize;\n        /* 0.7071067812 stands for sqrt(2)/2 */\n        cornerHypotenuse = cornerSize * 0.7071067812;\n        // complementary angles are equal since they're both 45 degrees\n        var newTheta = fabric.util.degreesToRadians(45 - objectAngle);\n        cosHalfOffset = cosHalfOffsetComp = cornerHypotenuse * fabric.util.cos(newTheta);\n        sinHalfOffset = sinHalfOffsetComp = cornerHypotenuse * fabric.util.sin(newTheta);\n      }\n\n      return {\n        tl: {\n          x: centerX - sinHalfOffsetComp,\n          y: centerY - cosHalfOffsetComp,\n        },\n        tr: {\n          x: centerX + cosHalfOffset,\n          y: centerY - sinHalfOffset,\n        },\n        bl: {\n          x: centerX - cosHalfOffset,\n          y: centerY + sinHalfOffset,\n        },\n        br: {\n          x: centerX + sinHalfOffsetComp,\n          y: centerY + cosHalfOffsetComp,\n        },\n      };\n    },\n\n    /**\n    * Render function for the control.\n    * When this function runs the context is unscaled. unrotate. Just retina scaled.\n    * all the functions will have to translate to the point left,top before starting Drawing\n    * if they want to draw a control where the position is detected.\n    * left and top are the result of the positionHandler function\n    * @param {RenderingContext2D} ctx the context where the control will be drawn\n    * @param {Number} left position of the canvas where we are about to render the control.\n    * @param {Number} top position of the canvas where we are about to render the control.\n    * @param {Object} styleOverride\n    * @param {fabric.Object} fabricObject the object where the control is about to be rendered\n    */\n    render: function(ctx, left, top, styleOverride, fabricObject) {\n      styleOverride = styleOverride || {};\n      switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\n        case 'circle':\n          fabric.controlsUtils.renderCircleControl.call(this, ctx, left, top, styleOverride, fabricObject);\n          break;\n        default:\n          fabric.controlsUtils.renderSquareControl.call(this, ctx, left, top, styleOverride, fabricObject);\n      }\n    },\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el, multiplier) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha * multiplier;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * A transform matrix to apply to the gradient before painting.\n     * Imported from svg gradients, is not applied with the current transform in the center.\n     * Before this transform is applied, the origin point is at the top left corner of the object\n     * plus the addition of offsetY and offsetX.\n     * @type Number[]\n     * @default null\n     */\n    gradientTransform: null,\n\n    /**\n     * coordinates units for coords.\n     * If `pixels`, the number of coords are in the same unit of width / height.\n     * If set as `percentage` the coords are still a number, but 1 means 100% of width\n     * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n     * allowed values pixels or percentage.\n     * @type String\n     * @default 'pixels'\n     */\n    gradientUnits: 'pixels',\n\n    /**\n     * Gradient type linear or radial\n     * @type String\n     * @default 'pixels'\n     */\n    type: 'linear',\n\n    /**\n     * Constructor\n     * @param {Object} options Options object with type, coords, gradientUnits and colorStops\n     * @param {Object} [options.type] gradient type linear or radial\n     * @param {Object} [options.gradientUnits] gradient units\n     * @param {Object} [options.offsetX] SVG import compatibility\n     * @param {Object} [options.offsetY] SVG import compatibility\n     * @param {Object[]} options.colorStops contains the colorstops.\n     * @param {Object} options.coords contains the coords of the gradient\n     * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle\n     * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n      options.coords || (options.coords = { });\n\n      var coords, _this = this;\n\n      // sets everything, then coords and colorstops get sets again\n      Object.keys(options).forEach(function(option) {\n        _this[option] = options[option];\n      });\n\n      if (this.id) {\n        this.id += '_' + fabric.Object.__uid++;\n      }\n      else {\n        this.id = fabric.Object.__uid++;\n      }\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientUnits: this.gradientUnits,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object, options) {\n      var coords = clone(this.coords, true), i, len, options = options || {},\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = -this.offsetX, offsetY = -this.offsetY,\n          withViewport = !!options.additionalTransform,\n          gradientUnits = this.gradientUnits === 'pixels' ? 'userSpaceOnUse' : 'objectBoundingBox';\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (gradientUnits === 'objectBoundingBox') {\n        offsetX /= object.width;\n        offsetY /= object.height;\n      }\n      else {\n        offsetX += object.width / 2;\n        offsetY += object.height / 2;\n      }\n      if (object.type === 'path' && this.gradientUnits !== 'percentage') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"' + gradientUnits + '\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ?\n        options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n     * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n     * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n     * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg\n     * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg\n     * @param {Object.number} width width part of the svg tag if viewBox is not specified\n     * @param {Object.number} height height part of the svg tag if viewBox is not specified\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance, opacityAttr, svgOptions) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var multiplier = parseFloat(opacityAttr) / (/%$/.test(opacityAttr) ? 100 : 1);\n      multiplier = multiplier < 0 ? 0 : multiplier > 1 ? 1 : multiplier;\n      if (isNaN(multiplier)) {\n        multiplier = 1;\n      }\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') === 'userSpaceOnUse' ?\n            'pixels' : 'percentage',\n          gradientTransform = el.getAttribute('gradientTransform') || '',\n          colorStops = [],\n          coords, i, offsetX = 0, offsetY = 0,\n          transformMatrix;\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n        coords = getLinearCoords(el);\n      }\n      else {\n        type = 'radial';\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i], multiplier));\n      }\n\n      transformMatrix = fabric.parseTransformAttribute(gradientTransform);\n\n      __convertPercentUnitsToValues(instance, coords, svgOptions, gradientUnits);\n\n      if (gradientUnits === 'pixels') {\n        offsetX = -instance.left;\n        offsetY = -instance.top;\n      }\n\n      var gradient = new fabric.Gradient({\n        id: el.getAttribute('id'),\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        gradientUnits: gradientUnits,\n        gradientTransform: transformMatrix,\n        offsetX: offsetX,\n        offsetY: offsetY,\n      });\n\n      return gradient;\n    }\n    /* _FROM_SVG_END_ */\n  });\n\n  /**\n   * @private\n   */\n  function __convertPercentUnitsToValues(instance, options, svgOptions, gradientUnits) {\n    var propValue, finalValue;\n    Object.keys(options).forEach(function(prop) {\n      propValue = options[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      }\n      else if (propValue === '-Infinity') {\n        finalValue = 0;\n      }\n      else {\n        finalValue = parseFloat(options[prop], 10);\n        if (typeof propValue === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= svgOptions.viewBoxWidth || svgOptions.width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= svgOptions.viewBoxHeight || svgOptions.height;\n            }\n          }\n        }\n      }\n      options[prop] = finalValue;\n    });\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img, isError) {\n          _this.source = img;\n          callback && callback(_this, isError);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // <img> element\n      if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = this.source;\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseFloat(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseFloat(offsetsAndBlur[2], 10) || 0,\n        blur: parseFloat(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?(\\d+(?:\\.\\d*)?(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (a Canvas 2D API transform matrix) which focuses the viewport\n     * @type Array\n     * @example <caption>Default transform</caption>\n     * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];\n     * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>\n     * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio > 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? Math.max(1, fabric.devicePixelRatio) : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      var scaleRatio = fabric.devicePixelRatio;\n      this.__initRetinaScaling(scaleRatio, this.lowerCanvasEl, this.contextContainer);\n      if (this.upperCanvasEl) {\n        this.__initRetinaScaling(scaleRatio, this.upperCanvasEl, this.contextTop);\n      }\n    },\n\n    __initRetinaScaling: function(scaleRatio, canvas, context) {\n      canvas.setAttribute('width', this.width * scaleRatio);\n      canvas.setAttribute('height', this.height * scaleRatio);\n      context.scale(scaleRatio, scaleRatio);\n    },\n\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img, isError) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img, isError) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay. The first argument is the created image, the second argument is a flag indicating whether an error occurred or not.\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img, isError) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img, isError);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image, false);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n      this._originalCanvasStyle = this.lowerCanvasEl.style;\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles(this.contextTop);\n      }\n      this._initRetinaScaling();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transformation of this canvas instance\n     * @param {Array} vpt a Canvas 2D API transform matrix\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject,\n          backgroundObject = this.backgroundImage,\n          overlayObject = this.overlayImage,\n          object, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(true);\n      }\n      if (activeObject) {\n        activeObject.setCoords();\n      }\n      if (backgroundObject) {\n        backgroundObject.setCoords(true);\n      }\n      if (overlayObject) {\n        overlayObject.setCoords(true);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, the zoom centered around point\n     * meaning that following zoom to point with the same point will have the visual\n     * effect of the zoom originating from that point. The point won't move.\n     * It has nothing to do with canvas center or visual center of the viewport.\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this.remove.apply(this, this.getObjects());\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      fabric.util.setImageSmoothing(ctx, this.imageSmoothingEnabled);\n      this.fire('before:render', { ctx: ctx, });\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var fill = this[property + 'Color'], object = this[property + 'Image'],\n          v = this.viewportTransform, needsVpt = this[property + 'Vpt'];\n      if (!fill && !object) {\n        return;\n      }\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive\n          ? fill.toLive(ctx, this)\n          : fill;\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n      if (object) {\n        ctx.save();\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     * @deprecated migrate to `getCenterPoint`\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * @return {fabric.Point} \n     */\n    getCenterPoint: function () {\n      return new fabric.Point(this.width / 2, this.height / 2);\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenterPoint().x, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenterPoint();\n      return this._centerObject(object, center);\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenterPoint(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint(center, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returns dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath && !clipPath.excludeFromExport) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = {}, bgImage = this.backgroundImage, overlayImage = this.overlayImage,\n          bgColor = this.backgroundColor, overlayColor = this.overlayColor;\n\n      if (bgColor && bgColor.toObject) {\n        if (!bgColor.excludeFromExport) {\n          data.background = bgColor.toObject(propertiesToInclude);\n        }\n      }\n      else if (bgColor) {\n        data.background = bgColor;\n      }\n\n      if (overlayColor && overlayColor.toObject) {\n        if (!overlayColor.excludeFromExport) {\n          data.overlay = overlayColor.toObject(propertiesToInclude);\n        }\n      }\n      else if (overlayColor) {\n        data.overlay = overlayColor;\n      }\n\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlayImage && !overlayImage.excludeFromExport) {\n        data.overlayImage = this._toObject(overlayImage, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-coordinate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'background');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlay');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function(prop) {\n            var fill = _this[prop + 'Color'];\n            if (fill && fill.toLive) {\n              var shouldTransform = _this[prop + 'Vpt'], vpt = _this.viewportTransform,\n                  object = {\n                    width: _this.width / (shouldTransform ? vpt[0] : 1),\n                    height: _this.height / (shouldTransform ? vpt[3] : 1)\n                  };\n              return fill.toSVG(\n                object,\n                { additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : '' }\n              );\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = [];\n\n      this._objects.forEach(function add(object) {\n        objects.push(object);\n        if (object._objects) {\n          object._objects.forEach(add);\n        }\n      });\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property + 'Color'], vpt = this.viewportTransform, finalWidth = this.width,\n          finalHeight = this.height;\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat, iVpt = fabric.util.invertTransform(vpt), shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push(\n          '<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2,\n          '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', filler, '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      // restore canvas style\n      this.lowerCanvasEl.classList.remove('lower-canvas');\n      fabric.util.setStyle(this.lowerCanvasEl, this._originalCanvasStyle);\n      delete this._originalCanvasStyle;\n      // restore canvas size to original size in case retina scaling was applied\n      this.lowerCanvasEl.setAttribute('width', this.width);\n      this.lowerCanvasEl.setAttribute('height', this.height);\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns Object representation of canvas\n   * this alias is provided because if you call JSON.stringify on an instance,\n   * the toJSON object will be invoked if it exists.\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} JSON compatible object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\n   * @type Boolean\n   * @default false\n  */\n\n  limitedToCanvasSize: false,\n\n\n  /**\n   * Sets brush styles\n   * @private\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles: function (ctx) {\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.setLineDash(this.strokeDashArray || []);\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var canvas = this.canvas,\n        shadow = this.shadow,\n        ctx = canvas.contextTop,\n        zoom = canvas.getZoom();\n    if (canvas && canvas._isRetinaScaling()) {\n      zoom *= fabric.devicePixelRatio;\n    }\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  },\n\n  needsFullRender: function() {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  },\n\n  /**\n   * Check is pointer is outside canvas boundaries\n   * @param {Object} pointer\n   * @private\n  */\n  _isOutSideCanvas: function(pointer) {\n    return pointer.x < 0 || pointer.x > this.canvas.getWidth() || pointer.y < 0 || pointer.y > this.canvas.getHeight();\n  }\n});\n\n\n(function() {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Draws a straight line between last recorded point to current pointer\n     * Used for `shift` functionality\n     *\n     * @type boolean\n     * @default false\n     */\n    drawStraightLine: false,\n\n    /**\n     * The event modifier key that makes the brush draw a straight line.\n     * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.\n     * @type {'altKey' | 'shiftKey' | 'ctrlKey' | 'none' | undefined | null}\n     */\n    straightLineKey: 'shiftKey',\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    needsFullRender: function () {\n      return this.callSuper('needsFullRender') || this._hasStraightLine;\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Invoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      this.drawStraightLine = options.e[this.straightLineKey];\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      this.drawStraightLine = options.e[this.straightLineKey];\n      if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n        return;\n      }\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function(options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return true;\n      }\n      this.drawStraightLine = false;\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      if (this.drawStraightLine && this._points.length > 1) {\n        this._hasStraightLine = true;\n        this._points.pop();\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points = [];\n      this._setBrushStyles(this.canvas.contextTop);\n      this._setShadow();\n      this._hasStraightLine = false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     * @param {CanvasRenderingContext2D} [ctx]\n     */\n    _render: function(ctx) {\n      var i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n      ctx = ctx || this.canvas.contextTop;\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {(string|number)[][]} SVG path commands\n     */\n    convertPointsToSVGPath: function (points) {\n      var correction = this.width / 1000;\n      return fabric.util.getSmoothPathFromPoints(points, correction);\n    },\n\n    /**\n     * @private\n     * @param {(string|number)[][]} pathData SVG path commands\n     * @returns {boolean}\n     */\n    _isEmptySVGPath: function (pathData) {\n      var pathString = fabric.util.joinPath(pathData);\n      return pathString === 'M 0 0 Q 0 0 0 0 L 0 0';\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {(string|number)[][]} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.shadow = new fabric.Shadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate points array with the decimate value\n     */\n    decimatePoints: function(points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n      var zoom = this.canvas.getZoom(), adjustedDistance = Math.pow(distance / zoom, 2),\n          i, l = points.length - 1, lastPoint = points[0], newPoints = [lastPoint],\n          cDistance;\n      for (i = 1; i < l - 1; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n      /**\n       * Add the last point from the original line to the end of the array.\n       * This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\n       */\n      newPoints.push(points[l]);\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n      var pathData = this.convertPointsToSVGPath(this._points);\n      if (this._isEmptySVGPath(pathData)) {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.fire('before:path:created', { path: path });\n      this.canvas.add(path);\n      this.canvas.requestRenderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n\n  dot: function(ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    }\n    else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && (circle.shadow = new fabric.Shadow(this.shadow));\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.set('shadow', new fabric.Shadow(this.shadow));\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  getPattern: function(ctx) {\n    return ctx.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles: function(ctx) {\n    this.callSuper('_setBrushStyles', ctx);\n    ctx.strokeStyle = this.getPattern(ctx);\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      isTouchEvent = fabric.util.isTouchEvent;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified at the end of a transform or any change when statefull is true\n   * @fires object:rotating while an object is being rotated from the control\n   * @fires object:scaling while an object is being scaled by controls\n   * @fires object:moving while an object is being dragged\n   * @fires object:skewing while an object is being skewed from the controls\n   *\n   * @fires before:transform before a transform is is started\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created after a drawing operation ends and the path is added\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n   * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n   * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop:before before drop event. same native event. This is added to handle edge cases\n   * @fires drop\n   * @fires after:render at the end of the render process, receives the context in the callback\n   * @fires before:render at start the render process, receives the context in the callback\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * when dragged on the corners that normally would not do that.\n     * @type Boolean\n     * @default\n     * @since fabric 4.0 // changed name and default value\n     */\n    uniformScaling:      true,\n\n    /**\n     * Indicates which key switches uniform scaling.\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * totally wrong named. this sounds like `uniform scaling`\n     * if Canvas.uniformScaling is true, pressing this will set it to false\n     * and viceversa.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped. Target detection will return always undefined.\n     * click selection won't work anymore, events will fire with no targets.\n     * if something is selected before setting it to true, it will be deselected at the first click.\n     * area selection will still work. check the `selection` property too.\n     * if you deactivate both, you should look into staticCanvas.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * Keep track of the subTargets for Mouse Events\n     * @type fabric.Object[]\n     */\n    targets: [],\n\n    /**\n     * When the option is enabled, PointerEvent is used instead of MouseEvent.\n     * @type Boolean\n     * @default\n     */\n    enablePointerEvents: false,\n\n    /**\n     * Keep track of the hovered target\n     * @type fabric.Object\n     * @private\n     */\n    _hoveredTarget: null,\n\n    /**\n     * hold the list of nested targets hovered\n     * @type fabric.Object[]\n     * @private\n     */\n    _hoveredTargets: [],\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n        this.hasLostContext = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determines if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Array.isArray(this.selectionKey)) {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * also this should be something that will be migrated in the control properties.\n     * as ability to define the origin of the transformation that the control provide.\n     * @private\n     * @param {fabric.Object} target\n     * @param {String} action\n     * @param {Boolean} altKey\n     */\n    _shouldCenterTransform: function (target, action, altKey) {\n      if (!target) {\n        return;\n      }\n\n      var centerTransform;\n\n      if (action === 'scale' || action === 'scaleX' || action === 'scaleY' || action === 'resizing') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !altKey : altKey;\n    },\n\n    /**\n     * should disappear before release 4.0\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e, target) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n      var control = target.controls[corner];\n      return control.getActionName(e, control, target);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e), corner = target.__corner,\n          control = target.controls[corner],\n          actionHandler = (alreadySelected && corner) ?\n            control.getActionHandler(e, target, control) : fabric.controlsUtils.dragHandler,\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner),\n          altKey = e[this.centeredKey],\n          transform = {\n            target: target,\n            action: action,\n            actionHandler: actionHandler,\n            corner: corner,\n            scaleX: target.scaleX,\n            scaleY: target.scaleY,\n            skewX: target.skewX,\n            skewY: target.skewY,\n            // used by transation\n            offsetX: pointer.x - target.left,\n            offsetY: pointer.y - target.top,\n            originX: origin.x,\n            originY: origin.y,\n            ex: pointer.x,\n            ey: pointer.y,\n            lastX: pointer.x,\n            lastY: pointer.y,\n            // unsure they are useful anymore.\n            // left: target.left,\n            // top: target.top,\n            theta: degreesToRadians(target.angle),\n            // end of unsure\n            width: target.width * target.scaleX,\n            shiftKey: e.shiftKey,\n            altKey: altKey,\n            original: fabric.util.saveObjectTransform(target),\n          };\n\n      if (this._shouldCenterTransform(target, action, altKey)) {\n        transform.originX = 'center';\n        transform.originY = 'center';\n      }\n      transform.original.originX = origin.x;\n      transform.original.originY = origin.y;\n      this._currentTransform = transform;\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var selector = this._groupSelector,\n          viewportStart = new fabric.Point(selector.ex, selector.ey),\n          start = fabric.util.transformPoint(viewportStart, this.viewportTransform),\n          viewportExtent = new fabric.Point(selector.ex + selector.left, selector.ey + selector.top),\n          extent = fabric.util.transformPoint(viewportExtent, this.viewportTransform),\n          minX = Math.min(start.x, extent.x),\n          minY = Math.min(start.y, extent.y),\n          maxX = Math.max(start.x, extent.x),\n          maxY = Math.max(start.y, extent.y),\n          strokeOffset = this.selectionLineWidth / 2;\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n        ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      minX += strokeOffset;\n      minY += strokeOffset;\n      maxX -= strokeOffset;\n      maxY -= strokeOffset;\n      // selection border\n      fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n      ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs,\n          isTouch = isTouchEvent(e),\n          shouldLookForActive = (aObjects.length > 1 && !skipGroup) || aObjects.length === 1;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      // if we hit the corner of an activeObject, let's return that.\n      if (shouldLookForActive && activeObject._findTargetCorner(pointer, isTouch)) {\n        return activeObject;\n      }\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n          // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n          obj.containsPoint(pointer)\n      ) {\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      var retinaScaling = this.getRetinaScaling();\n      if (retinaScaling !== 1) {\n        pointer.x /= retinaScaling;\n        pointer.y /= retinaScaling;\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''),\n          lowerCanvasEl = this.lowerCanvasEl, upperCanvasEl = this.upperCanvasEl;\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (upperCanvasEl) {\n        upperCanvasEl.className = '';\n      }\n      else {\n        upperCanvasEl = this._createCanvasElement();\n        this.upperCanvasEl = upperCanvasEl;\n      }\n      fabric.util.addClass(upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(upperCanvasEl);\n\n      this._copyCanvasStyle(lowerCanvasEl, upperCanvasEl);\n      this._applyCanvasStyle(upperCanvasEl);\n      this.contextTop = upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns context of top canvas where interactions are drawn\n     * @returns {CanvasRenderingContext2D}\n     */\n    getTopContext: function () {\n      return this.contextTop;\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (obj === this._hoveredTarget){\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [];\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', {\n            e: e,\n            target: oldObject\n          });\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', {\n            e: e,\n            target: object\n          });\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        somethingChanged && this.fire('selection:updated', {\n          e: e,\n          selected: added,\n          deselected: removed,\n        });\n      }\n      else if (objects.length > 0) {\n        this.fire('selection:created', {\n          e: e,\n          selected: added,\n        });\n      }\n      else if (oldObjects.length > 0) {\n        this.fire('selection:cleared', {\n          e: e,\n          deselected: removed,\n        });\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * This is a private method for now.\n     * This is supposed to be equivalent to setActiveObject but without firing\n     * any event. There is commitment to have this stay this way.\n     * This is the functional part of setActiveObject.\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * This is a private method for now.\n     * This is supposed to be equivalent to discardActiveObject but without firing\n     * any events. There is commitment to have this stay this way.\n     * This is the functional part of discardActiveObject.\n     * @param {Event} [e] Event (passed along when firing \"object:deselected\")\n     * @param {Object} object to set as active\n     * @return {Boolean} true if the selection happened\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects(), activeObject = this.getActiveObject();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        fabric.util.addTransformToObject(instance, this._activeObject.calcOwnMatrix());\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n})();\n\n\n(function() {\n\n  var addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return e.button && (e.button === value - 1);\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Contains the id of the touch event that owns the fabric transform\n     * @type Number\n     * @private\n     */\n    mainTouchId: null,\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    /**\n     * return an event prefix pointer or mouse.\n     * @private\n     */\n    _getEventPrefix: function () {\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n      if (!this.enablePointerEvents) {\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n      }\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._onDrop.bind(this);\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n\n      var _this = this;\n      this._hoveredTargets.forEach(function(_target){\n        _this.fire('mouse:out', { target: target, e: e });\n        _target && target.fire('mouseout', { e: e });\n      });\n      this._hoveredTargets = [];\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this._currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * `drop:before` is a an event that allow you to schedule logic\n     * before the `drop` event. Prefer `drop` event always, but if you need\n     * to run some drop-disabling logic on an event, since there is no way\n     * to handle event handlers ordering, use `drop:before`\n     * @param {Event} e\n     */\n    _onDrop: function (e) {\n      this._simpleEventHandler('drop:before', e);\n      return this._simpleEventHandler('drop', e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * Return a the id of an event.\n     * returns either the pointerId or the identifier or 0 for the mouse event\n     * @private\n     * @param {Event} evt Event object\n     */\n    getPointerId: function(evt) {\n      var changedTouches = evt.changedTouches;\n\n      if (changedTouches) {\n        return changedTouches[0] && changedTouches[0].identifier;\n      }\n\n      if (this.enablePointerEvents) {\n        return evt.pointerId;\n      }\n\n      return -1;\n    },\n\n    /**\n     * Determines if an event has the id of the event that is considered main\n     * @private\n     * @param {evt} event Event object\n     */\n    _isMainEvent: function(evt) {\n      if (evt.isPrimary === true) {\n        return true;\n      }\n      if (evt.isPrimary === false) {\n        return false;\n      }\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\n        return true;\n      }\n      if (evt.changedTouches) {\n        return evt.changedTouches[0].identifier === this.mainTouchId;\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchStart: function(e) {\n      e.preventDefault();\n      if (this.mainTouchId === null) {\n        this.mainTouchId = this.getPointerId(e);\n      }\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      // Unbind mousedown to prevent double triggers from touch devices\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchEnd: function(e) {\n      if (e.touches.length > 0) {\n        // if there are still touches stop here\n        return;\n      }\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      this.mainTouchId = null;\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      var _this = this;\n      if (this._willAddMouseDown) {\n        clearTimeout(this._willAddMouseDown);\n      }\n      this._willAddMouseDown = setTimeout(function() {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        _this._willAddMouseDown = 0;\n      }, 400);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      if (this._isMainEvent(e)) {\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n      if (!isClick) {\n        var targetWasActive = target === this._activeObject;\n        this._maybeGroupObjects(e);\n        if (!shouldRender) {\n          shouldRender = (\n            this._shouldRender(target) ||\n            (!targetWasActive && target === this._activeObject)\n          );\n        }\n      }\n      var corner, pointer;\n      if (target) {\n        corner = target._findTargetCorner(\n          this.getPointer(e, true),\n          fabric.util.isTouchEvent(e)\n        );\n        if (target.selectable && target !== this._activeObject && target.activeOn === 'up') {\n          this.setActiveObject(target, e);\n          shouldRender = true;\n        }\n        else {\n          var control = target.controls[corner],\n              mouseUpHandler = control && control.getMouseUpHandler(e, target, control);\n          if (mouseUpHandler) {\n            pointer = this.getPointer(e);\n            mouseUpHandler(e, transform, pointer.x, pointer.y);\n          }\n        }\n        target.isMoving = false;\n      }\n      // if we are ending up a transform on a different control or a new object\n      // fire the original mouse up from the corner that started the transform\n      if (transform && (transform.target !== target || transform.corner !== corner)) {\n        var originalControl = transform.target && transform.target.controls[transform.corner],\n            originalMouseUpHandler = originalControl && originalControl.getMouseUpHandler(e, target, control);\n        pointer = pointer || this.getPointer(e);\n        originalMouseUpHandler && originalMouseUpHandler(e, transform, pointer.x, pointer.y);\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      if (eventType === 'up') {\n        options.currentTarget = this.findTarget(e);\n        options.currentSubTargets = this.targets;\n      }\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n            action: transform.action,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer, { e: e, pointer: pointer });\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer, { e: e, pointer: pointer });\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      var pointer = this.getPointer(e);\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: e, pointer: pointer });\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: this._absolutePointer.x,\n          ey: this._absolutePointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable && target.activeOn === 'down') {\n          this.setActiveObject(target, e);\n        }\n        var corner = target._findTargetCorner(\n          this.getPointer(e, true),\n          fabric.util.isTouchEvent(e)\n        );\n        target.__corner = corner;\n        if (target === this._activeObject && (corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n          var control = target.controls[corner],\n              pointer = this.getPointer(e),\n              mouseDownHandler = control && control.getMouseDownHandler(e, target, control);\n          if (mouseDownHandler) {\n            mouseDownHandler(e, this._currentTransform, pointer.x, pointer.y);\n          }\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._absolutePointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var _hoveredTarget = this._hoveredTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _hoveredTarget,\n        evtOut: 'mouseout',\n        canvasEvtOut: 'mouse:out',\n        evtIn: 'mouseover',\n        canvasEvtIn: 'mouse:over',\n      });\n      for (var i = 0; i < length; i++){\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'mouseout',\n          evtIn: 'mouseover',\n        });\n      }\n      this._hoveredTarget = target;\n      this._hoveredTargets = this.targets.concat();\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      var _draggedoverTarget = this._draggedoverTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _draggedoverTarget,\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n      for (var i = 0; i < length; i++) {\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'dragleave',\n          evtIn: 'dragenter',\n        });\n      }\n      this._draggedoverTarget = target;\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = config.oldTarget, outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._performTransformAction(e, transform, pointer);\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          actionHandler = transform.actionHandler;\n          // this object could be created from the function in the control handlers\n\n\n      if (actionHandler) {\n        actionPerformed = actionHandler(e, transform, x, y);\n      }\n      if (action === 'drag' && actionPerformed) {\n        transform.target.isMoving = true;\n        this.setCursor(transform.target.moveCursor || this.moveCursor);\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: fabric.controlsUtils.fireEvent,\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n          // here we call findTargetCorner always with undefined for the touch parameter.\n          // we assume that if you are using a cursor you do not need to interact with\n          // the bigger touch area.\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        if (target.subTargetCheck){\n          // hoverCursor should come from top-most subTarget,\n          // so we walk the array backwards\n          this.targets.concat().reverse().map(function(_target){\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n        }\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      var control = target.controls[corner];\n      return control.cursorStyleHandler(e, control, target);\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        this._hoveredTargets = this.targets.concat();\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n        this._hoveredTargets = this.targets.concat();\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      // ISSUE 4115: should we consider subTargets here?\n      // this._hoveredTargets = [];\n      // this._hoveredTargets = this.targets.concat();\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2, true)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2, true) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1, null, true)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2, null, true))\n        ) {\n          group.push(currentObject);\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function(object) {\n          return !object.onSelect({ e: e });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement(),\n          originalContextTop = this.contextTop;\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.contextTop = null;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      this.contextTop = originalContextTop;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        }\n        else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function(serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n    enlivenedObjects.forEach(function(obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove;\n    // remove parts i cannot set as options\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay;\n    // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n    this._setOptions(serialized);\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * Size of object's controlling corners when touch interaction is detected\n     * @type Number\n     * @default\n     */\n    touchCornerSize:               24,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgb(178,204,255)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgb(178,204,255)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * bigger number will make a thicker border\n     * border is 1, so this is basically a border thickness\n     * since there is no way to change the border itself.\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * this Property does not work on Text classes or drawing call that uses strokeText,fillText methods\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform:              false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * When 'down', object is set to active on mousedown/touchstart\n     * When 'up', object is set to active on mouseup/touchend\n     * Experimental. Let's see if this breaks anything before supporting officially\n     * @private\n     * since 4.4.0\n     * @type String\n     * @default 'down'\n     */\n    activeOn:           'down',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * List of properties to consider for animating colors.\n     * @type Array\n     */\n    colorProperties: (\n      'fill stroke backgroundColor'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n          dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (this instanceof fabric.Text && this.path) {\n        shouldRedraw = true;\n        shouldResizeCanvas = true;\n        additionalWidth += this.getHeightOfLine(0) * this.zoomX;\n        additionalHeight += this.getHeightOfLine(0) * this.zoomY;\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var needFullTransform = (this.group && !this.group._transformDone) ||\n         (this.group && this.canvas && ctx === this.canvas.contextTop);\n      var m = this.calcTransformMatrix(!needFullTransform);\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeUniform:            this.strokeUniform,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath && !this.clipPath.excludeFromExport) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        // basically a check for [] === []\n        if (Array.isArray(object[prop]) && Array.isArray(prototype[prop])\n          && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      // if the object is a top level one, on the canvas, we go for simple aritmetic\n      // otherwise the complex method with angles will return approximations and decimals\n      // and will likely kill the cache when not needed\n      // https://github.com/fabricjs/fabric.js/issues/7157\n      if (!this.group) {\n        return {\n          scaleX: this.scaleX,\n          scaleY: this.scaleY,\n        };\n      }\n      // if we are inside a group total zoom calculation is complex, we defer to generic matrices\n      var options = fabric.util.qrDecompose(this.calcTransformMatrix());\n      return { scaleX: Math.abs(options.scaleX), scaleY: Math.abs(options.scaleY) };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (!this.width && !this.height && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas || !this._cacheContext) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this._cacheContext = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an approximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function() {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an approximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function() {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' &&\n        this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.needsItsOwnCache() || (\n        this.objectCaching &&\n        (!this.group || !this.group.isOnACache())\n      );\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Object} clipPath\n     */\n    drawClipPathOnCache: function(ctx, clipPath) {\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (clipPath.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (clipPath.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      clipPath.transform(ctx);\n      ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n      ctx.drawImage(clipPath._cacheCanvas, -clipPath.cacheTranslationX, -clipPath.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx, this.clipPath);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    /**\n     * Prepare clipPath state and cache and draw it on instance's cache\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {fabric.Object} clipPath\n     */\n    _drawClipPath: function (ctx, clipPath) {\n      if (!clipPath) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      clipPath.canvas = this.canvas;\n      clipPath.shouldCache();\n      clipPath._transformDone = true;\n      clipPath.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx, clipPath);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && this._cacheContext && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && this._cacheContext && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      var stroke = decl.stroke;\n      if (stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        if (stroke.toLive) {\n          if (stroke.gradientUnits === 'percentage' || stroke.gradientTransform || stroke.patternTransform) {\n            // need to transform gradient in a pattern.\n            // this is a slow process. If you are hitting this codepath, and the object\n            // is not using caching, you should consider switching it on.\n            // we need a canvas as big as the current object caching canvas.\n            this._applyPatternForTransformedGradient(ctx, stroke);\n          }\n          else {\n            // is a simple gradient or pattern\n            ctx.strokeStyle = stroke.toLive(ctx, this);\n            this._applyPatternGradientTransform(ctx, stroke);\n          }\n        }\n        else {\n          // is a color\n          ctx.strokeStyle = decl.stroke;\n        }\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      var fill = decl.fill;\n      if (fill) {\n        if (fill.toLive) {\n          ctx.fillStyle = fill.toLive(ctx, this);\n          this._applyPatternGradientTransform(ctx, decl.fill);\n        }\n        else {\n          ctx.fillStyle = fill;\n        }\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     */\n    _setLineDash: function(ctx, dashArray) {\n      if (!dashArray || dashArray.length === 0) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      ctx.setLineDash(dashArray);\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * the context here is not transformed\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (this.flipX) {\n        options.angle -= 180;\n      }\n      ctx.rotate(degreesToRadians(this.group ? options.angle : this.angle));\n      if (styleOverride.forActiveSelection || this.group) {\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas, scaling,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1;\n      if (shadow.nonScaling) {\n        scaling = { scaleX: 1, scaleY: 1 };\n      }\n      else {\n        scaling = this.getObjectScaling();\n      }\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n\n      if (filler.gradientUnits === 'percentage') {\n        ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n      }\n      else {\n        ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n      }\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(/* ctx */) {\n\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._setFillStyles(ctx, this);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      if (this.strokeUniform && this.group) {\n        var scaling = this.getObjectScaling();\n        ctx.scale(1 / scaling.scaleX, 1 / scaling.scaleY);\n      }\n      else if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n      this._setLineDash(ctx, this.strokeDashArray);\n      this._setStrokeStyles(ctx, this);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function try to patch the missing gradientTransform on canvas gradients.\n     * transforming a context to transform the gradient, is going to transform the stroke too.\n     * we want to transform the gradient but not the stroke operation, so we create\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n     * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size\n     * is limited.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Gradient} filler a fabric gradient instance\n     */\n    _applyPatternForTransformedGradient: function(ctx, filler) {\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          pCanvas = fabric.util.createCanvasElement(), pCtx, retinaScaling = this.canvas.getRetinaScaling(),\n          width = dims.x / this.scaleX / retinaScaling, height = dims.y / this.scaleY / retinaScaling;\n      pCanvas.width = width;\n      pCanvas.height = height;\n      pCtx = pCanvas.getContext('2d');\n      pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\n      pCtx.lineTo(0, height); pCtx.closePath();\n      pCtx.translate(width / 2, height / 2);\n      pCtx.scale(\n        dims.zoomX / this.scaleX / retinaScaling,\n        dims.zoomY / this.scaleY / retinaScaling\n      );\n      this._applyPatternGradientTransform(pCtx, filler);\n      pCtx.fillStyle = filler.toLive(ctx);\n      pCtx.fill();\n      ctx.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2);\n      ctx.scale(\n        retinaScaling * this.scaleX / dims.zoomX,\n        retinaScaling * this.scaleY / dims.zoomY\n      );\n      ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat');\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * makes use of toCanvasElement.\n     * Once this method was based on toDataUrl and loadImage, so it also had a quality\n     * and format option. toCanvasElement is faster and produce no loss of quality.\n     * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\n     * toCanvasElement and then toBlob from the obtained canvas is also a good option.\n     * This method is sync now, but still support the callback because we did not want to break.\n     * When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {HTMLCanvasElement} Returns DOM element <canvas> with the fabric.Object\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalGroup = this.group,\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n      delete this.group;\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur,\n          width, height;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        if (shadow.nonScaling) {\n          scaling = { scaleX: 1, scaleY: 1 };\n        }\n        else {\n          scaling = this.getObjectScaling();\n        }\n        // consider non scaling shadow.\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * (abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * (abs(scaling.scaleY));\n      }\n      width = boundingRect.width + shadowOffset.x;\n      height = boundingRect.height + shadowOffset.y;\n      // if the current width/height is not an integer\n      // we need to make it so.\n      el.width = Math.ceil(width);\n      el.height = Math.ceil(height);\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.set('canvas', originalCanvas);\n      if (originalGroup) {\n        this.group = originalGroup;\n      }\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return arguments.length > 1 ? Array.from(arguments).includes(this.type) : this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    },\n\n    /**\n     * cancel instance's running animations\n     * override if necessary to dispose artifacts such as `clipPath`\n     */\n    dispose: function () {\n      if (fabric.runningAnimations) {\n        fabric.runningAnimations.cancelByTarget(this);\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  /**\n   * Defines which properties should be enlivened from the object passed to {@link fabric.Object._fromObject}\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type string[]\n   */\n  fabric.Object.ENLIVEN_PROPS = ['clipPath'];\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjectEnlivables(object, object, function () {\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function arrayFromCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var util = fabric.util,\n      degreesToRadians = util.degreesToRadians,\n      multiplyMatrices = util.multiplyTransformMatrices,\n      transformPoint = util.transformPoint;\n\n  util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are depending on control keys and padding the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from the controls positionHandler and are used\n     * to draw and locate controls\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcACoords();\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * includes padding. Used of object detection.\n     * set and refreshed with setCoords.\n     * @memberOf fabric.Object.prototype\n     */\n    lineCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * custom controls interface\n     * controls are added by default_controls.js\n     */\n    controls: { },\n\n    /**\n     * return correct set of coordinates for intersection\n     * this will return either aCoords or lineCoords.\n     * @param {Boolean} absolute will return aCoords if true or lineCoords\n     * @return {Object} {tl, tr, br, bl} points\n     */\n    _getCoords: function(absolute, calculate) {\n      if (calculate) {\n        return (absolute ? this.calcACoords() : this.calcLineCoords());\n      }\n      if (!this.aCoords || !this.lineCoords) {\n        this.setCoords(true);\n      }\n      return (absolute ? this.aCoords : this.lineCoords);\n    },\n\n    /**\n     * return correct set of coordinates for intersection\n     * this will return either aCoords or lineCoords.\n     * The coords are returned in an array.\n     * @return {Array} [tl, tr, br, bl] of points\n     */\n    getCoords: function(absolute, calculate) {\n      return arrayFromCoords(this._getCoords(absolute, calculate));\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          otherCoords = absolute ? other.aCoords : other.lineCoords,\n          i = 0, lines = other._getImageLines(otherCoords);\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var coords = this._getCoords(absolute, calculate),\n          lines = lines || this._getImageLines(coords),\n          xPoints = this._findCrossPoints(point, lines);\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate);\n      // if some point is on screen, the object is on screen.\n      if (points.some(function(point) {\n        return point.x <= pointBR.x && point.x >= pointTL.x &&\n        point.y <= pointBR.y && point.y >= pointTL.y;\n      })) {\n        return true;\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      var allPointsAreOutside = this.getCoords(true, calculate).every(function(point) {\n        return (point.x >= pointBR.x || point.x <= pointTL.x) &&\n        (point.y >= pointBR.y || point.y <= pointTL.y);\n      });\n      return allPointsAreOutside && this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n\n      var lines = {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n\n      // // debugging\n      // if (this.canvas.contextTop) {\n      //   this.canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n      //   this.canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n      //\n      //   this.canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n      //   this.canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n      //\n      //   this.canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n      //   this.canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n      //\n      //   this.canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n      //   this.canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n      // }\n\n      return lines;\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    calcLineCoords: function() {\n      var vpt = this.getViewportTransform(),\n          padding = this.padding, angle = degreesToRadians(this.angle),\n          cos = util.cos(angle), sin = util.sin(angle),\n          cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n          cosPMinusSinP = cosP - sinP, aCoords = this.calcACoords();\n\n      var lineCoords = {\n        tl: transformPoint(aCoords.tl, vpt),\n        tr: transformPoint(aCoords.tr, vpt),\n        bl: transformPoint(aCoords.bl, vpt),\n        br: transformPoint(aCoords.br, vpt),\n      };\n\n      if (padding) {\n        lineCoords.tl.x -= cosPMinusSinP;\n        lineCoords.tl.y -= cosPSinP;\n        lineCoords.tr.x += cosPSinP;\n        lineCoords.tr.y -= cosPMinusSinP;\n        lineCoords.bl.x -= cosPSinP;\n        lineCoords.bl.y += cosPMinusSinP;\n        lineCoords.br.x += cosPMinusSinP;\n        lineCoords.br.y += cosPSinP;\n      }\n\n      return lineCoords;\n    },\n\n    calcOCoords: function() {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          vpt = this.getViewportTransform(),\n          startMatrix = multiplyMatrices(vpt, translateMatrix),\n          finalMatrix = multiplyMatrices(startMatrix, rotateMatrix),\n          finalMatrix = multiplyMatrices(finalMatrix, [1 / vpt[0], 0, 0, 1 / vpt[3], 0, 0]),\n          dim = this._calculateCurrentDimensions(),\n          coords = {};\n      this.forEachControl(function(control, key, fabricObject) {\n        coords[key] = control.positionHandler(dim, finalMatrix, fabricObject);\n      });\n\n      // debug code\n      // var canvas = this.canvas;\n      // setTimeout(function() {\n      //   canvas.contextTop.clearRect(0, 0, 700, 700);\n      //   canvas.contextTop.fillStyle = 'green';\n      //   Object.keys(coords).forEach(function(key) {\n      //     var control = coords[key];\n      //     canvas.contextTop.fillRect(control.x, control.y, 3, 3);\n      //   });\n      // }, 50);\n      return coords;\n    },\n\n    calcACoords: function() {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          finalMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2;\n      return {\n        // corners\n        tl: transformPoint({ x: -w, y: -h }, finalMatrix),\n        tr: transformPoint({ x: w, y: -h }, finalMatrix),\n        bl: transformPoint({ x: -w, y: h }, finalMatrix),\n        br: transformPoint({ x: w, y: h }, finalMatrix)\n      };\n    },\n\n    /**\n     * Sets corner and controls position coordinates based on current angle, width and height, left and top.\n     * oCoords are used to find the corners\n     * aCoords are used to quickly find an object on the canvas\n     * lineCoords are used to quickly find object during pointer events.\n     * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n     *\n     * @param {Boolean} [skipCorners] skip calculation of oCoords.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(skipCorners) {\n      this.aCoords = this.calcACoords();\n      // in case we are in a group, for how the inner group target check works,\n      // lineCoords are exactly aCoords. Since the vpt gets absorbed by the normalized pointer.\n      this.lineCoords = this.group ? this.aCoords : this.calcLineCoords();\n      if (skipCorners) {\n        return this;\n      }\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      this.oCoords = this.calcOCoords();\n      this._setCornerCoords && this._setCornerCoords();\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      return util.calcRotateMatrix(this);\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * There are some situation in which this is useful to avoid the fake rotation.\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      var matrix = this.calcOwnMatrix();\n      if (skipGroup || !this.group) {\n        return matrix;\n      }\n      var key = this.transformMatrixKey(skipGroup), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(false), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties, this matrix does not include the group transformation\n     * @return {Array} transform matrix for the object\n     */\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var tMatrix = this._calcTranslateMatrix(),\n          options = {\n            angle: this.angle,\n            translateX: tMatrix[4],\n            translateY: tMatrix[5],\n            scaleX: this.scaleX,\n            scaleY: this.scaleY,\n            skewX: this.skewX,\n            skewY: this.skewY,\n            flipX: this.flipX,\n            flipY: this.flipY,\n          };\n      cache.key = key;\n      cache.value = util.composeMatrix(options);\n      return cache.value;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param {Number} skewX, a value to override current skewX\n     * @param {Number} skewY, a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions, dimX, dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      }\n      else {\n        dimensions = this._getNonTransformedDimensions();\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      }\n      var bbox = util.sizeAfterTransform(dimX, dimY, {\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: skewX,\n        skewY: skewY,\n      });\n      return this._finalizeDimensions(bbox.x, bbox.y);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function(width, height) {\n      return this.strokeUniform ?\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\n        :\n        { x: width, y: height };\n    },\n\n    /*\n     * Calculate object dimensions for controls box, including padding and canvas zoom.\n     * and active selection\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = transformPoint(dim, vpt, true);\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else if (this.canvas) {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else if (this.canvas) {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else if (this.canvas) {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else if (this.canvas) {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else if (this.canvas) {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      return ['overline', 'underline', 'line-through'].filter(function(decoration) {\n        return style[decoration.replace('-', '')];\n      }).join(' ');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform +\n        (additionalTransform || '') + '\" ';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\n          stroke = this.stroke, fill = this.fill, shadow = this.shadow,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        vectorEffect,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (fill && fill.toLive) {\n        markup.push(fill.toSVG(this));\n      }\n      if (stroke && stroke.toLive) {\n        markup.push(stroke.toSVG(this));\n      }\n      if (shadow) {\n        markup.push(shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        // we do not want to compare those.\n        if (key === 'canvas' || key === 'group') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer, forTouch) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines, keys = Object.keys(this.oCoords),\n          j = keys.length - 1, i;\n      this.__corner = 0;\n\n      // cycle in reverse order so we pick first the one on top\n      for (; j >= 0; j--) {\n        i = keys[j];\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        lines = this._getImageLines(forTouch ? this.oCoords[i].touchCorner : this.oCoords[i].corner);\n        // // debugging\n        //\n        // this.canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // this.canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n        //\n        // this.canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // this.canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n        //\n        // this.canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // this.canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n        //\n        // this.canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // this.canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Calls a function for each control. The function gets called,\n     * with the control, the object that is calling the iterator and the control's key\n     * @param {Function} fn function to iterate over the controls over\n     */\n    forEachControl: function(fn) {\n      for (var i in this.controls) {\n        fn(this.controls[i], i, this);\n      };\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * note: if we would switch to ROUND corner area, all of this would disappear.\n     * everything would resolve to a single point and a pythagorean theorem for the distance\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords;\n\n      for (var control in coords) {\n        var controlObject = this.controls[control];\n        coords[control].corner = controlObject.calcCornerCoords(\n          this.angle, this.cornerSize, coords[control].x, coords[control].y, false);\n        coords[control].touchCorner = controlObject.calcCornerCoords(\n          this.angle, this.touchCornerSize, coords[control].x, coords[control].y, true);\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          shouldStroke = false;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (hasControls) {\n        ctx.beginPath();\n        this.forEachControl(function(control, key, fabricObject) {\n          // in this moment, the ctx is centered on the object.\n          // width and height of the above function are the size of the bbox.\n          if (control.withConnection && control.getVisibility(fabricObject, key)) {\n            // reset movement for each control\n            shouldStroke = true;\n            ctx.moveTo(control.x * width, control.y * height);\n            ctx.lineTo(\n              control.x * width + control.offsetX,\n              control.y * height + control.offsetY\n            );\n          }\n        });\n        if (shouldStroke) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var bbox = fabric.util.sizeAfterTransform(this.width, this.height, options),\n          strokeWidth = this.strokeWidth,\n          strokeUniform = this.strokeUniform,\n          borderScaleFactor = this.borderScaleFactor,\n          width =\n            bbox.x + strokeWidth * (strokeUniform ? this.canvas.getZoom() : options.scaleX) + borderScaleFactor,\n          height =\n            bbox.y + strokeWidth * (strokeUniform ? this.canvas.getZoom() : options.scaleY) + borderScaleFactor;\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      ctx.save();\n      var retinaScaling = this.canvas.getRetinaScaling(), matrix, p;\n      ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray);\n      this.setCoords();\n      if (this.group) {\n        // fabricJS does not really support drawing controls inside groups,\n        // this piece of code here helps having at least the control in places.\n        // If an application needs to show some objects as selected because of some UI state\n        // can still call Object._renderControls() on any object they desire, independently of groups.\n        // using no padding, circular controls and hiding the rotating cursor is higly suggested,\n        matrix = this.group.calcTransformMatrix();\n      }\n      this.forEachControl(function(control, key, fabricObject) {\n        p = fabricObject.oCoords[key];\n        if (control.getVisibility(fabricObject, key)) {\n          if (matrix) {\n            p = fabric.util.transformPoint(p, matrix);\n          }\n          control.render(ctx, p.x, p.y, styleOverride, fabricObject);\n        }\n      });\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlKey) {\n      return this.controls[controlKey] && this.controls[controlKey].getVisibility(this, controlKey);\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlKey, visible) {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {};\n      }\n      this._controlsVisibility[controlKey] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.AnimationContext} context\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    return fabric.util.animate({\n      target: this,\n      startValue: object.left,\n      endValue: this.getCenterPoint().x,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.AnimationContext} context\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    return fabric.util.animate({\n      target: this,\n      startValue: object.top,\n      endValue: this.getCenterPoint().y,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.AnimationContext} context\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    return fabric.util.animate({\n      target: this,\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @return {fabric.AnimationContext | fabric.AnimationContext[]} animation context (or an array if passed multiple properties)\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function () {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks, out = [];\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        out.push(this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks));\n      }\n      return out;\n    }\n    else {\n      return this._animate.apply(this, arguments);\n    }\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var propIsColor =\n      _this.colorProperties.indexOf(property) > -1 ||\n      (propPair && _this.colorProperties.indexOf(propPair[1]) > -1);\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (!propIsColor) {\n      if (~to.indexOf('=')) {\n        to = currentValue + parseFloat(to.replace('=', ''));\n      }\n      else {\n        to = parseFloat(to);\n      }\n    }\n\n    var _options = {\n      target: this,\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function(value, valueProgress, timeProgress) {\n        return options.abort.call(_this, value, valueProgress, timeProgress);\n      },\n      onChange: function (value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function (value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    };\n\n    if (propIsColor) {\n      return fabric.util.animateColor(_options.startValue, _options.endValue, _options.duration, _options);\n    }\n    else {\n      return fabric.util.animate(_options);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 };\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n\n      var p = this.calcLinePoints();\n      ctx.moveTo(p.x1, p.y1);\n      ctx.lineTo(p.x2, p.y2);\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      degreesToRadians = fabric.util.degreesToRadians;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * degrees of start of the circle.\n     * probably will change to degrees in next major version\n     * @type Number 0 - 359\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * probably will change to degrees in next major version\n     * @type Number 1 - 360\n     * @default 360\n     */\n    endAngle: 360,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % 360;\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var start = degreesToRadians(this.startAngle),\n            end = degreesToRadians(this.endAngle),\n            radius = this.radius,\n            startX = fabric.util.cos(start) * radius,\n            startY = fabric.util.sin(start) * radius,\n            endX = fabric.util.cos(end) * radius,\n            endY = fabric.util.sin(end) * radius,\n            largeFlag = angle > 180 ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + radius + ' ' + radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" ', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        degreesToRadians(this.startAngle),\n        degreesToRadians(this.endAngle),\n        false\n      );\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {void}\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {void}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    parsedAttributes.height  = parsedAttributes.height || 0;\n    parsedAttributes.width  = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed,\n      projectStrokeOnPoints = fabric.util.projectStrokeOnPoints;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * WARNING: Feature in progress\n     * Calculate the exact bounding box taking in account strokeWidth on acute angles\n     * this will be turned to true by default on fabric 6.0\n     * maybe will be left in as an optimization since calculations may be slow\n     * @deprecated\n     * @type Boolean\n     * @default false\n     */\n    exactBoundingBox: false,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     */\n    _projectStrokeOnPoints: function () {\n      return projectStrokeOnPoints(this.points, this, true);\n    },\n\n    _setPositionDimensions: function(options) {\n      var calcDim = this._calcDimensions(options), correctLeftTop,\n          correctSize = this.exactBoundingBox ? this.strokeWidth : 0;\n      this.width = calcDim.width - correctSize;\n      this.height = calcDim.height - correctSize;\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin(\n          {\n            // this looks bad, but is one way to keep it optional for now.\n            x: calcDim.left - this.strokeWidth / 2 + correctSize / 2,\n            y: calcDim.top - this.strokeWidth / 2 + correctSize / 2\n          },\n          'left',\n          'top',\n          this.originX,\n          this.originY\n        );\n      }\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2 + correctSize / 2,\n        y: calcDim.top + this.height / 2 + correctSize / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, width, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.exactBoundingBox ? this._projectStrokeOnPoints() : this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElementGenerator = function(_class) {\n    return function(element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n      options || (options = { });\n\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      projectStrokeOnPoints = fabric.util.projectStrokeOnPoints;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     */\n    _projectStrokeOnPoints: function () {\n      return projectStrokeOnPoints(this.points, this);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @return {void}\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function (path, options) {\n      options = clone(options || {});\n      delete options.path;\n      this.callSuper('initialize', options);\n      this._setPath(path || [], options);\n    },\n\n    /**\n    * @private\n    * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n    * @param {Object} [options] Options object\n    */\n    _setPath: function (path, options) {\n      this.path = fabric.util.makePathSimpler(\n        Array.isArray(path) ? path : fabric.util.parsePath(path)\n      );\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options || {});\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              current[3] + l,\n              current[4] + t\n            );\n            x = current[3];\n            y = current[4];\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = fabric.util.joinPath(this.path);\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              current[1],\n              current[2],\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        if (object.clipPath) {\n          fabric.util.enlivenObjects([object.clipPath], function(elivenedObjects) {\n            path.clipPath = elivenedObjects[0];\n            callback && callback(path);\n          });\n        }\n        else {\n          callback && callback(path);\n        }\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     */\n    _updateObjectsACoords: function() {\n      var skipControls = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(skipControls);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          skipControls = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(skipControls);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      var nested = !!this.group;\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        if (nested) {\n          // if this group is inside another group, we need to pre transform the object\n          fabric.util.removeTransformFromObject(object, this.group.calcTransformMatrix());\n        }\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.dirty = true;\n      if (nested) {\n        this.group.addWithUpdate();\n      }\n      else {\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects\n        .filter(function (obj) {\n          return !obj.excludeFromExport;\n        })\n        .map(function (obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (fabric.Object.prototype.willDrawShadow.call(this)) {\n        return true;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx, this.clipPath);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Restores original state of each of group objects (original state is that which was before group was created).\n     * if the nested boolean is true, the original state will be restored just for the\n     * first group and not for all the group chain\n     * @private\n     * @param {Boolean} nested tell the function to restore object state up to the parent group and not more\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      var groupMatrix = this.calcOwnMatrix();\n      this._objects.forEach(function(object) {\n        // instead of using _this = this;\n        fabric.util.addTransformToObject(object, groupMatrix);\n        delete object.group;\n        object.setCoords();\n      });\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    dispose: function () {\n      this.callSuper('dispose');\n      this.forEachObject(function (object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var skipControls = true;\n      this.forEachObject(function(object) {\n        object.setCoords(skipControls);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop, coords,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        coords = o.calcACoords();\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(coords[prop].x);\n          aY.push(coords[prop].y);\n        }\n        o.aCoords = coords;\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function(reviver) {\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n      }\n      svgString.push('</g>\\n');\n      return svgString;\n    },\n\n    /**\n     * Returns styles-string for svg-export, specific version for group\n     * @return {String}\n     */\n    getSvgStyles: function() {\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ?\n            'opacity: ' + this.opacity + ';' : '',\n          visibility = this.visible ? '' : ' visibility: hidden;';\n      return [\n        opacity,\n        this.getSvgFilter(),\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    var objects = object.objects,\n        options = fabric.util.object.clone(object, true);\n    delete options.objects;\n    if (typeof objects === 'string') {\n      // it has to be an url or something went wrong.\n      fabric.loadSVGFromURL(objects, function (elements) {\n        var group = fabric.util.groupSVGElements(elements, object, objects);\n        var clipPath = options.clipPath;\n        delete options.clipPath;\n        group.set(options);\n        if (clipPath) {\n          fabric.util.enlivenObjects([clipPath], function(elivenedObjects) {\n            group.clipPath = elivenedObjects[0];\n            callback && callback(group);\n          });\n        }\n        else {\n          callback && callback(group);\n        }\n      });\n      return;\n    }\n    fabric.util.enlivenObjects(objects, function (enlivenedObjects) {\n      fabric.util.enlivenObjectEnlivables(object, options, function () {\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Indicates whether this canvas will use image smoothing when painting this image.\n     * Also influence if the cacheCanvas for this image uses imageSmoothing\n     * @since 4.0.0-beta.11\n     * @type Boolean\n     * @default\n     */\n    imageSmoothing: true,\n\n    /**\n     * Constructor\n     * Image can be initialized with any canvas drawable or a string.\n     * The string should be a url and will be loaded as an image.\n     * Canvas and Image element work out of the box, while videos require extra code to work.\n     * Please check video element events for seeking.\n     * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal filters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function () {\n      this.callSuper('dispose');\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Get the crossOrigin value (of the corresponding image element)\n     */\n    getCrossOrigin: function() {\n      return this._originalElement && (this._originalElement.crossOrigin || null);\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          crossOrigin: this.getCrossOrigin(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg, element = this._element,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '', imageRendering = '';\n      if (!element) {\n        return [];\n      }\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      if (!this.imageSmoothing) {\n        imageRendering = '\" image-rendering=\"optimizeSpeed';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', element.width || element.naturalWidth,\n        '\" height=\"', element.height || element.height,\n        imageRendering,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        }\n        else {\n          return element.src;\n        }\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @param {String} [options.crossOrigin] crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img, isError) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback && callback(this, isError);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      fabric.util.setImageSmoothing(ctx, this.imageSmoothing);\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * it will set the imageSmoothing for the draw operation\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      fabric.util.setImageSmoothing(ctx, this.imageSmoothing);\n      fabric.Object.prototype.drawCacheOnCanvas.call(this, ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return this.needsItsOwnCache();\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element;\n      if (!elementToDraw) {\n        return;\n      }\n      var scaleX = this._filterScalingX, scaleY = this._filterScalingY,\n          w = this.width, h = this.height, min = Math.min, max = Math.max,\n          // crop values cannot be lesser than 0.\n          cropX = max(this.cropX, 0), cropY = max(this.cropY, 0),\n          elWidth = elementToDraw.naturalWidth || elementToDraw.width,\n          elHeight = elementToDraw.naturalHeight || elementToDraw.height,\n          sX = cropX * scaleX,\n          sY = cropY * scaleY,\n          // the width height cannot exceed element width/height, starting from the crop offset.\n          sW = min(w * scaleX, elWidth - sX),\n          sH = min(h * scaleY, elHeight - sY),\n          x = -w / 2, y = -h / 2,\n          maxDestW = min(w, elWidth / scaleX - cropX),\n          maxDestH = min(h, elHeight / scaleY - cropY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\n    },\n\n    /**\n     * needed to check if image needs resize\n     * @private\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, isError) {\n      if (isError) {\n        callback && callback(null, true);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjectEnlivables(object, object, function () {\n            var image = new fabric.Image(img, object);\n            callback(image, false);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument). Second argument is a boolean indicating if an error occurred or not.\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img, isError) {\n      callback && callback(new fabric.Image(img, imgOptions), isError);\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat(\n      'x y width height preserveAspectRatio xlink:href crossOrigin image-rendering'.split(' ')\n    );\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    return this.rotate(this._getAngleValueForStraighten());\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    return fabric.util.animate({\n      target: this,\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   */\n  fxStraightenObject: function (object) {\n    return object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined', canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the texture to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @param {Number} filterType gl.NEAREST or gl.LINEAR usually, webgl numeri constants\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource, filterType) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filterType || gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filterType || gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\n     * to save some calculation\n     * @type Boolean\n     * @default true\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     * @type String\n     * @default\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     * @type String\n     * @default\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     * @type Number\n     * @default\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter (one of \"multiply\", \"mask\")\n     * @type String\n     * @default\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 0.25\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * contrast value, range from -1 to 1.\n     * @param {Number} contrast\n     * @default 0\n     */\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 1\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Saturation value, from -1 to 1.\n     * Increases/decreases the color saturation.\n     * A value of 0 has no effect.\n     * \n     * @param {Number} saturation\n     * @default\n     */\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Vibrance filter class\n   * @class fabric.Image.filters.Vibrance\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Vibrance#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Vibrance({\n   *   vibrance: 1\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Vibrance = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Vibrance.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Vibrance',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uVibrance;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float max = max(color.r, max(color.g, color.b));\\n' +\n        'float avg = (color.r + color.g + color.b) / 3.0;\\n' +\n        'float amt = (abs(max - avg) * 2.0) * uVibrance;\\n' +\n        'color.r += max != color.r ? (max - color.r) * amt : 0.00;\\n' +\n        'color.g += max != color.g ? (max - color.g) * amt : 0.00;\\n' +\n        'color.b += max != color.b ? (max - color.b) * amt : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Vibrance value, from -1 to 1.\n     * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\n     * A value of 0 has no effect.\n     * \n     * @param {Number} vibrance\n     * @default\n     */\n    vibrance: 0,\n\n    mainParameter: 'vibrance',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Vibrance.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.vibrance=0] Vibrance value for the image (between -1 and 1)\n     */\n\n    /**\n     * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.vibrance === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.vibrance, i, max, avg, amt;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        amt = ((Math.abs(max - avg) * 2 / 255) * adjust);\n        data[i] += max !== data[i] ? (max - data[i]) * amt : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * amt : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * amt : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uVibrance: gl.getUniformLocation(program, 'uVibrance'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Vibrance} Instance of fabric.Image.filters.Vibrance\n   */\n  fabric.Image.filters.Vibrance.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range between 0 and 1.\n     * @type Number\n     * @default\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   gamma: [1, 0.5, 2.1]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var additionalProps =\n    ('fontFamily fontWeight fontSize text underline overline linethrough' +\n    ' textAlign fontStyle lineHeight textBackgroundColor charSpacing styles' +\n    ' direction path pathStartOffset pathSide pathAlign').split(' ');\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n      'path',\n      'pathStartOffset',\n      'pathSide',\n      'pathAlign'\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat(additionalProps),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat(additionalProps),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * fabric.Path that the text should follow.\n     * since 4.6.0 the path will be drawn automatically.\n     * if you want to make the path visible, give it a stroke and strokeWidth or fill value\n     * if you want it to be hidden, assign visible = false to the path.\n     * This feature is in BETA, and SVG import/export is not yet supported.\n     * @type fabric.Path\n     * @example\n     * var textPath = new fabric.Text('Text on a path', {\n     *     top: 150,\n     *     left: 150,\n     *     textAlign: 'center',\n     *     charSpacing: -50,\n     *     path: new fabric.Path('M 0 0 C 50 -100 150 -100 200 0', {\n     *         strokeWidth: 1,\n     *         visible: false\n     *     }),\n     *     pathSide: 'left',\n     *     pathStartOffset: 0\n     * });\n     * @default\n     */\n    path:               null,\n\n    /**\n     * Offset amount for text path starting position\n     * Only used when text has a path\n     * @type Number\n     * @default\n     */\n    pathStartOffset:               0,\n\n    /**\n     * Which side of the path the text should be drawn on.\n     * Only used when text has a path\n     * @type {String} 'left|right'\n     * @default\n     */\n    pathSide:               'left',\n\n    /**\n     * How text is aligned to the path. This property determines\n     * the perpendicular position of each character relative to the path.\n     * (one of \"baseline\", \"center\", \"ascender\", \"descender\")\n     * This feature is in BETA, and its behavior may change\n     * @type String\n     * @default\n     */\n    pathAlign:               'baseline',\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - character numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoid creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, styles only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\n     * determine the direction of the text.\n     * This has to be set manually together with textAlign and originX for proper\n     * experience.\n     * some interesting link for the future\n     * https://www.w3.org/International/questions/qa-bidi-unicode-controls\n     * @since 4.5.0\n     * @type {String} 'ltr|rtl'\n     * @default\n     */\n    direction: 'ltr',\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      if (this.path) {\n        this.setPathInfo();\n      }\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * If text has a path, it will add the extra information needed\n     * for path and text calculations\n     * @return {fabric.Text} thisArg\n     */\n    setPathInfo: function() {\n      var path = this.path;\n      if (path) {\n        path.segmentsInfo = fabric.util.getPathSegmentsInfo(path.path);\n      }\n    },\n\n    /**\n     * Return a context for measurement of text string.\n     * if created it gets stored for reuse\n     * this is for internal use, please do not use it\n     * @private\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      if (this.path) {\n        this.width = this.path.width;\n        this.height = this.path.height;\n      }\n      else {\n        this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n        this.height = this.calcTextHeight();\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function() {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var path = this.path;\n      path && !path.isNotVisible() && path._render(ctx);\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetical';\n      if (this.path) {\n        switch (this.pathAlign) {\n          case 'center':\n            ctx.textBaseline = 'middle';\n            break;\n          case 'ascender':\n            ctx.textBaseline = 'top';\n            break;\n          case 'descender':\n            ctx.textBaseline = 'bottom';\n            break;\n        }\n      }\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          lineTopOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor, path = this.path,\n          drawStart;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (path) {\n            ctx.save();\n            ctx.translate(charBox.renderLeft, charBox.renderTop);\n            ctx.rotate(charBox.angle);\n            ctx.fillStyle = currentColor;\n            currentColor && ctx.fillRect(\n              -charBox.width / 2,\n              -heightOfLine / this.lineHeight * (1 - this._fontSizeFraction),\n              charBox.width,\n              heightOfLine / this.lineHeight\n            );\n            ctx.restore();\n          }\n          else if (currentColor !== lastColor) {\n            drawStart = leftOffset + lineLeftOffset + boxStart;\n            if (this.direction === 'rtl') {\n              drawStart = this.width - drawStart - boxWidth;\n            }\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              drawStart,\n              lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor && !path) {\n          drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            drawStart,\n            lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} _char, char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line index number\n     * @param {Number} _char the character index number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, _char) {\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length),\n          positionInPath = 0, startingPoint, totalPathLength, path = this.path,\n          reverse = this.pathSide === 'right';\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      if (path) {\n        totalPathLength = path.segmentsInfo[path.segmentsInfo.length - 1].length;\n        startingPoint = fabric.util.getPointOnPath(path.path, 0, path.segmentsInfo);\n        startingPoint.x += path.pathOffset.x;\n        startingPoint.y += path.pathOffset.y;\n        switch (this.textAlign) {\n          case 'left':\n            positionInPath = reverse ? (totalPathLength - width) : 0;\n            break;\n          case 'center':\n            positionInPath = (totalPathLength - width) / 2;\n            break;\n          case 'right':\n            positionInPath = reverse ? 0 : (totalPathLength - width);\n            break;\n          //todo - add support for justify\n        }\n        positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\n        for (i = reverse ? line.length - 1 : 0;\n          reverse ? i >= 0 : i < line.length;\n          reverse ? i-- : i++) {\n          graphemeInfo = lineBounds[i];\n          if (positionInPath > totalPathLength) {\n            positionInPath %= totalPathLength;\n          }\n          else if (positionInPath < 0) {\n            positionInPath += totalPathLength;\n          }\n          // it would probably much faster to send all the grapheme position for a line\n          // and calculate path position/angle at once.\n          this._setGraphemeOnPath(positionInPath, graphemeInfo, startingPoint);\n          positionInPath += graphemeInfo.kernedWidth;\n        }\n      }\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Calculate the angle  and the left,top position of the char that follow a path.\n     * It appends it to graphemeInfo to be reused later at rendering\n     * @private\n     * @param {Number} positionInPath to be measured\n     * @param {Object} graphemeInfo current grapheme box information\n     * @param {Object} startingPoint position of the point\n     */\n    _setGraphemeOnPath: function(positionInPath, graphemeInfo, startingPoint) {\n      var centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\n          path = this.path;\n\n      // we are at currentPositionOnPath. we want to know what point on the path is.\n      var info = fabric.util.getPointOnPath(path.path, centerPosition, path.segmentsInfo);\n      graphemeInfo.renderLeft = info.x - startingPoint.x;\n      graphemeInfo.renderTop = info.y - startingPoint.y;\n      graphemeInfo.angle = info.angle + (this.pathSide ===  'right' ? Math.PI : 0);\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset,\n          top + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method fillText or strokeText.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} line Content of the line, splitted in an array by grapheme\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          path = this.path,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex) && !path,\n          isLtr = this.direction === 'ltr', sign = this.direction === 'ltr' ? 1 : -1,\n          drawingLeft, currentDirection = ctx.canvas.getAttribute('dir');\n      ctx.save();\n      if (currentDirection !== this.direction) {\n        ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\n        ctx.direction = isLtr ? 'ltr' : 'rtl';\n        ctx.textAlign = isLtr ? 'left' : 'right';\n      }\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\n        this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing || path;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += sign * (charBox.kernedWidth - charBox.width);\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = fabric.util.hasStyleChanged(actualStyle, nextStyle, false);\n        }\n        if (timeToRender) {\n          if (path) {\n            ctx.save();\n            ctx.translate(charBox.renderLeft, charBox.renderTop);\n            ctx.rotate(charBox.angle);\n            this._renderChar(method, ctx, lineIndex, i, charsToRender, -boxWidth / 2, 0, lineHeight);\n            ctx.restore();\n          }\n          else {\n            drawingLeft = left;\n            this._renderChar(method, ctx, lineIndex, i, charsToRender, drawingLeft, top, lineHeight);\n          }\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += sign * boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * This function try to patch the missing gradientTransform on canvas gradients.\n     * transforming a context to transform the gradient, is going to transform the stroke too.\n     * we want to transform the gradient but not the stroke operation, so we create\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n     * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n     * is limited.\n     * @private\n     * @param {fabric.Gradient} filler a fabric gradient instance\n     * @return {CanvasPattern} a pattern to use as fill/stroke style\n     */\n    _applyPatternGradientTransformText: function(filler) {\n      var pCanvas = fabric.util.createCanvasElement(), pCtx,\n          // TODO: verify compatibility with strokeUniform\n          width = this.width + this.strokeWidth, height = this.height + this.strokeWidth;\n      pCanvas.width = width;\n      pCanvas.height = height;\n      pCtx = pCanvas.getContext('2d');\n      pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\n      pCtx.lineTo(0, height); pCtx.closePath();\n      pCtx.translate(width / 2, height / 2);\n      pCtx.fillStyle = filler.toLive(pCtx);\n      this._applyPatternGradientTransform(pCtx, filler);\n      pCtx.fill();\n      return pCtx.createPattern(pCanvas, 'no-repeat');\n    },\n\n    handleFiller: function(ctx, property, filler) {\n      var offsetX, offsetY;\n      if (filler.toLive) {\n        if (filler.gradientUnits === 'percentage' || filler.gradientTransform || filler.patternTransform) {\n          // need to transform gradient in a pattern.\n          // this is a slow process. If you are hitting this codepath, and the object\n          // is not using caching, you should consider switching it on.\n          // we need a canvas as big as the current object caching canvas.\n          offsetX = -this.width / 2;\n          offsetY = -this.height / 2;\n          ctx.translate(offsetX, offsetY);\n          ctx[property] = this._applyPatternGradientTransformText(filler);\n          return { offsetX: offsetX, offsetY: offsetY };\n        }\n        else {\n          // is a simple gradient or pattern\n          ctx[property] = filler.toLive(ctx, this);\n          return this._applyPatternGradientTransform(ctx, filler);\n        }\n      }\n      else {\n        // is a color\n        ctx[property] = filler;\n      }\n      return { offsetX: 0, offsetY: 0 };\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      ctx.lineWidth = decl.strokeWidth;\n      ctx.lineCap = this.strokeLineCap;\n      ctx.lineDashOffset = this.strokeDashOffset;\n      ctx.lineJoin = this.strokeLineJoin;\n      ctx.miterLimit = this.strokeMiterLimit;\n      return this.handleFiller(ctx, 'strokeStyle', decl.stroke);\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      return this.handleFiller(ctx, 'fillStyle', decl.fill);\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth,\n          fillOffsets, strokeOffsets;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      ctx.save();\n\n      shouldFill && (fillOffsets = this._setFillStyles(ctx, fullDecl));\n      shouldStroke && (strokeOffsets = this._setStrokeStyles(ctx, fullDecl));\n\n      ctx.font = this._getFontDeclaration(fullDecl);\n\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n      shouldFill && ctx.fillText(_char, left - fillOffsets.offsetX, top - fillOffsets.offsetY);\n      shouldStroke && ctx.strokeText(_char, left - strokeOffsets.offsetX, top - strokeOffsets.offsetY);\n      ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex),\n          lineDiff = this.width - lineWidth, textAlign = this.textAlign, direction = this.direction,\n          isEndOfWrapping, leftOffset = 0, isEndOfWrapping = this.isEndOfWrapping(lineIndex);\n      if (textAlign === 'justify'\n        || (textAlign === 'justify-center' && !isEndOfWrapping)\n        || (textAlign === 'justify-right' && !isEndOfWrapping)\n        || (textAlign === 'justify-left' && !isEndOfWrapping)\n      ) {\n        return 0;\n      }\n      if (textAlign === 'center') {\n        leftOffset = lineDiff / 2;\n      }\n      if (textAlign === 'right') {\n        leftOffset = lineDiff;\n      }\n      if (textAlign === 'justify-center') {\n        leftOffset = lineDiff / 2;\n      }\n      if (textAlign === 'justify-right') {\n        leftOffset = lineDiff;\n      }\n      if (direction === 'rtl') {\n        leftOffset -= lineDiff;\n      }\n      return leftOffset;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex] !== undefined) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var lineInfo = this.measureLine(lineIndex);\n      var width = lineInfo.width;\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the character number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill, path = this.path,\n          charSpacing = this._getWidthOfCharSpacing(),\n          offsetY = this.offsets[type];\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if (path && currentDecoration && currentFill) {\n            ctx.save();\n            ctx.fillStyle = lastFill;\n            ctx.translate(charBox.renderLeft, charBox.renderTop);\n            ctx.rotate(charBox.angle);\n            ctx.fillRect(\n              -charBox.kernedWidth / 2,\n              offsetY * _size + _dy,\n              charBox.kernedWidth,\n              this.fontSize / 15\n            );\n            ctx.restore();\n          }\n          else if (\n            (currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy)\n            && boxWidth > 0\n          ) {\n            var drawStart = leftOffset + lineLeftOffset + boxStart;\n            if (this.direction === 'rtl') {\n              drawStart = this.width - drawStart - boxWidth;\n            }\n            if (lastDecoration && lastFill) {\n              ctx.fillStyle = lastFill;\n              ctx.fillRect(\n                drawStart,\n                top + offsetY * size + dy,\n                boxWidth,\n                this.fontSize / 15\n              );\n            }\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        var drawStart = leftOffset + lineLeftOffset + boxStart;\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - boxWidth;\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          drawStart,\n          top + offsetY * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 || family.indexOf(',') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        // verify if this can be fixed in JSDOM\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var allProperties = additionalProps.concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', allProperties);\n      obj.styles = fabric.util.stylesToArray(this.styles, this.text);\n      if (obj.path) {\n        obj.path = this.path.toObject();\n      }\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      var isAddingPath = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          if (_key === 'path') {\n            this.setPathInfo();\n          }\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n          isAddingPath = isAddingPath || _key === 'path';\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n        isAddingPath = key === 'path';\n      }\n      if (isAddingPath) {\n        this.setPathInfo();\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object plain js Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    var objectCopy = clone(object), path = object.path;\n    delete objectCopy.path;\n    return fabric.Object._fromObject('Text', objectCopy, function(textInstance) {\n      textInstance.styles = fabric.util.stylesFromArray(object.styles, object.text);\n      if (path) {\n        fabric.Object._fromObject('Path', path, function(pathInstance) {\n          textInstance.set('path', pathInstance);\n          callback(textInstance);\n        }, 'path');\n      }\n      else {\n        callback(textInstance);\n      }\n    }, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { 0: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of text cursor color in editing mode.\n     * if not set (default) will take color from the text.\n     * if set to a color value that fabric can understand, it will\n     * be used instead of the color of the text at the current position.\n     * @type String\n     * @default\n     */\n    cursorColor: '',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * DOM container to append the hiddenTextarea.\n     * An alternative to attaching to the document.body.\n     * Useful to reduce laggish redraw of the full document.body tree and\n     * also with modals event capturing that won't let the textarea take focus.\n     * @type HTMLElement\n     * @default\n     */\n    hiddenTextareaContainer: null,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this.transform(ctx);\n      this._clearTextArea(ctx);\n      skipRestore || ctx.restore();\n    },\n    /**\n     * Renders cursor or selection (depending on what exists)\n     * it does on the contextTop. If contextTop is not available, do nothing.\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(),\n          ctx = this.canvas.contextTop;\n      this.clearContextTop(true);\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      if (this.direction === 'rtl') {\n        boundaries.left *= -1;\n      }\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.fillStyle = this.cursorColor || this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        var drawStart = boundaries.left + lineOffset + boxStart,\n            drawWidth = boxEnd - boxStart,\n            drawHeight = lineHeight, extraTop = 0;\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          drawHeight = 1;\n          extraTop = lineHeight;\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n        }\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - drawWidth;\n        }\n        ctx.fillRect(\n          drawStart,\n          boundaries.top + boundaries.topOffset + extraTop,\n          drawWidth,\n          drawHeight);\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * Unused from the library, is for the end user\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * if the text object has a pattern or gradient for filler, it will return that.\n     * Unused by the library, is for the end user\n     * @return {String | fabric.Gradient | fabric.Pattern} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    var styles = fabric.util.stylesFromArray(object.styles, object.text);\n    //copy object to prevent mutation\n    var objCopy = Object.assign({}, object, { styles: styles });\n    parseDecoration(objCopy);\n    if (objCopy.styles) {\n      for (var i in objCopy.styles) {\n        for (var j in objCopy.styles[i]) {\n          parseDecoration(objCopy.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', objCopy, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var text = this._text,\n          index     = this._reSpace.test(text[selectionStart]) ? selectionStart - 1 : selectionStart,\n          _char     = text[index],\n          // wrong\n          reNonWord = fabric.reNonWord;\n\n      while (!reNonWord.test(_char) && index > 0 && index < text.length) {\n        index += direction;\n        _char = text[index];\n      }\n      if (reNonWord.test(_char)) {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      // regain focus\n      document.activeElement !== this.hiddenTextarea && this.hiddenTextarea.focus();\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          retinaScaling = this.canvas.getRetinaScaling(),\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width / retinaScaling,\n          upperCanvasHeight = upperCanvas.height / retinaScaling,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      var hiddenTextarea = this.hiddenTextarea;\n      this.selected = false;\n      this.isEditing = false;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (hiddenTextarea) {\n        hiddenTextarea.blur && hiddenTextarea.blur();\n        hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n      }\n      this.hiddenTextarea = null;\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Handle insertion of more consecutive style lines for when one or more\n     * newlines gets added to the text. Since current style needs to be shifted\n     * first we shift the current style of the number lines needed, then we add\n     * new lines from the last to the first.\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false,\n          isEndOfLine = this._unwrappedTextLines[lineIndex].length === charIndex;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          if (!(isEndOfLine && charIndex === 0)) {\n            delete this.styles[lineIndex][index];\n          }\n        }\n      }\n      var styleCarriedOver = false;\n      if (somethingAdded && !isEndOfLine) {\n        // if is end of line, the extra style we copied\n        // is probably not something we want\n        this.styles[lineIndex + qty] = newLineStyles;\n        styleCarriedOver = true;\n      }\n      if (styleCarriedOver) {\n        // skip the last line of since we already prepared it.\n        qty--;\n      }\n      // for the all the lines or all the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 0) {\n        if (copiedStyle && copiedStyle[qty - 1]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty - 1]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n        qty--;\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLength = 0;\n      // get an array of how many char per lines are being added.\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        }\n        else {\n          addedLines[linesLength]++;\n        }\n      }\n      // for the first line copy the style from the current char position.\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLength && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          // this test is required in order to close #6841\n          // when a pasted buffer begins with a newline then\n          // this.styles[cursorLoc.lineIndex + i] and copiedStyle[0]\n          // may be undefined for some reason\n          if (this.styles[cursorLoc.lineIndex + i] && copiedStyle[0]) {\n            this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n          }\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\n   * current compositionMode. It will be set to false.\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.inCompositionMode = false;\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard handler for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    // handling of RTL: in order to get things work correctly,\n    // we assume RTL writing is mirrored compared to LTR writing.\n    // so in position detection we mirror the X offset, and when is time\n    // of rendering it, we mirror it again.\n    if (this.direction === 'rtl') {\n      mouseOffset.x = this.width * this.scaleX - mouseOffset.x + width;\n    }\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' padding-top: ' + style.fontSize + ';';\n\n    if (this.hiddenTextareaContainer) {\n      this.hiddenTextareaContainer.appendChild(this.hiddenTextarea);\n    }\n    else {\n      fabric.document.body.appendChild(this.hiddenTextarea);\n    }\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  keysMapRtl: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorLeft',\n    36: 'moveCursorRight',\n    37: 'moveCursorRight',\n    38: 'moveCursorUp',\n    39: 'moveCursorLeft',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keydown event\n   * only used for arrows and combination of modifier keys.\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    var keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\n    if (e.keyCode in keyMap) {\n      this[keyMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.inCompositionMode = false;\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount,\n        selectionStart = this.selectionStart, selectionEnd = this.selectionEnd,\n        selection = selectionStart !== selectionEnd,\n        copiedStyle, removeFrom, removeTo;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = selectionStart > textareaSelection.selectionStart;\n\n    if (selection) {\n      removedText = this._text.slice(selectionStart, selectionEnd);\n      charDiff += selectionEnd - selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(selectionEnd + charDiff, selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(selectionStart, selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (insertedText.length) {\n        // let's copy some style before deleting.\n        // we want to copy the style before the cursor OR the style at the cursor if selection\n        // is bigger than 0.\n        copiedStyle = this.getSelectionStyles(selectionStart, selectionStart + 1, false);\n        // now duplicate the style one for each inserted text.\n        copiedStyle = insertedText.map(function() {\n          // this return an array of references, but that is fine since we are\n          // copying the style later.\n          return copiedStyle[0];\n        });\n      }\n      if (selection) {\n        removeFrom = selectionStart;\n        removeTo = selectionEnd;\n      }\n      else if (backDelete) {\n        // detect differences between forwardDelete and backDelete\n        removeFrom = selectionEnd - removedText.length;\n        removeTo = selectionEnd;\n      }\n      else {\n        removeFrom = selectionEnd;\n        removeTo = selectionEnd + removedText.length;\n      }\n      this.removeStyleFromTo(removeFrom, removeTo);\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        copiedStyle = fabric.copiedTextStyle;\n      }\n      this.insertNewStyleBlock(insertedText, selectionStart, copiedStyle);\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    }\n    else {\n      fabric.copiedTextStyle = null;\n    }\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length\n     + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== 'undefined' && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function() {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(\n        this._toSVG(),\n        { reviver: reviver, noStyle: true, withShadow: true }\n      );\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = fabric.util.hasStyleChanged(actualStyle, nextStyle, true);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japanese\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false,\n          map = this._styleMap[lineIndex], mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languages?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n      // fix a difference between split and graphemeSplit\n      if (words.length === 0) {\n        words.push([]);\n      }\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n        if (lineWidth > desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = splitByGrapheme ? 0 : this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function(lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    _removeExtraneousStyles: function() {\n      var linesToKeep = {};\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    var styles = fabric.util.stylesFromArray(object.styles, object.text);\n    //copy object to prevent mutation\n    var objCopy = Object.assign({}, object, { styles: styles });\n    return fabric.Object._fromObject('Textbox', objCopy, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var controlsUtils = fabric.controlsUtils,\n      scaleSkewStyleHandler = controlsUtils.scaleSkewCursorStyleHandler,\n      scaleStyleHandler = controlsUtils.scaleCursorStyleHandler,\n      scalingEqually = controlsUtils.scalingEqually,\n      scalingYOrSkewingX = controlsUtils.scalingYOrSkewingX,\n      scalingXOrSkewingY = controlsUtils.scalingXOrSkewingY,\n      scaleOrSkewActionName = controlsUtils.scaleOrSkewActionName,\n      objectControls = fabric.Object.prototype.controls;\n\n  objectControls.ml = new fabric.Control({\n    x: -0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  });\n\n  objectControls.mr = new fabric.Control({\n    x: 0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  });\n\n  objectControls.mb = new fabric.Control({\n    x: 0,\n    y: 0.5,\n    cursorStyleHandler: scaleSkewStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  });\n\n  objectControls.mt = new fabric.Control({\n    x: 0,\n    y: -0.5,\n    cursorStyleHandler: scaleSkewStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  });\n\n  objectControls.tl = new fabric.Control({\n    x: -0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleStyleHandler,\n    actionHandler: scalingEqually\n  });\n\n  objectControls.tr = new fabric.Control({\n    x: 0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleStyleHandler,\n    actionHandler: scalingEqually\n  });\n\n  objectControls.bl = new fabric.Control({\n    x: -0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleStyleHandler,\n    actionHandler: scalingEqually\n  });\n\n  objectControls.br = new fabric.Control({\n    x: 0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleStyleHandler,\n    actionHandler: scalingEqually\n  });\n\n  objectControls.mtr = new fabric.Control({\n    x: 0,\n    y: -0.5,\n    actionHandler: controlsUtils.rotationWithSnapping,\n    cursorStyleHandler: controlsUtils.rotationStyleHandler,\n    offsetY: -40,\n    withConnection: true,\n    actionName: 'rotate',\n  });\n\n  if (fabric.Textbox) {\n    // this is breaking the prototype inheritance, no time / ideas to fix it.\n    // is important to document that if you want to have all objects to have a\n    // specific custom control, you have to add it to Object prototype and to Textbox\n    // prototype. The controls are shared as references. So changes to control `tr`\n    // can still apply to all objects if needed.\n    var textBoxControls = fabric.Textbox.prototype.controls = { };\n\n    textBoxControls.mtr = objectControls.mtr;\n    textBoxControls.tr = objectControls.tr;\n    textBoxControls.br = objectControls.br;\n    textBoxControls.tl = objectControls.tl;\n    textBoxControls.bl = objectControls.bl;\n    textBoxControls.mt = objectControls.mt;\n    textBoxControls.mb = objectControls.mb;\n\n    textBoxControls.mr = new fabric.Control({\n      x: 0.5,\n      y: 0,\n      actionHandler: controlsUtils.changeWidth,\n      cursorStyleHandler: scaleSkewStyleHandler,\n      actionName: 'resizing',\n    });\n\n    textBoxControls.ml = new fabric.Control({\n      x: -0.5,\n      y: 0,\n      actionHandler: controlsUtils.changeWidth,\n      cursorStyleHandler: scaleSkewStyleHandler,\n      actionName: 'resizing',\n    });\n  }\n})();\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fabric/dist/fabric.js\n// module id = tsU9\n// module chunks = 0","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = ujcs\n// module chunks = 0","<template>\n  <div class=\"of-fabric\"\n       :class=\"{'moving': isMoving, 'dragging': isDragging, 'editing': isEditing}\">\n    <div ref=\"refFabricWrapper\"\n         class=\"of-fabric__wrapper\">\n      <canvas id=\"canvas\"\n              ref=\"refFabricCanvas\"\n              class=\"of-fabric__canvas\"></canvas>\n    </div>\n    <div class=\"of-fabric__toolbox\">\n      <el-button-group>\n        <el-popover width=\"200\"\n                    trigger=\"hover\"\n                    placement=\"bottom-end\">\n          <div>滚动鼠标滑轮可缩放</div>\n          <el-slider v-model=\"zoom\"\n                     :format-tooltip=\"percentage\"\n                     :step=\"0.1\"\n                     :min=\"0.01\"\n                     :max=\"2\"\n                     @input=\"onZoomSliderChange\"></el-slider>\n          <el-button size=\"small\"\n                     slot=\"reference\">{{ percentage(zoom) }}</el-button>\n        </el-popover>\n      </el-button-group>\n      <el-button-group>\n        <el-tooltip class=\"item\"\n                    effect=\"dark\"\n                    content=\"图片比例 1:1\"\n                    placement=\"bottom\">\n          <el-button size=\"small\"\n                     @click=\"onSetZoomByMode(1)\">1:1</el-button>\n        </el-tooltip>\n        <el-tooltip class=\"item\"\n                    effect=\"dark\"\n                    content=\"图片比例适配画布\"\n                    placement=\"bottom\">\n          <el-button size=\"small\"\n                     @click=\"onSetZoomByMode(2)\">\n            <i class=\"el-icon-refresh-right\"></i>\n          </el-button>\n        </el-tooltip>\n      </el-button-group>\n      <el-radio-group v-model=\"ctrlType\"\n                      size=\"small\"\n                      @input=\"onCtrlTypeChange\">\n        <el-tooltip v-for=\"item in ctrlList\"\n                    :key=\"item.value\"\n                    class=\"item\"\n                    effect=\"dark\"\n                    :content=\"item.label\"\n                    placement=\"bottom\">\n          <el-radio-button :label=\"item.value\">\n            <i :class=\"item.icon\"></i>\n          </el-radio-button>\n        </el-tooltip>\n      </el-radio-group>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { fabric } from 'fabric'\n\nexport default {\n  name: 'OfFabric',\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    image: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      innerValue: [],\n      canvas: null,\n      zoom: 1,\n      downPoint: null,\n      isMoving: true,\n      isDragging: false,\n      isEditing: false,\n      imageSize: {\n        width: 1,\n        height: 1\n      },\n      ctrlList: [\n        {\n          label: '移动画布(Alt)',\n          icon: 'el-icon-rank',\n          value: 'move'\n        },\n        {\n          label: '编辑选框',\n          icon: 'el-icon-edit-outline',\n          value: 'drag'\n        },\n        {\n          label: '新建选框',\n          icon: 'el-icon-edit',\n          value: 'draw'\n        }\n      ],\n      ctrlType: 'move'\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler (n) {\n        this.innerValue = n\n      }\n    }\n  },\n  mounted () {\n    this.init()\n    document.addEventListener('keydown', this.onKeyDown)\n    document.addEventListener('keyup', this.onKeyUp)\n  },\n  methods: {\n    init () {\n      const _wrapper = this.$refs.refFabricWrapper\n      const wrapperWidth = _wrapper.clientWidth\n      const wrapperHeight = _wrapper.clientHeight\n\n      this.canvas = new fabric.Canvas('canvas')\n\n      this.canvas.setDimensions({\n        width: wrapperWidth,\n        height: wrapperHeight\n      })\n\n      // this.setBackgroundImage(this.image)\n      // this.zoom = this.canvas.getZoom()\n\n      this.imageSize.width = _wrapper.clientWidth\n      this.imageSize.height = _wrapper.clientHeight\n      fabric.Image.fromURL(this.image, img => {\n        if (img) {\n          this.imageSize.width = img.width\n          this.imageSize.height = img.height\n\n          this.canvas.setBackgroundImage(\n            img,\n            this.canvas.renderAll.bind(this.canvas)\n          )\n          this.zoom = Math.min(wrapperWidth / this.imageSize.width, wrapperHeight / this.imageSize.height)\n          this.canvas.setZoom(this.zoom)\n        }\n      })\n\n      if (this.innerValue.length > 0) {\n        this.innerValue.forEach(item => {\n          const polygonData = item.map(point => {\n            return { x: point[0], y: point[1] }\n          })\n          const currentPolygon = new fabric.Polygon(\n            polygonData,\n            {\n              fill: 'transparent',\n              stroke: '#f00',\n              strokeWidth: 2\n            }\n          )\n          this.canvas.add(currentPolygon)\n\n          // const rect = new fabric.Rect({\n          //   top: item.top,\n          //   left: item.left,\n          //   width: item.width,\n          //   height: item.height,\n          //   fill: 'transparent',\n          //   stroke: '#f00',\n          //   strokeWidth: 2\n          // })\n          // this.canvas.add(rect)\n        })\n      }\n\n      this.onCtrlTypeChange()\n\n      this.canvas.on('mouse:wheel', this.onMouseWheel)\n      this.canvas.on('mouse:down', this.onMouseDown)\n      this.canvas.on('mouse:move', this.onMouseMove)\n      this.canvas.on('mouse:up', this.onMouseUp)\n    },\n    percentage (val) {\n      return Math.ceil(val * 100) + '%'\n    },\n    setBackgroundImage (url) {\n      fabric.Image.fromURL(url, img => {\n        if (img) {\n          this.canvas.setBackgroundImage(\n            img,\n            this.canvas.renderAll.bind(this.canvas)\n          )\n        }\n      })\n    },\n    onZoomSliderChange (val) {\n      this.canvas.setZoom(val)\n    },\n    onSetZoomByMode (mode) {\n      if (mode) {\n        switch (mode) {\n          case 1:\n            this.zoom = 1\n            break\n          case 2:\n            const _wrapper = this.$refs.refFabricWrapper\n            const wrapperWidth = _wrapper.clientWidth\n            const wrapperHeight = _wrapper.clientHeight\n            this.zoom = Math.min(wrapperWidth / this.imageSize.width, wrapperHeight / this.imageSize.height)\n            this.canvas.setZoom(this.zoom)\n            break\n          default:\n            this.zoom = 1\n            break\n        }\n      }\n    },\n    onCtrlTypeChange () {\n      this.isMoving = this.ctrlType === 'move'\n      this.isEditing = this.ctrlType === 'draw'\n\n      if (this.ctrlType === 'move') {\n        this.canvas.selection = false\n        this.canvas.skipTargetFind = true // 禁止选中\n      } else if (this.ctrlType === 'drag') {\n        this.canvas.selection = true\n        this.canvas.selectionColor = 'rgba(100, 100, 255, 0.3)'\n        this.canvas.selectionBorderColor = 'rgba(255, 255, 255, 0.3)'\n        this.canvas.skipTargetFind = false // 允许选中\n      } else if (this.ctrlType === 'draw') {\n        this.canvas.selection = true\n        this.canvas.selectionColor = 'transparent'\n        this.canvas.selectionBorderColor = 'rgba(255, 0, 0, 0.2)'\n        this.canvas.skipTargetFind = true // 禁止选中\n      }\n    },\n    onKeyDown (e) {\n      const { keyCode } = e\n      switch (keyCode) {\n        case 18:\n          this.isMoving = true\n          break\n        case 46:\n          this.canvas.getActiveObjects().forEach(obj => {\n            this.canvas.remove(obj)\n          })\n          break\n      }\n    },\n    onKeyUp (e) {\n      const { keyCode } = e\n      switch (keyCode) {\n        case 18:\n          this.isMoving = false\n          break\n      }\n    },\n    onMouseWheel (opt) {\n      let delta = opt.e.deltaY // 滚轮，向上滚一下是 -100，向下滚一下是 100\n      this.zoom *= 0.999 ** delta\n      if (this.zoom > 2) this.zoom = 2\n      if (this.zoom < 0.01) this.zoom = 0.01\n      this.canvas.zoomToPoint({ // 关键点\n        x: opt.e.offsetX,\n        y: opt.e.offsetY\n      }, this.zoom)\n      opt.e.preventDefault()\n      opt.e.stopPropagation()\n    },\n    onMouseDown (opt) {\n      let evt = opt.e\n      if (this.ctrlType === 'move' || evt.altKey === true) { // 是否按住alt\n        this.isDragging = true // isDragging 是自定义的\n        this.canvas.lastPosX = evt.clientX // lastPosX 是自定义的\n        this.canvas.lastPosY = evt.clientY // lastPosY 是自定义的\n      } else if (this.ctrlType === 'draw') {\n        this.downPoint = opt.absolutePointer\n      }\n    },\n    onMouseMove (opt) {\n      if (this.isDragging) {\n        let evt = opt.e\n        let vpt = this.canvas.viewportTransform // 聚焦视图的转换\n        vpt[4] += evt.clientX - this.canvas.lastPosX\n        vpt[5] += evt.clientY - this.canvas.lastPosY\n        this.canvas.requestRenderAll()\n        this.canvas.lastPosX = evt.clientX\n        this.canvas.lastPosY = evt.clientY\n      }\n    },\n    onMouseUp (opt) {\n      let evt = opt.e\n      this.canvas.setViewportTransform(this.canvas.viewportTransform) // 设置此画布实例的视口转换\n      this.isDragging = false\n\n      if (this.ctrlType === 'draw' && evt.altKey === false) {\n        this.createPolygon(opt.absolutePointer)\n      }\n\n      this.$nextTick(() => {\n        if (this.ctrlType !== 'move' && evt.altKey === false) {\n          this.handlerComplete(this.canvas.getObjects())\n        }\n      })\n    },\n    handlerComplete (list) {\n      const points = list && list.map(item => {\n        const { aCoords } = item\n        const { tl, tr, bl, br } = aCoords\n        return [\n          [tl.x, tl.y],\n          [tr.x, tr.y],\n          [br.x, br.y],\n          [bl.x, bl.y]\n        ]\n      })\n      this.$emit('input', points)\n    },\n    createRect (pointer) {\n      // 点击事件，不生成矩形\n      if (JSON.stringify(this.downPoint) === JSON.stringify(pointer)) {\n        return\n      }\n      // 创建矩形\n      // 矩形参数计算\n      let top = Math.min(this.downPoint.y, pointer.y)\n      let left = Math.min(this.downPoint.x, pointer.x)\n      let width = Math.abs(this.downPoint.x - pointer.x)\n      let height = Math.abs(this.downPoint.y - pointer.y)\n\n      // 矩形对象\n      const rect = new fabric.Rect({\n        top,\n        left,\n        width,\n        height,\n        fill: 'transparent',\n        stroke: '#f00',\n        strokeWidth: 2\n      })\n\n      // 将矩形添加到画布上\n      this.canvas.add(rect)\n\n      this.downPoint = null\n    },\n    createPolygon (pointer) {\n      if (JSON.stringify(this.downPoint) === JSON.stringify(pointer)) {\n        return\n      }\n      const polygonData = [\n        {\n          x: Math.min(this.downPoint.x, pointer.x),\n          y: Math.min(this.downPoint.y, pointer.y)\n        },\n        {\n          x: Math.max(this.downPoint.x, pointer.x),\n          y: Math.min(this.downPoint.y, pointer.y)\n        },\n        {\n          x: Math.max(this.downPoint.x, pointer.x),\n          y: Math.max(this.downPoint.y, pointer.y)\n        },\n        {\n          x: Math.min(this.downPoint.x, pointer.x),\n          y: Math.max(this.downPoint.y, pointer.y)\n        }\n      ]\n      const currentPolygon = new fabric.Polygon(\n        polygonData,\n        {\n          fill: 'transparent',\n          stroke: '#f00',\n          strokeWidth: 2\n        }\n      )\n      this.canvas.add(currentPolygon)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.of-fabric {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.of-fabric.editing /deep/ .of-fabric__canvas {\n  cursor: crosshair !important;\n}\n\n.of-fabric.moving /deep/ .of-fabric__canvas {\n  cursor: grab !important;\n}\n\n.of-fabric.dragging /deep/ .of-fabric__canvas {\n  cursor: grabbing !important;\n}\n\n.of-fabric__wrapper,\n.of-fabric__canvas {\n  width: 100%;\n  height: 100%;\n}\n\n.of-fabric__toolbox {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  padding: 5px;\n  border-radius: 4px;\n  background: rgba(0, 0, 0, 0.5);\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/fabric.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"of-fabric\",class:{'moving': _vm.isMoving, 'dragging': _vm.isDragging, 'editing': _vm.isEditing}},[_c('div',{ref:\"refFabricWrapper\",staticClass:\"of-fabric__wrapper\"},[_c('canvas',{ref:\"refFabricCanvas\",staticClass:\"of-fabric__canvas\",attrs:{\"id\":\"canvas\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"of-fabric__toolbox\"},[_c('el-button-group',[_c('el-popover',{attrs:{\"width\":\"200\",\"trigger\":\"hover\",\"placement\":\"bottom-end\"}},[_c('div',[_vm._v(\"滚动鼠标滑轮可缩放\")]),_vm._v(\" \"),_c('el-slider',{attrs:{\"format-tooltip\":_vm.percentage,\"step\":0.1,\"min\":0.01,\"max\":2},on:{\"input\":_vm.onZoomSliderChange},model:{value:(_vm.zoom),callback:function ($$v) {_vm.zoom=$$v},expression:\"zoom\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"slot\":\"reference\",\"size\":\"small\"},slot:\"reference\"},[_vm._v(_vm._s(_vm.percentage(_vm.zoom)))])],1)],1),_vm._v(\" \"),_c('el-button-group',[_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"图片比例 1:1\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.onSetZoomByMode(1)}}},[_vm._v(\"1:1\")])],1),_vm._v(\" \"),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"图片比例适配画布\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.onSetZoomByMode(2)}}},[_c('i',{staticClass:\"el-icon-refresh-right\"})])],1)],1),_vm._v(\" \"),_c('el-radio-group',{attrs:{\"size\":\"small\"},on:{\"input\":_vm.onCtrlTypeChange},model:{value:(_vm.ctrlType),callback:function ($$v) {_vm.ctrlType=$$v},expression:\"ctrlType\"}},_vm._l((_vm.ctrlList),function(item){return _c('el-tooltip',{key:item.value,staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":item.label,\"placement\":\"bottom\"}},[_c('el-radio-button',{attrs:{\"label\":item.value}},[_c('i',{class:item.icon})])],1)}),1)],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1131a0eb\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/fabric.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1131a0eb\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./fabric.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./fabric.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./fabric.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1131a0eb\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./fabric.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1131a0eb\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/fabric.vue\n// module id = null\n// module chunks = ","<template>\n  <el-container>\n    <el-header>\n      <el-button type=\"text\"\n                 icon=\"el-icon-arrow-left\">返回</el-button>\n      <div class=\"title\">{{ title }}</div>\n    </el-header>\n    <el-main>\n      <of-fabric v-model=\"calloutList\"\n                 :image=\"demoPdf\"></of-fabric>\n    </el-main>\n  </el-container>\n</template>\n\n<script>\nimport OfFabric from '@/components/fabric'\n\nexport default {\n  name: 'Demo',\n  components: {\n    OfFabric\n  },\n  data () {\n    return {\n      demoPdf: 'static/images/demo.jpg',\n      title: '主件#PY2CI084021DSS043DD-1@1-A1-CAE-中文.pdf',\n      calloutList: [\n        [[700, 393], [974, 393], [974, 523], [700, 523]],\n        [[1215, 521], [1532, 521], [1532, 638], [1215, 638]],\n        [[1236, 965], [1396, 965], [1396, 1038], [1236, 1038]]\n      ]\n    }\n  },\n  mounted () {\n  },\n  methods: {\n\n  }\n}\n</script>\n\n<style scoped>\n.el-container {\n  width: 100vw;\n  height: 100vh;\n  padding: 5px;\n}\n\n.el-header {\n  padding: 5px;\n  border-bottom: dashed 1px #ccc;\n  height: auto !important;\n}\n\n.el-header .title {\n  display: inline-block;\n  margin-left: 10px;\n  font-size: 14px;\n  line-height: 1;\n  padding: 13px 0;\n}\n\n.el-main {\n  padding: 5px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/demo.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-container',[_c('el-header',[_c('el-button',{attrs:{\"type\":\"text\",\"icon\":\"el-icon-arrow-left\"}},[_vm._v(\"返回\")]),_vm._v(\" \"),_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.title))])],1),_vm._v(\" \"),_c('el-main',[_c('of-fabric',{attrs:{\"image\":_vm.demoPdf},model:{value:(_vm.calloutList),callback:function ($$v) {_vm.calloutList=$$v},expression:\"calloutList\"}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-28c21ec3\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/demo.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-28c21ec3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./demo.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./demo.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./demo.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-28c21ec3\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./demo.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-28c21ec3\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/demo.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}